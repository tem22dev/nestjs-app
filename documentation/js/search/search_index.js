var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.184,1,3.028]],["body/controllers/AppController.html",[0,2.126,1,5.433,2,1.818,3,0.179,4,0.159,5,0.12,6,5.565,7,0.239,8,0.012,9,0.964,10,0.179,11,0.29,12,2.524,13,0.01,14,0.01]],["title/modules/AppModule.html",[15,1.014,16,3.028]],["body/modules/AppModule.html",[1,4.293,2,1.433,3,0.098,4,0.087,5,0.066,7,0.314,8,0.012,9,0.528,10,0.098,11,0.159,13,0.007,14,0.007,15,1.438,16,6.216,17,1.432,18,1.486,19,1.604,20,1.604,21,1.486,22,2.707,23,1.604,24,3.047,25,3.047,26,3.047,27,4.834,28,4.834,29,4.834,30,4.834,31,4.834,32,4.834,33,4.834,34,4.834,35,4.834,36,4.542,37,4.834,38,4.542,39,4.834,40,2.31,41,1.604,42,1.543,43,3.484,44,2.707,45,3.484,46,3.484,47,1.819,48,0.995,49,4.387,50,3.692,51,1.904,52,3.484,53,3.484,54,3.484,55,1.741,56,1.246,57,1.741,58,0.907,59,3.484,60,3.484,61,3.484,62,3.484,63,3.484,64,3.484,65,3.484,66,3.484,67,3.484,68,3.484,69,2.759,70,3.484,71,2.544,72,2.372,73,3.484,74,3.484,75,3.484,76,3.484,77,2.759,78,1.432,79,3.484,80,3.484,81,3.484,82,5.017,83,3.484,84,0.935,85,2.759,86,3.484,87,3.047,88,3.047,89,1.486,90,2.372,91,3.484,92,3.484,93,1.246,94,3.484]],["title/injectables/AppService.html",[39,2.823,95,0.816]],["body/injectables/AppService.html",[3,0.18,4,0.16,5,0.121,7,0.242,8,0.012,9,0.973,10,0.18,11,0.292,13,0.01,14,0.01,39,5.094,95,1.472,96,2.377,97,5.617]],["title/controllers/AuthController.html",[0,1.184,98,3.028]],["body/controllers/AuthController.html",[0,0.992,2,0.992,3,0.097,4,0.087,5,0.065,7,0.291,8,0.012,9,0.526,10,0.097,11,0.158,12,1.377,13,0.007,14,0.007,71,2.535,78,2.412,84,1.827,93,2.099,98,3.654,99,3.036,100,1.664,101,3.036,102,0.363,103,1.43,104,5.004,105,5.004,106,5.004,107,5.004,108,5.004,109,3.472,110,2.615,111,1.518,112,3.472,113,2.873,114,2.389,115,0.896,116,3.472,117,2.138,118,0.801,119,0.867,120,2.071,121,1.944,122,1.735,123,3.472,124,5.312,125,3.472,126,3.472,127,4.377,128,3.472,129,5.132,130,3.472,131,3.472,132,3.472,133,3.472,134,5.178,135,3.472,136,3.654,137,3.472,138,3.472,139,3.876,140,3.472,141,1.386,142,3.472,143,1.898,144,1.813,145,3.472,146,5.132,147,3.036,148,3.883,149,1.664,150,1.538,151,2.535,152,2.75,153,3.472,154,3.548,155,2.75,156,3.026,157,2.1,158,2.364,159,2.1,160,1.481,161,2.736,162,2.75,163,3.036,164,5.004,165,2.1,166,3.472,167,2.304,168,3.036,169,3.472,170,3.036,171,3.472,172,3.472,173,3.472,174,5.868,175,3.472,176,3.472,177,3.472,178,3.472,179,3.472,180,3.472,181,2.75,182,3.472,183,1.09,184,2.75,185,1.598,186,3.472,187,3.472,188,3.472,189,3.472,190,3.472,191,3.472,192,3.472,193,3.472,194,3.472,195,3.472,196,3.472]],["title/modules/AuthModule.html",[15,1.014,27,2.823]],["body/modules/AuthModule.html",[2,1.683,3,0.123,4,0.109,5,0.083,7,0.308,8,0.012,9,0.665,10,0.123,11,0.2,13,0.008,14,0.008,15,1.627,17,1.804,18,1.871,19,2.02,20,2.02,21,1.871,22,3.062,23,3.062,27,5.704,36,4.884,38,4.884,40,2.712,41,2.02,42,1.943,44,3.062,49,5.152,50,4.08,51,2.399,77,3.475,78,1.804,85,3.475,98,4.856,154,4.985,155,3.475,197,3.838,198,4.388,199,3.838,200,3.838,201,5.198,202,5.198,203,4.388,204,4.388,205,5.891,206,2.808,207,4.388,208,4.388,209,3.475,210,4.388,211,4.665,212,4.388,213,4.388,214,4.388,215,3.838,216,3.838,217,4.388,218,3.838,219,4.388,220,3.838]],["title/injectables/AuthService.html",[95,0.816,154,2.508]],["body/injectables/AuthService.html",[3,0.072,4,0.064,5,0.049,7,0.264,8,0.012,9,0.391,10,0.072,11,0.117,12,1.589,13,0.006,14,0.006,50,3.8,51,1.41,78,3.094,84,1.777,93,1.757,95,0.788,96,0.955,102,0.27,103,1.144,110,2.369,114,2.219,115,0.871,117,1.882,118,0.886,119,0.733,120,1.823,121,1.581,122,2.996,124,4.816,127,4.842,134,3.586,136,4.632,139,3.027,141,1.109,154,2.423,157,1.56,158,1.757,159,1.56,160,1.1,161,3.619,162,2.043,167,2.549,183,2.437,184,3.172,185,3.151,209,2.043,211,3.172,215,3.504,218,2.256,220,2.256,221,2.256,222,0.98,223,4.911,224,4.911,225,4.911,226,3.504,227,4.006,228,2.58,229,3.027,230,6.62,231,2.58,232,3.504,233,4.006,234,2.58,235,4.006,236,2.58,237,4.006,238,2.58,239,4.006,240,1.015,241,4.295,242,2.58,243,1.56,244,3.172,245,2.423,246,2.092,247,2.58,248,2.58,249,1.481,250,2.043,251,2.58,252,4.006,253,2.58,254,2.58,255,2.925,256,4.006,257,1.946,258,4.006,259,4.006,260,2.256,261,2.891,262,3.504,263,2.256,264,1.601,265,2.348,266,4.295,267,4.006,268,4.006,269,3.504,270,4.006,271,4.911,272,3.504,273,4.006,274,5.024,275,4.006,276,2.58,277,4.006,278,4.006,279,4.006,280,4.911,281,4.006,282,4.911,283,2.256,284,2.58,285,2.58,286,1.1,287,2.58,288,4.006,289,2.58,290,2.58,291,2.58,292,2.58,293,2.092,294,4.006,295,4.006,296,4.911,297,2.58,298,2.58,299,2.256,300,2.58,301,2.58,302,2.58]],["title/controllers/CompaniesController.html",[0,1.184,303,3.028]],["body/controllers/CompaniesController.html",[0,1.039,2,1.039,3,0.102,4,0.091,5,0.069,7,0.271,8,0.012,9,0.551,10,0.102,11,0.165,13,0.007,14,0.007,56,1.301,84,1.86,89,2.797,100,1.743,102,0.38,103,1.478,110,2.796,111,1.545,114,2.419,115,0.912,117,2.176,118,0.815,119,0.847,120,2.108,121,1.979,141,1.432,143,2.828,144,2.701,148,3.641,149,1.743,150,1.61,160,1.551,240,1.171,303,3.777,304,3.18,305,5.265,306,1.432,307,2.126,308,2.126,309,2.126,310,2.126,311,3.636,312,4.608,313,2.327,314,2.709,315,3.636,316,1.61,317,2.904,318,3.636,319,3.522,320,3.777,321,3.636,322,2.291,323,1.495,324,3.636,325,2.802,326,3.636,327,1.495,328,2.476,329,3.636,330,1.817,331,5.156,332,2.655,333,3.636,334,1.988,335,2.087,336,2.206,337,3.853,338,3.18,339,1.495,340,4.096,341,1.495,342,3.636,343,1.674,344,1.551,345,2.199,346,2.087,347,3.636,348,3.31,349,2.199,350,2.199,351,3.636,352,2.087,353,2.087,354,3.636,355,2.327,356,2.199,357,2.327,358,3.636,359,2.087,360,2.327,361,2.087,362,3.636]],["title/modules/CompaniesModule.html",[15,1.014,28,2.823]],["body/modules/CompaniesModule.html",[2,1.935,3,0.153,4,0.136,5,0.103,7,0.299,8,0.012,9,0.825,10,0.153,11,0.248,13,0.009,14,0.009,15,1.804,17,2.239,18,2.323,19,2.507,20,2.507,21,2.323,22,3.395,23,2.507,28,5.508,40,3.119,41,2.507,42,2.412,44,2.507,47,2.844,48,1.556,118,0.641,303,5.384,314,1.949,337,5.176,338,4.763,363,4.763,364,4.763,365,5.446,366,5.446,367,4.946,368,4.763,369,2.977,370,3.977,371,2.239]],["title/injectables/CompaniesService.html",[95,0.816,337,2.653]],["body/injectables/CompaniesService.html",[3,0.154,4,0.077,5,0.058,7,0.278,8,0.012,9,0.468,10,0.087,11,0.141,12,1.226,13,0.006,14,0.006,48,0.883,55,1.544,56,1.963,57,1.544,58,1.428,78,3.269,84,1.743,89,3.005,95,0.904,96,1.144,102,0.323,103,1.313,110,2.694,113,1.774,114,2.18,115,0.895,117,2.137,118,0.801,119,0.832,120,2.07,121,1.855,122,3.245,141,0.856,160,1.318,167,1.423,183,2.039,185,3.244,240,1.093,249,1.774,257,1.951,264,1.384,293,1.613,306,1.272,307,1.889,308,1.889,309,1.889,310,1.889,312,3.887,314,1.963,316,2.035,317,2.429,322,2.429,323,1.889,325,2.608,327,1.889,330,2.296,331,4.93,336,1.318,337,2.94,339,1.27,340,3.639,341,1.27,368,2.702,372,2.702,373,3.09,374,3.321,375,3.09,376,4.595,377,4.019,378,3.09,379,2.518,380,3.09,381,3.09,382,3.09,383,3.09,384,1.689,385,2.256,386,1.869,387,1.774,388,1.774,389,3.09,390,3.09,391,1.318,392,3.317,393,3.317,394,1.869,395,1.869,396,2.104,397,1.869,398,1.869,399,1.869,400,1.869,401,1.869,402,1.613,403,2.779,404,1.869,405,2.779,406,3.09,407,2.779,408,1.869,409,2.512,410,3.09,411,1.869,412,1.869,413,1.869,414,1.869,415,1.869,416,1.869,417,1.689,418,1.869,419,1.869,420,1.869,421,1.977,422,1.977,423,2.104,424,3.09,425,4.595,426,1.106,427,1.368,428,3.09]],["title/classes/Company.html",[11,0.189,314,1.484]],["body/classes/Company.html",[3,0.112,4,0.099,5,0.075,7,0.208,8,0.012,10,0.177,11,0.181,13,0.008,14,0.008,48,1.138,58,1.435,93,1.426,102,0.416,111,1.794,115,1.059,118,0.744,119,1.024,183,1.251,222,1.349,240,1.137,257,1.752,264,1.596,286,2.698,314,1.974,367,2.91,371,2.268,385,2.91,391,2.698,426,2.263,427,2.801,429,0.975,430,2.91,431,3.303,432,3.631,433,2.912,434,3.631,435,4.307,436,3.032,437,5.099,438,3.985,439,3.414,440,3.985,441,3.631,442,3.826,443,4.484,444,3.985,445,3.985,446,3.985,447,3.985,448,2.757,449,3.985,450,3.985,451,3.985,452,3.985,453,3.985,454,2.41,455,3.166,456,2.41,457,3.826,458,3.485]],["title/classes/Company-1.html",[11,0.157,314,1.237,402,1.805]],["body/classes/Company-1.html",[3,0.107,4,0.095,5,0.072,7,0.233,8,0.012,10,0.107,11,0.305,13,0.007,14,0.007,58,1.393,93,1.365,102,0.399,111,1.193,115,0.704,118,0.83,119,0.819,141,1.482,222,1.309,240,1.101,246,2.795,257,1.712,314,2.525,379,1.412,429,0.934,435,3.645,439,3.085,448,2.675,459,4.895,460,2.787,461,2.464,462,3.26,463,3.816,464,3.816,465,4.209,466,1.993,467,3.237,468,4.239,469,4.209,470,3.425,471,3.425,472,3.237,473,2.926,474,1.412,475,2.308,476,3.26,477,3.245,478,3.505,479,3.496,480,3.496,481,3.846,482,3.858,483,3.858,484,4.805,485,3.022,486,2.787,487,3.908,488,4.239,489,4.239,490,3.908,491,4.895,492,3.645,493,4.895,494,3.956]],["title/classes/Company-2.html",[11,0.157,90,2.354,314,1.237]],["body/classes/Company-2.html",[3,0.102,4,0.091,5,0.069,7,0.247,8,0.012,10,0.169,11,0.328,13,0.007,14,0.007,58,1.346,102,0.38,111,1.153,115,0.681,118,0.872,119,0.802,139,1.988,156,2.199,157,3.641,165,2.199,222,1.265,240,1.128,243,3.128,257,1.667,264,1.817,265,1.914,314,2.479,344,2.206,379,2.427,429,0.889,431,3.424,433,2.381,461,2.772,462,3.311,466,1.898,470,3.31,471,3.31,472,3.641,473,2.828,474,1.346,476,3.237,477,3.355,478,3.434,479,3.566,480,3.566,482,2.828,483,2.828,495,2.327,496,3.636,497,3.636,498,4.396,499,3.009,500,3.128,501,1.988,502,3.128,503,3.777,504,3.777,505,3.278,506,3.966,507,3.966,508,3.522,509,2.655,510,2.655]],["title/classes/CreateCompanyDto.html",[11,0.189,312,2.653]],["body/classes/CreateCompanyDto.html",[3,0.134,4,0.12,5,0.09,7,0.18,8,0.012,10,0.134,11,0.284,13,0.009,14,0.009,102,0.501,111,1.641,115,0.968,118,0.898,119,0.899,222,1.528,240,1.142,312,3.996,429,1.173,431,3.985,433,3.514,435,5.197,462,3.027,474,1.774,476,2.919,477,3.322,478,3.446,479,3.578,480,3.578,499,2.395,511,6.674,512,3.796,513,3.678,514,4.793,515,4.793,516,4.793,517,4.793]],["title/classes/CreateFileDto.html",[11,0.189,518,2.653]],["body/classes/CreateFileDto.html",[3,0.183,4,0.163,5,0.123,8,0.011,10,0.183,11,0.297,13,0.011,14,0.011,429,1.596,518,4.831,519,5.705,520,5.166]],["title/classes/CreateJobDto.html",[11,0.189,475,2.508]],["body/classes/CreateJobDto.html",[3,0.08,4,0.071,5,0.054,7,0.197,8,0.012,10,0.08,11,0.265,13,0.006,14,0.006,58,1.125,93,1.547,102,0.298,111,1.671,115,0.986,118,0.777,119,0.94,141,1.197,222,1.057,240,1.107,246,2.257,257,0.789,314,2.453,379,1.6,429,0.697,435,4.269,439,3.252,448,2.914,459,6.018,460,2.08,461,1.311,462,3.05,465,3.557,466,1.487,467,2.614,468,3.423,469,3.557,470,2.766,471,2.766,472,2.614,473,2.363,474,1.054,475,2.614,476,3.133,477,3.326,478,3.565,479,3.583,480,3.498,481,4.152,482,4.032,483,4.032,484,5.023,485,2.256,486,2.08,487,4.578,488,4.965,489,4.965,490,4.578,491,5.43,492,2.943,493,5.43,494,4.388,513,3.686,521,2.491,522,2.849,523,4.323,524,4.323,525,2.849,526,2.849,527,2.849,528,2.849,529,2.849,530,2.849,531,2.849,532,2.849,533,2.849,534,2.491,535,2.491,536,2.849,537,2.849]],["title/classes/CreatePermissionDto.html",[11,0.189,538,2.653]],["body/classes/CreatePermissionDto.html",[3,0.135,4,0.12,5,0.091,7,0.181,8,0.012,10,0.135,11,0.285,13,0.009,14,0.009,15,1.868,102,0.502,111,1.642,115,0.969,118,0.899,119,0.9,222,1.53,240,1.142,429,1.175,462,3.029,474,1.778,476,2.922,477,3.324,478,3.448,479,3.58,480,3.58,513,3.681,538,4.002,539,6.679,540,3.805,541,4.887,542,5.2,543,4.804,544,4.804,545,4.804,546,4.804]],["title/classes/CreateResumeDto.html",[11,0.189,547,2.267]],["body/classes/CreateResumeDto.html",[3,0.106,4,0.094,5,0.071,7,0.2,8,0.012,10,0.149,11,0.279,13,0.007,14,0.007,58,1.38,102,0.394,111,1.624,115,0.959,119,0.89,222,1.298,240,1.058,264,1.889,325,1.963,429,0.922,461,3.518,462,3.123,474,1.394,476,3.213,477,3.407,478,3.499,479,3.633,480,3.633,482,2.9,483,2.06,499,3.068,500,3.713,502,3.208,513,3.51,547,2.9,548,5.928,549,2.411,550,5.58,551,5.58,552,3.84,553,5.928,554,5.128,555,3.768,556,2.984,557,3.768,558,3.768,559,3.768,560,3.295,561,3.768,562,2.411,563,4.639]],["title/classes/CreateRoleDto.html",[11,0.189,564,2.653]],["body/classes/CreateRoleDto.html",[3,0.131,4,0.116,5,0.088,7,0.231,8,0.012,10,0.131,11,0.279,13,0.009,14,0.009,58,1.596,93,1.669,102,0.487,111,1.624,115,0.958,118,0.89,119,0.89,222,1.501,240,1.029,261,3.95,429,1.141,433,3.483,448,3.066,461,2.824,462,3.001,467,3.71,468,4.858,474,1.726,476,2.888,477,3.303,478,3.426,479,3.558,480,3.439,486,3.406,494,4.841,500,3.71,513,3.639,564,3.925,565,6.616,566,3.694,567,4.664,568,4.664,569,4.664,570,4.664,571,4.664,572,4.664,573,4.664]],["title/classes/CreateSubscriberDto.html",[11,0.189,574,2.653]],["body/classes/CreateSubscriberDto.html",[3,0.135,4,0.12,5,0.091,7,0.181,8,0.012,10,0.135,11,0.285,13,0.009,14,0.009,93,2.238,102,0.502,111,1.55,115,0.915,118,0.899,119,0.85,222,1.53,240,1.142,264,1.755,429,1.175,462,2.922,467,3.782,472,3.782,474,1.778,476,3.029,477,3.028,478,3.448,479,3.262,480,3.079,481,4.691,482,4.027,483,4.027,484,5.016,485,3.805,486,3.508,499,3.126,513,3.126,534,4.202,535,4.202,574,4.002,575,6.442,576,3.805,577,4.202,578,4.804,579,4.804,580,4.804]],["title/classes/CreateUserCvDto.html",[11,0.189,562,2.653]],["body/classes/CreateUserCvDto.html",[3,0.116,4,0.103,5,0.078,7,0.213,8,0.012,10,0.159,11,0.293,13,0.008,14,0.008,58,1.47,102,0.431,111,1.437,115,0.848,119,0.788,222,1.382,240,1.026,264,1.626,325,2.565,429,1.01,461,3.533,462,3.181,474,1.527,476,3.237,477,3.379,478,3.481,479,3.614,480,3.551,482,2.256,483,2.256,499,2.824,500,3.897,502,2.496,513,3.22,547,2.256,548,5.488,549,2.641,550,5.788,551,5.788,552,3.089,553,6.078,554,4.126,562,3.616,563,6.061,581,5.651,582,4.127,583,4.127,584,4.127]],["title/classes/CreateUserDto.html",[11,0.189,501,2.267]],["body/classes/CreateUserDto.html",[3,0.086,4,0.076,5,0.058,7,0.227,8,0.012,10,0.153,11,0.309,13,0.006,14,0.006,58,1.187,102,0.32,111,1.609,115,0.95,118,0.849,119,0.918,139,1.672,156,1.849,157,4.461,165,1.849,222,1.115,240,1.122,243,2.757,257,0.847,264,1.895,265,2.392,314,2.513,344,1.945,379,2.509,429,0.748,431,3.667,433,2.099,461,2.51,462,3.209,466,1.597,470,2.918,471,2.918,472,3.297,473,2.493,474,1.132,476,3.171,477,3.398,478,3.484,479,3.618,480,3.601,482,2.981,483,2.493,495,1.957,498,3.981,499,3.02,500,2.757,501,2.493,502,3.297,503,3.981,504,3.981,505,3.388,506,4.247,507,4.247,508,3.105,509,2.233,510,2.233,513,3.388,521,2.675,556,2.422,585,3.058,586,3.058,587,3.058,588,3.058,589,3.058,590,3.058,591,3.058,592,3.058,593,3.058]],["title/controllers/DatabasesController.html",[0,1.184,594,3.028]],["body/controllers/DatabasesController.html",[0,1.764,2,1.764,3,0.173,4,0.154,5,0.116,7,0.275,8,0.012,9,0.935,10,0.173,11,0.281,13,0.01,14,0.01,100,2.959,343,2.843,344,2.633,594,5.338,595,5.4,596,6.174,597,4.983,598,5.4,599,6.174]],["title/modules/DatabasesModule.html",[15,1.014,29,2.823]],["body/modules/DatabasesModule.html",[2,1.814,3,0.138,4,0.123,5,0.093,7,0.306,8,0.012,9,0.745,10,0.138,11,0.224,13,0.009,14,0.009,15,1.72,17,2.022,18,2.097,19,2.264,20,2.264,21,2.097,22,3.238,23,2.264,29,5.532,40,2.923,41,2.264,42,2.178,44,2.264,47,2.568,48,1.405,114,1.45,118,0.827,229,4.308,250,3.895,265,1.82,369,2.689,371,2.891,594,5.135,597,5.042,598,4.301,600,4.301,601,4.301,602,4.918,603,4.918,604,4.324,605,4.301,606,2.264,607,4.324,608,3.895,609,4.063,610,3.349,611,3.895,612,3.895,613,3.591]],["title/injectables/DatabasesService.html",[95,0.816,597,2.653]],["body/injectables/DatabasesService.html",[3,0.087,4,0.077,5,0.058,7,0.278,8,0.012,9,0.469,10,0.087,11,0.141,12,1.825,13,0.006,14,0.006,48,0.884,50,4.047,51,1.692,55,1.547,56,1.107,57,1.547,58,0.805,78,2.799,90,2.107,93,1.646,95,0.905,96,1.145,102,0.323,103,1.314,114,1.618,115,0.8,117,0.972,118,0.871,119,0.378,120,0.941,121,1.314,141,1.274,167,3.518,183,2.214,185,3.467,222,1.125,229,3.323,232,4.802,245,1.871,246,1.616,250,2.451,255,2.26,261,3.392,264,1.534,265,2.404,344,2.341,374,4.117,384,1.692,402,1.616,431,3.174,433,2.118,494,2.944,502,1.871,505,3.038,506,3.676,507,3.676,597,2.944,605,2.706,606,1.425,608,2.451,610,2.107,614,2.706,615,6.079,616,6.079,617,6.808,618,3.095,619,4.802,620,4.348,621,4.6,622,4.023,623,3.095,624,3.095,625,4.6,626,2.107,627,1.98,628,2.107,629,4.348,630,2.451,631,4.009,632,4.6,633,2.107,634,2.706,635,3.095,636,2.451,637,3.095,638,3.095,639,3.095,640,3.095,641,5.49,642,5.49,643,3.095,644,4.636,645,3.095,646,2.451,647,5.49,648,3.095,649,3.095,650,3.095,651,3.643,652,3.095,653,2.706,654,2.706,655,3.095,656,3.095,657,3.095,658,3.095,659,3.095,660,3.095,661,3.095,662,2.451,663,5.49,664,3.095,665,3.095,666,3.643,667,3.095,668,2.706,669,6.079,670,6.079,671,6.079,672,6.079,673,4.6,674,3.095,675,2.706,676,3.095,677,4.6,678,3.095,679,3.095,680,1.98,681,3.095,682,2.451]],["title/classes/File.html",[5,0.078,11,0.189]],["body/classes/File.html",[3,0.184,4,0.163,5,0.15,8,0.011,10,0.184,11,0.298,13,0.011,14,0.011,429,1.601,683,5.723]],["title/controllers/FilesController.html",[0,1.184,684,3.028]],["body/controllers/FilesController.html",[0,1.061,2,1.061,3,0.104,4,0.093,5,0.125,7,0.273,8,0.012,9,0.562,10,0.104,11,0.169,13,0.007,14,0.007,56,1.329,84,1.946,100,1.78,102,0.388,103,1.5,111,1.617,115,0.954,117,2.194,118,0.822,119,0.854,120,2.125,121,2.071,141,1.028,143,2.871,144,3.18,149,1.78,150,1.645,159,2.246,240,1.094,306,1.454,307,2.722,308,2.159,309,2.159,310,2.159,323,1.527,325,2.684,327,1.527,330,1.856,334,2.03,335,2.132,339,1.527,341,1.527,343,1.71,344,1.584,346,2.132,352,3.014,353,2.132,355,3.36,357,2.377,359,3.014,361,2.132,518,4.64,684,3.834,685,3.248,686,2.941,687,6.091,688,3.248,689,3.714,690,3.714,691,3.714,692,3.714,693,5.185,694,3.714,695,3.714,696,6.091,697,3.714,698,3.714,699,3.714,700,4.592,701,3.714,702,5.251,703,5.251,704,3.714,705,3.898,706,3.248,707,4.158,708,3.714,709,2.712,710,3.714,711,3.714,712,3.714,713,3.714,714,3.714,715,3.714,716,3.714,717,3.714,718,3.714,719,6.091,720,3.714,721,3.714,722,3.714,723,3.714,724,3.714,725,3.714,726,3.714,727,3.714,728,3.714,729,3.714,730,3.714,731,3.714]],["title/modules/FilesModule.html",[15,1.014,30,2.823]],["body/modules/FilesModule.html",[2,1.935,3,0.153,4,0.136,5,0.103,7,0.299,8,0.012,9,0.825,10,0.153,11,0.248,13,0.009,14,0.009,15,1.804,17,2.239,18,2.323,19,2.507,20,2.507,21,2.323,22,3.395,23,2.507,30,5.508,40,3.119,41,2.507,42,2.412,44,2.507,159,3.294,684,5.384,705,5.176,706,4.763,709,3.977,732,4.763,733,4.763,734,5.446,735,5.446,736,5.446,737,4.946,738,5.446,739,5.446,740,5.446]],["title/injectables/FilesService.html",[95,0.816,705,2.653]],["body/injectables/FilesService.html",[3,0.127,4,0.113,5,0.141,7,0.254,8,0.012,9,0.683,10,0.127,11,0.205,13,0.008,14,0.008,84,2.009,95,1.181,96,1.67,102,0.472,103,1.714,115,0.985,117,2.257,118,0.846,119,0.878,120,2.186,121,2.243,141,1.249,240,1.057,306,1.662,307,2.955,308,2.467,309,2.467,310,2.467,323,2.467,325,2.848,327,2.467,330,2.999,339,1.855,341,1.855,379,2.988,518,4.789,686,3.573,688,5.249,693,5.347,705,3.84,707,4.753,741,3.946,742,4.512,743,4.512,744,4.512,745,4.512,746,4.512,747,7.483,748,4.512,749,3.946,750,4.512]],["title/controllers/HealthController.html",[0,1.184,72,2.823]],["body/controllers/HealthController.html",[0,1.606,2,1.606,3,0.158,4,0.14,5,0.106,7,0.281,8,0.012,9,0.852,10,0.158,11,0.256,12,2.23,13,0.01,14,0.01,72,4.705,84,1.509,100,2.695,102,0.588,103,1.974,111,1.254,115,0.74,121,1.606,148,4.178,150,2.49,167,3.181,751,4.918,752,6.909,753,5.697,754,5.623,755,5.623,756,6.909,757,6.909,758,6.909,759,4.453,760,5.623,761,5.623,762,5.623,763,5.623]],["title/modules/HealthModule.html",[15,1.014,31,2.823]],["body/modules/HealthModule.html",[2,2.074,3,0.171,4,0.152,5,0.115,7,0.292,8,0.012,9,0.924,10,0.171,11,0.278,13,0.01,14,0.01,15,1.776,17,2.509,31,4.943,44,2.809,72,5.276,759,4.832,764,6.102,765,6.102,766,7.259]],["title/classes/History.html",[11,0.189,767,2.508]],["body/classes/History.html",[3,0.134,4,0.119,5,0.09,7,0.287,8,0.012,10,0.134,11,0.347,13,0.009,14,0.009,58,1.239,102,0.497,111,1.543,115,0.911,119,0.955,141,1.318,222,1.521,240,0.978,246,2.485,257,1.318,264,1.201,306,1.318,426,2.847,429,1.164,436,3.318,439,2.862,462,3.201,465,4.233,466,2.485,467,3.76,469,4.714,473,3.785,474,1.762,492,3.241,499,3.107,547,2.602,549,3.046,552,3.785,767,4.605,768,5.36,769,4.76,770,4.76,771,4.76,772,4.76,773,4.76,774,2.602,775,2.379,776,3.107,777,3.241,778,3.77,779,2.879,780,2.192,781,3.77]],["title/interfaces/IUser.html",[110,1.484,782,2.653]],["body/interfaces/IUser.html",[3,0.133,4,0.118,5,0.089,8,0.012,10,0.133,13,0.009,14,0.009,15,1.159,102,0.495,110,2.218,118,0.935,119,1.037,120,1.886,222,1.516,240,1.219,257,2.2,261,3.825,264,1.849,265,2.712,314,2.622,379,2.887,431,3.825,441,4.477,505,3.662,506,4.431,507,4.431,541,3.032,782,3.032,783,3.753,784,4.144]],["title/classes/Job.html",[11,0.189,785,2.072]],["body/classes/Job.html",[3,0.09,4,0.08,5,0.061,7,0.211,8,0.012,10,0.158,11,0.146,13,0.007,14,0.007,48,0.918,58,1.231,93,1.15,102,0.336,111,1.825,115,1.077,118,0.729,119,1.029,183,1.009,222,1.157,240,1.145,257,1.714,264,1.416,286,2.394,314,2.215,370,2.347,371,1.945,379,2.292,391,2.394,426,2.009,427,2.486,429,0.786,432,3.223,433,2.585,434,3.223,435,4.216,436,2.691,437,5.154,439,3.499,441,3.554,442,3.745,443,4.428,448,3.095,454,1.944,455,2.716,456,1.944,457,3.395,461,1.48,481,3.223,487,4.099,488,4.446,489,4.446,490,4.099,491,4.446,493,4.446,494,3.592,785,2.364,786,2.347,787,3.455,788,2.347,789,3.214,790,3.214,791,3.214,792,3.214,793,3.214,794,3.214,795,3.214,796,3.214,797,3.214,798,3.214,799,3.214,800,3.214,801,3.214,802,3.214,803,3.214,804,3.214,805,3.214,806,3.214,807,3.214,808,2.545,809,2.189,810,2.189,811,2.811]],["title/controllers/JobsController.html",[0,1.184,812,3.028]],["body/controllers/JobsController.html",[0,1.042,2,1.042,3,0.102,4,0.091,5,0.069,7,0.271,8,0.012,9,0.553,10,0.102,11,0.166,13,0.007,14,0.007,56,1.306,84,1.862,89,2.801,100,1.749,102,0.381,103,1.481,110,2.798,111,1.547,114,2.42,115,0.913,117,2.179,118,0.816,119,0.848,120,2.111,121,1.982,141,1.436,143,2.835,144,2.707,148,3.648,149,1.749,150,1.616,160,1.556,181,4.106,240,1.171,306,1.436,307,2.132,308,2.132,309,2.132,310,2.132,313,2.335,316,1.616,317,2.909,319,3.531,322,2.296,323,1.5,325,2.805,327,1.5,328,2.485,330,1.824,332,2.664,334,1.995,335,2.094,336,2.211,339,1.5,341,1.5,343,1.68,344,1.556,345,2.207,346,2.094,349,2.207,350,2.207,352,2.094,353,2.094,355,2.335,356,2.207,357,2.335,359,2.094,360,2.335,361,2.094,475,4.36,785,3.788,812,3.786,813,3.191,814,4.405,815,3.191,816,3.649,817,3.649,818,3.649,819,3.649,820,3.649,821,3.649,822,5.161,823,3.649,824,3.86,825,3.191,826,4.106,827,3.649,828,3.649,829,3.649,830,3.649,831,3.649,832,3.649]],["title/modules/JobsModule.html",[15,1.014,32,2.823]],["body/modules/JobsModule.html",[2,1.935,3,0.153,4,0.136,5,0.103,7,0.299,8,0.012,9,0.825,10,0.153,11,0.248,13,0.009,14,0.009,15,1.804,17,2.239,18,2.323,19,2.507,20,2.507,21,2.323,22,3.395,23,2.507,32,5.508,40,3.119,41,2.507,42,2.412,44,2.507,47,2.844,48,1.556,118,0.641,369,2.977,371,2.239,785,2.722,810,4.613,812,5.384,824,5.176,825,4.763,833,4.763,834,4.763,835,5.446,836,5.446,837,4.763,838,4.313]],["title/injectables/JobsService.html",[95,0.816,824,2.653]],["body/injectables/JobsService.html",[3,0.085,4,0.075,5,0.057,7,0.276,8,0.012,9,0.456,10,0.085,11,0.137,12,1.195,13,0.006,14,0.006,48,0.861,55,1.506,56,1.934,57,1.506,58,1.406,78,3.255,84,1.724,89,2.981,95,0.887,96,1.115,102,0.315,103,1.288,110,2.677,113,1.73,114,2.166,115,0.887,117,2.117,118,0.846,119,0.824,120,2.051,121,1.835,122,3.211,141,1.249,160,1.285,167,1.388,183,2.117,185,3.104,240,1.087,249,1.73,257,1.99,264,0.76,286,1.285,293,2.355,306,1.249,307,1.854,308,1.854,309,1.854,310,1.854,316,1.997,317,2.393,322,2.393,323,1.854,325,2.586,327,1.854,330,2.254,336,1.285,339,1.239,341,1.239,374,3.28,379,2.495,384,1.648,386,1.823,387,1.73,388,1.73,391,1.285,392,3.269,393,1.823,394,1.823,395,1.823,396,2.052,397,1.823,398,1.823,399,1.823,400,1.823,401,1.823,402,1.574,403,2.728,404,1.823,405,2.728,407,2.728,408,1.823,409,2.466,411,1.823,412,1.823,413,1.823,414,1.823,415,1.823,416,1.823,417,1.648,418,1.823,419,1.823,420,1.823,421,1.929,422,1.929,426,1.078,427,1.335,474,1.115,475,4.077,611,3.572,785,3.211,809,2.052,815,3.944,822,4.893,824,2.886,826,3.572,837,2.636,839,2.636,840,3.014,841,3.014,842,3.944,843,3.014,844,3.014,845,3.014,846,3.014,847,3.014,848,3.014,849,3.014,850,3.014,851,3.014,852,3.014,853,3.014,854,3.014,855,2.387,856,3.014,857,3.014,858,3.014,859,4.51,860,3.014]],["title/injectables/JwtAuthGuard.html",[95,0.816,861,3.284]],["body/injectables/JwtAuthGuard.html",[3,0.198,4,0.095,5,0.072,7,0.266,8,0.012,9,0.579,10,0.107,11,0.174,12,1.517,13,0.007,14,0.007,84,1.661,93,1.918,95,1.054,96,1.415,102,0.4,103,1.531,114,2.081,115,0.814,117,1.943,118,0.728,119,0.756,120,1.882,121,1.531,134,4.518,136,2.792,141,1.484,150,1.693,159,2.312,183,2.299,206,2.446,240,0.54,261,1.996,293,3.231,343,1.76,477,2.544,478,2.286,484,2.603,606,2.467,654,3.344,753,2.792,780,2.467,861,4.244,862,5.865,863,3.028,864,5.359,865,4.687,866,5.359,867,3.344,868,5.797,869,3.823,870,4.687,871,5.118,872,3.823,873,4.897,874,5.359,875,3.823,876,6.706,877,3.823,878,3.344,879,2.792,880,3.344,881,3.028,882,3.028,883,3.028,884,5.359,885,5.359,886,4.687,887,5.359,888,5.359,889,4.687,890,3.823,891,4.244,892,5.359,893,3.823,894,3.823,895,4.687,896,3.823,897,3.823,898,3.344,899,3.823,900,3.823,901,3.344,902,3.823,903,3.823,904,5.359,905,3.823,906,5.359,907,3.823,908,3.823,909,4.9,910,3.823,911,3.823,912,3.823,913,3.823,914,3.823,915,3.823,916,3.823,917,3.823,918,3.823]],["title/injectables/JwtStrategy.html",[95,0.816,201,2.823]],["body/injectables/JwtStrategy.html",[3,0.128,4,0.114,5,0.086,7,0.29,8,0.012,9,0.691,10,0.128,11,0.208,12,2.398,13,0.008,14,0.008,50,4.43,51,2.494,78,2.787,84,1.224,95,1.189,96,1.688,102,0.477,103,1.727,110,2.583,115,0.795,117,1.898,118,0.884,119,0.739,120,1.839,121,1.303,122,3.021,136,3.331,160,1.945,161,3.946,162,3.613,167,2.783,168,5.929,183,2.129,184,3.613,185,2.1,201,4.116,206,2.919,216,3.989,240,0.854,255,3.331,257,1.877,261,2.382,262,3.989,264,1.525,265,2.509,266,5.287,780,2.783,883,3.613,919,3.989,920,5.287,921,5.287,922,3.989,923,4.562,924,6.045,925,4.562,926,3.989,927,4.562,928,3.989,929,3.613,930,3.989,931,4.562,932,4.562,933,4.562,934,4.562,935,4.562,936,3.331,937,4.562,938,4.562]],["title/injectables/LocalAuthGuard.html",[95,0.816,151,3.028]],["body/injectables/LocalAuthGuard.html",[3,0.175,4,0.155,5,0.117,7,0.277,8,0.012,9,0.943,10,0.175,11,0.284,13,0.01,14,0.01,95,1.446,96,2.306,151,5.366,206,3.986,780,3.383,863,4.934,880,5.448,939,5.448,940,7.349]],["title/injectables/LocalStrategy.html",[95,0.816,202,2.823]],["body/injectables/LocalStrategy.html",[3,0.14,4,0.125,5,0.094,7,0.281,8,0.012,9,0.757,10,0.14,11,0.228,12,1.984,13,0.009,14,0.009,78,2.914,84,1.342,95,1.263,96,1.851,102,0.523,103,1.833,114,2.089,115,0.845,117,2.016,118,0.755,119,0.784,120,1.953,121,1.429,141,1.385,152,3.96,154,4.786,155,3.96,183,1.57,185,2.302,202,4.37,206,3.2,240,1.118,243,3.024,244,5.083,293,2.611,343,2.302,477,2.056,484,3.405,505,3.738,780,2.955,878,4.373,883,3.96,901,4.373,920,5.613,921,5.613,926,4.373,928,4.373,929,3.96,941,4.373,942,5.001,943,5.001,944,6.419,945,5.001,946,5.001,947,5.001,948,5.001]],["title/controllers/MailController.html",[0,1.184,949,3.028]],["body/controllers/MailController.html",[0,1.181,2,1.181,3,0.116,4,0.103,5,0.078,7,0.298,8,0.012,9,0.626,10,0.116,11,0.188,12,1.64,13,0.008,14,0.008,48,1.181,55,2.067,56,1.48,57,2.067,58,1.076,69,3.275,78,2.652,84,1.11,100,1.982,102,0.432,103,1.616,111,0.922,115,0.544,118,0.487,121,1.181,148,3.422,149,1.982,150,1.831,167,2.97,183,2.281,185,2.97,245,2.501,264,1.428,314,1.48,344,1.764,374,3.526,384,2.261,481,3.248,487,3.019,644,5.107,785,2.067,809,2.816,814,4.71,842,3.616,873,3.019,949,4.132,950,3.616,951,5.658,952,6.936,953,4.135,954,4.135,955,4.135,956,6.45,957,3.019,958,3.275,959,3.275,960,2.816,961,3.616,962,2.374,963,2.646,964,4.949,965,4.135,966,4.135,967,4.135,968,4.135,969,3.616,970,4.135,971,4.135,972,4.135,973,4.135,974,4.135,975,4.135,976,4.949,977,4.135,978,4.135,979,5.658,980,4.135,981,4.135,982,4.135,983,4.135,984,4.135,985,4.135,986,4.135,987,4.135,988,4.135,989,4.135,990,4.135,991,3.275,992,4.135,993,4.135,994,4.135,995,4.135,996,4.135,997,4.135,998,4.135,999,3.616,1000,4.135,1001,4.135]],["title/modules/MailModule.html",[15,1.014,33,2.823]],["body/modules/MailModule.html",[2,1.69,3,0.124,4,0.11,5,0.083,7,0.308,8,0.012,9,0.669,10,0.124,11,0.201,13,0.008,14,0.008,15,1.632,17,1.816,18,1.883,19,2.033,20,2.033,21,1.883,22,3.071,23,2.033,33,5.207,40,2.724,41,2.033,42,1.956,44,2.033,47,2.306,48,1.262,50,4.09,51,2.414,77,3.497,78,1.816,85,3.497,93,2.387,101,3.862,114,1.302,118,0.696,141,1.223,241,3.862,369,2.414,371,2.432,785,2.207,810,4.028,838,3.497,936,4.32,949,4.871,957,4.32,958,3.497,959,3.497,961,3.862,962,2.535,963,2.826,999,3.862,1002,3.862,1003,3.862,1004,5.207,1005,4.416,1006,4.416,1007,4.416,1008,4.416,1009,3.497,1010,3.007,1011,5.916,1012,4.416,1013,4.028,1014,3.862,1015,4.416,1016,4.416,1017,4.416,1018,4.416,1019,4.416,1020,4.416,1021,4.416,1022,3.862,1023,4.416,1024,4.416,1025,4.416,1026,4.416,1027,4.416,1028,4.416,1029,4.416]],["title/injectables/MailService.html",[95,0.816,1004,2.823]],["body/injectables/MailService.html",[3,0.18,4,0.16,5,0.121,7,0.242,8,0.012,9,0.973,10,0.18,11,0.292,13,0.01,14,0.01,95,1.472,96,2.377,1004,5.094,1030,5.617]],["title/injectables/MulterConfigService.html",[95,0.816,737,3.028]],["body/injectables/MulterConfigService.html",[3,0.115,4,0.102,5,0.13,7,0.272,8,0.012,9,0.619,10,0.115,11,0.186,13,0.008,14,0.008,84,1.721,93,1.462,95,1.104,96,1.512,102,0.427,103,1.603,115,0.843,118,0.66,121,1.167,129,3.574,159,2.471,183,1.283,222,1.373,240,0.577,245,4.173,246,2.93,299,6.326,306,1.131,320,2.984,490,2.984,606,1.881,633,2.782,680,3.591,700,3.574,709,2.984,737,4.098,1009,3.236,1010,3.822,1022,3.574,1031,3.574,1032,6.411,1033,6.411,1034,6.901,1035,4.086,1036,6.411,1037,4.086,1038,4.086,1039,5.613,1040,5.613,1041,5.613,1042,4.086,1043,4.086,1044,4.086,1045,4.086,1046,4.086,1047,4.086,1048,4.086,1049,3.822,1050,4.086,1051,4.086,1052,5.613,1053,4.086,1054,4.086,1055,4.086,1056,4.086,1057,6.411,1058,4.086,1059,4.086,1060,4.086,1061,4.086,1062,4.086,1063,3.574,1064,4.086,1065,4.086,1066,4.086,1067,4.086,1068,4.086,1069,5.613,1070,4.086,1071,4.086,1072,4.086,1073,5.613,1074,4.086,1075,4.086,1076,4.086,1077,4.086,1078,5.613,1079,5.613,1080,4.086,1081,4.086,1082,4.086,1083,5.613,1084,4.086,1085,5.613,1086,4.086]],["title/classes/Permission.html",[11,0.189,606,1.909]],["body/classes/Permission.html",[3,0.112,4,0.099,5,0.075,7,0.208,8,0.012,10,0.177,11,0.181,13,0.008,14,0.008,15,1.548,48,1.138,58,1.435,93,1.426,102,0.416,111,1.794,115,1.059,118,0.744,119,1.024,183,1.251,222,1.349,240,1.137,257,1.752,264,1.596,286,2.698,371,2.268,391,2.698,426,2.263,427,2.801,429,0.975,432,3.631,434,3.631,436,3.032,437,5.099,439,3.414,441,3.631,442,3.826,443,4.484,448,2.757,454,2.41,455,3.166,456,2.41,457,3.826,541,4.048,542,4.307,606,2.539,607,2.713,626,2.713,1087,2.91,1088,3.985,1089,3.985,1090,3.985,1091,3.985,1092,3.985,1093,3.985,1094,3.985,1095,3.985,1096,3.985,1097,3.985,1098,3.985,1099,3.485]],["title/controllers/PermissionsController.html",[0,1.184,1100,3.028]],["body/controllers/PermissionsController.html",[0,1.044,2,1.044,3,0.103,4,0.091,5,0.069,7,0.271,8,0.012,9,0.554,10,0.103,11,0.166,13,0.007,14,0.007,56,1.308,84,1.864,89,2.803,100,1.752,102,0.382,103,1.483,110,2.799,111,1.548,114,2.421,115,0.914,117,2.18,118,0.817,119,0.849,120,2.112,121,1.983,141,1.438,143,2.838,144,2.711,149,1.752,150,1.619,160,1.559,240,1.171,261,1.908,306,1.438,307,2.134,308,2.134,309,2.134,310,2.134,313,2.339,316,1.619,317,2.911,319,3.535,320,3.791,322,2.299,323,1.503,325,2.806,327,1.503,328,2.489,330,1.827,332,2.669,334,1.998,335,2.098,336,2.214,339,1.503,341,1.503,343,1.683,344,1.559,345,2.21,346,2.098,348,3.322,349,2.21,350,2.21,352,2.098,353,2.098,355,2.339,356,2.21,357,2.339,359,2.098,360,2.339,361,2.098,538,4.616,606,3.602,1100,3.791,1101,3.197,1102,3.197,1103,3.655,1104,2.895,1105,3.655,1106,2.669,1107,3.655,1108,3.655,1109,4.852,1110,3.655,1111,3.864,1112,3.197,1113,4.112,1114,3.655,1115,3.655,1116,3.655,1117,3.655,1118,3.655,1119,3.655]],["title/modules/PermissionsModule.html",[15,1.014,34,2.823]],["body/modules/PermissionsModule.html",[2,1.935,3,0.153,4,0.136,5,0.103,7,0.299,8,0.012,9,0.825,10,0.153,11,0.248,13,0.009,14,0.009,15,1.804,17,2.239,18,2.323,19,2.507,20,2.507,21,2.323,22,3.395,23,2.507,34,5.508,40,3.119,41,2.507,42,2.412,44,2.507,47,2.844,48,1.556,118,0.641,369,2.977,371,2.239,606,2.507,607,4.613,612,4.313,1100,5.384,1111,5.176,1112,4.763,1120,4.763,1121,4.763,1122,5.446,1123,5.446,1124,4.763]],["title/injectables/PermissionsService.html",[95,0.816,1111,2.653]],["body/injectables/PermissionsService.html",[3,0.081,4,0.072,5,0.055,7,0.274,8,0.012,9,0.439,10,0.081,11,0.132,12,1.15,13,0.006,14,0.006,48,0.828,55,1.449,56,1.89,57,1.449,58,1.374,78,3.233,84,1.696,89,2.942,95,0.862,96,1.073,102,0.303,103,1.252,110,2.651,113,1.665,114,2.143,115,0.874,117,2.087,118,0.782,119,0.812,120,2.021,121,1.805,122,3.158,141,1.629,160,1.237,167,1.335,183,2.167,185,3.27,240,1.078,249,1.665,257,1.967,264,1.332,286,1.237,293,3.073,306,1.213,307,1.801,308,1.801,309,1.801,310,1.801,316,1.94,317,2.339,322,2.339,323,1.801,325,2.553,327,1.801,330,2.19,336,1.237,339,1.192,341,1.192,374,3.217,379,2.459,384,1.586,386,1.754,387,1.665,388,1.665,391,1.237,392,3.194,393,3.194,394,1.754,395,1.754,397,1.754,398,1.754,399,1.754,400,1.754,401,1.754,402,1.514,403,2.65,404,1.754,405,2.65,407,2.65,408,1.754,409,2.887,411,1.754,412,1.754,413,1.754,414,1.754,415,1.754,416,1.754,417,1.586,418,1.754,419,1.754,420,1.754,421,3.379,422,3.379,423,3.596,426,1.038,427,1.284,538,4.252,541,1.856,542,2.984,606,2.017,619,3.832,626,1.975,680,1.856,1049,1.975,1102,3.832,1109,4.545,1111,2.804,1113,3.47,1124,2.536,1125,2.536,1126,2.9,1127,2.9,1128,2.9,1129,2.9,1130,2.9,1131,2.9,1132,2.9,1133,2.9,1134,4.382,1135,4.382,1136,2.9,1137,2.9,1138,2.9,1139,2.9,1140,2.536,1141,2.536,1142,2.9,1143,2.9,1144,3.832,1145,4.382,1146,2.9]],["title/classes/RegisterUserDto.html",[11,0.189,139,2.267]],["body/classes/RegisterUserDto.html",[3,0.089,4,0.079,5,0.06,7,0.232,8,0.012,10,0.157,11,0.313,13,0.007,14,0.007,58,1.223,102,0.333,111,1.534,115,0.905,118,0.859,119,0.893,139,2.569,156,1.926,157,4.303,165,1.926,222,1.149,240,1.129,243,2.842,257,0.882,264,1.913,265,1.739,314,2.206,344,2.004,379,2.546,429,0.779,431,3.715,433,2.163,461,2.163,462,3.228,466,1.663,470,3.007,471,3.007,472,3.377,473,2.569,474,1.179,476,3.192,477,3.402,478,3.488,479,3.621,480,3.621,482,3.053,483,2.569,495,2.038,498,4.077,499,3.081,500,2.842,501,1.741,502,3.377,503,4.077,504,4.077,505,3.438,506,4.303,507,4.303,508,3.2,509,2.325,510,2.325,513,3.286,556,2.522,1147,3.185,1148,3.185,1149,3.185,1150,3.185,1151,3.185,1152,3.185]],["title/interfaces/Response.html",[124,2.653,782,2.653]],["body/interfaces/Response.html",[3,0.138,4,0.123,5,0.093,7,0.289,8,0.012,9,0.745,10,0.178,11,0.224,13,0.009,14,0.009,84,1.704,95,1.249,102,0.514,119,0.859,124,4.063,150,2.178,222,1.553,240,0.994,343,2.264,379,2.603,409,2.689,417,2.689,476,3.052,633,3.349,682,6.24,782,3.147,783,3.895,868,5.569,871,4.324,879,3.591,891,3.895,963,3.147,1153,3.895,1154,6.729,1155,5.553,1156,5.553,1157,5.029,1158,4.301,1159,4.301,1160,3.591,1161,3.591,1162,4.301,1163,4.301,1164,4.301,1165,4.301,1166,4.301,1167,4.301,1168,4.301,1169,4.301,1170,4.301,1171,4.301,1172,4.301,1173,4.301]],["title/classes/Resume.html",[11,0.189,1174,2.508]],["body/classes/Resume.html",[3,0.096,4,0.085,5,0.064,7,0.24,8,0.012,10,0.163,11,0.156,13,0.007,14,0.007,48,0.977,58,1.288,93,2.082,102,0.357,111,1.79,115,1.056,119,1.028,183,1.074,222,1.211,240,1.103,257,1.766,264,1.836,286,2.481,314,1.224,370,2.498,371,2.035,391,2.481,426,2.282,427,2.577,429,0.837,432,3.34,434,3.34,436,3.057,437,5.046,439,3.35,441,3.661,442,4.266,443,4.266,448,2.474,454,2.069,455,2.842,456,2.069,457,3.519,461,3.495,550,4.249,551,4.249,552,3.486,553,4.608,554,4.249,767,3.519,785,1.71,787,4.657,788,4.941,808,2.709,838,2.709,959,2.709,1174,2.994,1175,2.498,1176,3.421,1177,3.421,1178,3.421,1179,3.421,1180,3.421,1181,2.991,1182,3.421,1183,3.421,1184,3.421,1185,3.421,1186,3.421,1187,3.421,1188,3.421,1189,3.421,1190,3.421,1191,2.498,1192,2.991,1193,3.421,1194,2.498,1195,2.991]],["title/controllers/ResumesController.html",[0,1.184,1196,3.028]],["body/controllers/ResumesController.html",[0,0.955,2,0.955,3,0.094,4,0.083,5,0.063,7,0.263,8,0.012,9,0.506,10,0.094,11,0.152,13,0.007,14,0.007,56,1.196,84,1.939,89,2.691,100,1.603,102,0.349,103,1.391,110,2.862,111,1.56,114,2.468,115,0.921,117,2.198,118,0.824,119,0.855,120,2.129,121,1.999,141,1.348,143,2.662,144,2.542,149,1.603,150,1.481,160,1.426,240,1.176,306,1.348,307,2.002,308,2.002,309,2.002,313,2.14,316,1.481,317,2.794,319,3.316,322,2.156,323,1.375,325,2.794,327,1.375,334,1.828,335,1.919,336,2.077,339,1.375,341,1.375,343,1.539,344,1.426,345,2.022,346,1.919,348,3.675,349,2.022,350,2.022,352,1.919,353,1.919,355,2.14,356,2.945,357,2.14,359,2.795,361,1.919,547,2.662,552,3.826,562,4.037,777,3.316,779,3.816,1104,2.648,1106,2.441,1174,4.7,1196,3.556,1197,2.924,1198,2.924,1199,4.259,1200,4.259,1201,3.344,1202,3.344,1203,3.344,1204,2.924,1205,4.87,1206,3.344,1207,3.344,1208,3.344,1209,3.344,1210,2.924,1211,3.344,1212,3.344,1213,3.675,1214,2.924,1215,3.344,1216,3.344,1217,3.344,1218,3.344,1219,3.344,1220,3.344,1221,3.344,1222,3.344,1223,3.344,1224,3.344,1225,3.344,1226,3.344]],["title/modules/ResumesModule.html",[15,1.014,35,2.823]],["body/modules/ResumesModule.html",[2,1.935,3,0.153,4,0.136,5,0.103,7,0.299,8,0.012,9,0.825,10,0.153,11,0.248,13,0.009,14,0.009,15,1.804,17,2.239,18,2.323,19,2.507,20,2.507,21,2.323,22,3.395,23,2.507,35,5.508,40,3.119,41,2.507,42,2.412,44,2.507,47,2.844,48,1.556,118,0.641,369,2.977,371,2.239,1174,3.294,1194,4.946,1196,5.384,1213,5.176,1214,4.763,1227,4.763,1228,4.763,1229,5.446,1230,5.446,1231,4.763,1232,5.446]],["title/injectables/ResumesService.html",[95,0.816,1213,2.653]],["body/injectables/ResumesService.html",[3,0.067,4,0.059,5,0.045,7,0.258,8,0.012,9,0.359,10,0.067,11,0.108,12,0.94,13,0.005,14,0.005,48,0.677,55,1.185,56,1.664,57,1.185,58,1.21,78,3.252,84,1.721,89,2.735,95,0.738,96,0.877,102,0.248,103,1.071,110,2.731,113,1.361,114,2.175,115,0.875,117,2.088,118,0.825,119,0.813,120,2.023,121,1.832,122,3.205,141,1.776,160,1.011,167,1.092,183,2.014,185,3.151,240,1.097,249,1.361,257,2.044,264,1.727,286,1.599,293,2.76,306,1.038,307,1.541,308,1.912,309,1.541,310,1.541,316,1.66,317,2.06,322,2.06,323,1.541,325,2.533,327,1.541,330,1.874,336,1.011,339,0.975,341,0.975,374,2.89,379,2.266,384,1.296,386,1.434,387,1.361,388,1.361,391,1.011,392,4.24,393,4.14,394,1.434,395,2.268,396,1.614,397,1.434,398,1.434,399,1.434,400,1.434,401,1.434,402,2.428,403,2.268,404,1.434,405,2.268,407,2.268,408,1.434,409,2.05,411,1.434,412,1.434,413,1.434,414,1.434,415,1.434,416,1.434,417,1.296,418,1.434,419,1.434,420,1.434,421,3.383,422,3.383,423,3.6,426,2.06,427,1.05,436,2.229,439,2.141,547,1.296,550,1.731,551,1.731,552,3.742,554,3.396,562,3.918,767,2.813,777,2.553,779,4.021,855,1.878,1010,2.553,1174,2.268,1191,1.731,1199,3.279,1200,3.279,1204,3.279,1210,3.279,1213,2.399,1231,2.074,1233,2.074,1234,2.371,1235,2.371,1236,3.75,1237,3.75,1238,2.371,1239,2.371,1240,2.371,1241,2.371,1242,2.371,1243,2.371,1244,2.371,1245,2.371,1246,2.371,1247,5.286,1248,2.371,1249,2.371,1250,2.371,1251,3.75,1252,2.371,1253,1.878,1254,2.969,1255,3.75,1256,4.651,1257,3.75,1258,2.371,1259,2.371]],["title/classes/Role.html",[11,0.189,265,1.535]],["body/classes/Role.html",[3,0.109,4,0.097,5,0.073,7,0.235,8,0.012,10,0.175,11,0.177,13,0.008,14,0.008,48,1.111,58,1.411,93,1.391,102,0.406,111,1.785,115,1.054,118,0.735,119,1.025,183,1.221,222,1.326,240,1.067,257,1.729,261,3.26,264,1.575,265,2.007,286,2.663,371,2.229,391,2.663,426,2.234,427,2.765,429,0.951,432,3.584,433,2.875,434,3.584,436,2.993,437,5.069,439,3.388,441,3.584,442,4.085,443,4.45,448,3.376,454,2.351,455,3.112,456,2.351,457,3.776,461,1.79,494,3.995,606,2.875,608,3.079,609,2.488,612,3.079,627,2.488,787,3.959,788,3.959,1260,2.839,1261,3.888,1262,3.888,1263,3.888,1264,3.888,1265,3.888,1266,3.888,1267,3.888,1268,3.888,1269,3.888,1270,3.888,1271,3.888,1272,3.4]],["title/controllers/RolesController.html",[0,1.184,1273,3.028]],["body/controllers/RolesController.html",[0,1.044,2,1.044,3,0.103,4,0.091,5,0.069,7,0.271,8,0.012,9,0.554,10,0.103,11,0.166,13,0.007,14,0.007,56,1.308,84,1.864,89,2.803,100,1.752,102,0.382,103,1.483,110,2.799,111,1.548,114,2.421,115,0.914,117,2.18,118,0.817,119,0.849,120,2.112,121,1.983,141,1.438,143,2.838,144,2.711,149,1.752,150,1.619,160,1.559,161,3.301,240,1.171,265,2.895,306,1.438,307,2.134,308,2.134,309,2.134,310,2.134,313,2.339,316,1.619,317,2.911,319,3.535,320,3.791,322,2.299,323,1.503,325,2.806,327,1.503,328,2.489,330,1.827,332,2.669,334,1.998,335,2.098,336,2.214,339,1.503,341,1.503,343,1.683,344,1.559,345,2.21,346,2.098,348,3.322,349,2.21,350,2.21,352,2.098,353,2.098,355,2.339,356,2.21,357,2.339,359,2.098,360,2.339,361,2.098,564,4.616,646,2.895,1104,2.895,1106,2.669,1273,3.791,1274,3.197,1275,3.197,1276,3.655,1277,3.655,1278,3.655,1279,3.655,1280,5.163,1281,3.655,1282,3.197,1283,4.112,1284,3.655,1285,3.655,1286,3.655,1287,3.655,1288,3.655,1289,3.655]],["title/modules/RolesModule.html",[15,1.014,36,2.653]],["body/modules/RolesModule.html",[2,1.901,3,0.149,4,0.132,5,0.1,7,0.296,8,0.012,9,0.802,10,0.149,11,0.241,13,0.009,14,0.009,15,1.781,17,2.176,18,2.258,19,2.437,20,2.437,21,2.258,22,3.351,23,3.351,36,5.216,40,3.064,41,2.437,42,2.344,44,2.437,47,2.764,48,1.512,118,0.623,161,4.63,265,1.959,369,2.894,371,2.176,609,4.258,613,3.865,1273,5.315,1282,4.63,1290,4.63,1291,4.63,1292,4.63,1293,5.294,1294,5.294,1295,4.63]],["title/injectables/RolesService.html",[95,0.816,161,2.267]],["body/injectables/RolesService.html",[3,0.077,4,0.068,5,0.051,7,0.274,8,0.012,9,0.413,10,0.077,11,0.124,12,1.659,13,0.006,14,0.006,15,0.668,48,0.78,50,3.878,51,1.492,55,1.364,56,1.82,57,1.364,58,1.324,78,3.196,84,1.651,89,2.881,95,0.823,96,1.01,102,0.285,103,1.195,110,2.61,113,1.566,114,2.106,115,0.854,117,2.038,118,0.82,119,0.793,120,1.974,121,1.757,122,3.074,141,1.703,160,1.164,161,2.287,167,1.926,183,2.189,185,3.29,240,1.064,249,1.566,257,1.979,261,1.425,264,1.284,265,1.548,286,1.164,293,3.211,306,1.158,307,1.72,308,1.72,309,2.091,310,1.72,316,1.853,317,2.253,322,2.253,323,1.72,325,2.5,327,1.72,330,2.091,336,1.164,339,1.122,341,1.122,374,3.118,379,2.402,384,1.492,386,1.65,387,1.566,388,1.566,391,1.164,392,3.077,393,3.077,394,1.65,395,1.65,396,1.858,397,1.65,398,1.65,399,1.65,400,1.65,401,1.65,402,3.388,403,2.53,404,1.65,405,2.53,407,2.53,408,1.65,409,2.781,411,1.65,412,1.65,413,1.65,414,1.65,415,1.65,416,1.65,417,1.492,418,1.65,419,1.65,420,1.65,421,3.255,422,3.255,423,3.464,426,0.976,427,1.208,541,1.746,542,1.858,564,4.152,606,1.256,620,3.313,627,1.746,636,2.161,651,2.161,666,3.313,680,1.746,855,2.161,1010,1.858,1049,1.858,1109,3.65,1140,2.387,1141,2.387,1144,3.659,1253,2.161,1254,2.161,1275,3.659,1280,3.884,1283,3.313,1295,2.387,1296,2.387,1297,2.729,1298,2.729,1299,2.729,1300,2.729,1301,2.729,1302,2.729,1303,2.729,1304,4.183,1305,2.729,1306,2.729,1307,2.729,1308,2.729,1309,2.729,1310,4.183,1311,2.729,1312,2.729,1313,2.729,1314,2.729,1315,2.387,1316,2.729]],["title/classes/Subscriber.html",[11,0.189,962,2.38]],["body/classes/Subscriber.html",[3,0.115,4,0.102,5,0.077,7,0.211,8,0.012,10,0.18,11,0.186,13,0.008,14,0.008,48,1.167,58,1.461,93,1.462,102,0.427,111,1.784,115,1.053,118,0.754,119,1.023,183,1.283,222,1.373,240,1.118,257,1.775,264,1.886,286,2.734,371,2.307,391,2.734,426,2.294,427,2.839,429,1,432,3.68,434,3.68,436,3.073,437,5.081,439,3.441,441,3.68,442,3.877,443,4.519,448,2.805,454,2.471,455,3.222,456,2.471,457,3.877,481,3.68,960,2.782,962,3.222,1013,2.782,1317,2.984,1318,4.086,1319,4.086,1320,4.086,1321,4.086,1322,4.086,1323,4.086,1324,4.086,1325,4.086,1326,4.086,1327,4.086,1328,3.574]],["title/controllers/SubscribersController.html",[0,1.184,1329,3.028]],["body/controllers/SubscribersController.html",[0,0.992,2,0.992,3,0.097,4,0.087,5,0.065,7,0.267,8,0.012,9,0.526,10,0.097,11,0.158,13,0.007,14,0.007,56,1.242,84,1.903,89,2.739,100,1.664,102,0.363,103,1.43,110,2.858,111,1.581,114,2.427,115,0.933,117,2.227,118,0.834,119,0.867,120,2.157,121,2.026,141,1.386,143,1.898,144,2.613,149,1.664,150,1.538,160,1.481,181,2.75,240,1.145,306,1.386,307,2.057,308,2.057,309,2.057,310,2.057,316,1.538,317,2.844,322,2.216,323,1.427,325,2.624,327,1.427,334,2.736,335,1.993,336,2.134,339,1.427,341,1.427,343,1.598,344,1.481,345,2.1,346,1.993,348,3.202,349,2.1,350,2.1,352,1.993,353,1.993,356,2.1,359,1.993,360,2.222,361,1.993,481,2.873,574,4.537,962,4.544,976,3.036,1329,3.654,1330,3.036,1331,5.004,1332,3.036,1333,3.472,1334,3.472,1335,3.472,1336,3.963,1337,3.472,1338,3.472,1339,3.472,1340,3.472,1341,3.472,1342,3.472,1343,3.472,1344,3.472,1345,3.036,1346,4.828,1347,3.472,1348,3.472,1349,3.755,1350,3.036,1351,3.963,1352,5.788,1353,3.472,1354,3.472,1355,3.472,1356,3.472,1357,3.472,1358,3.036,1359,3.472,1360,3.472,1361,3.036,1362,3.472,1363,3.472]],["title/modules/SubscribersModule.html",[15,1.014,37,2.823]],["body/modules/SubscribersModule.html",[2,1.935,3,0.153,4,0.136,5,0.103,7,0.299,8,0.012,9,0.825,10,0.153,11,0.248,13,0.009,14,0.009,15,1.804,17,2.239,18,2.323,19,2.507,20,2.507,21,2.323,22,3.395,23,2.507,37,5.508,40,3.119,41,2.507,42,2.412,44,2.507,47,2.844,48,1.556,118,0.641,369,2.977,371,2.239,962,3.126,1013,4.613,1014,4.763,1329,5.384,1349,5.176,1350,4.763,1364,4.763,1365,4.763,1366,5.446,1367,5.446,1368,4.763]],["title/injectables/SubscribersService.html",[95,0.816,1349,2.653]],["body/injectables/SubscribersService.html",[3,0.078,4,0.069,5,0.052,7,0.27,8,0.012,9,0.42,10,0.078,11,0.126,12,1.1,13,0.006,14,0.006,48,0.792,55,1.386,56,1.838,57,1.386,58,1.337,78,3.277,84,1.753,89,2.897,93,0.992,95,0.833,96,1.026,102,0.29,103,1.21,110,2.736,113,1.592,114,2.195,115,0.894,117,2.133,118,0.799,119,0.83,120,2.066,121,1.865,122,3.264,141,1.423,160,1.182,167,1.276,183,2.254,185,3.305,240,1.014,249,1.592,257,1.881,264,1.714,286,1.182,293,2.682,306,1.172,307,1.741,308,1.741,309,1.741,310,1.741,316,1.875,317,2.275,322,2.275,323,1.741,325,2.292,327,1.741,336,1.182,339,1.14,341,1.14,374,3.144,379,2.417,384,1.516,386,1.677,387,1.592,388,1.592,391,1.182,392,3.107,393,3.478,394,1.677,395,1.677,397,1.677,398,1.677,399,1.677,400,1.677,401,1.677,402,2.211,403,2.561,404,1.677,405,2.561,407,2.561,408,1.677,409,3.144,411,1.677,412,1.677,413,1.677,414,1.677,415,1.677,416,1.677,417,1.516,418,1.677,419,1.677,420,1.677,421,2.71,422,2.71,423,2.883,426,0.992,427,1.228,481,1.592,574,4.179,680,1.774,909,3.353,960,1.888,962,3.301,969,3.703,1049,1.888,1332,3.703,1345,3.703,1346,4.446,1349,2.71,1351,3.353,1368,2.425,1369,2.425,1370,4.235,1371,2.773,1372,2.773,1373,2.773,1374,2.773,1375,2.773,1376,4.235,1377,2.773,1378,2.773,1379,2.773,1380,2.773,1381,5.138,1382,2.773,1383,2.425,1384,2.773,1385,2.773,1386,2.773,1387,2.773,1388,2.773,1389,4.235,1390,4.235,1391,2.773,1392,2.773]],["title/guards/TestGuard.html",[1393,3.284,1394,3.284]],["body/guards/TestGuard.html",[3,0.157,4,0.14,5,0.106,7,0.26,8,0.012,9,0.849,10,0.157,11,0.255,13,0.01,14,0.01,84,1.505,95,1.357,102,0.586,103,1.97,115,0.738,117,1.761,118,0.66,119,0.685,120,1.706,121,1.602,244,5.462,448,3.447,633,3.819,753,4.095,865,6.816,870,6.032,871,5.307,873,4.095,936,4.095,963,3.588,1157,5.916,1394,5.462,1395,5.608,1396,4.904,1397,5.608,1398,5.608]],["title/injectables/TransformInterceptor.html",[95,0.816,1161,3.028]],["body/injectables/TransformInterceptor.html",[3,0.134,4,0.119,5,0.09,7,0.287,8,0.012,9,0.723,10,0.175,11,0.217,12,1.893,13,0.009,14,0.009,84,1.671,95,1.225,96,1.766,102,0.499,103,1.779,115,0.819,117,1.955,118,0.733,119,0.761,120,1.894,121,1.363,124,3.053,150,2.113,240,0.674,343,2.197,379,1.766,409,2.608,417,2.608,476,2.47,633,3.249,682,5.489,782,3.053,867,4.173,868,6.189,871,5.002,873,3.484,879,3.484,891,3.778,963,3.053,1153,3.778,1154,5.445,1155,5.445,1156,6.425,1157,5.489,1158,4.173,1159,4.173,1160,3.484,1161,4.546,1162,5.445,1163,6.061,1164,4.173,1165,4.173,1166,4.173,1167,4.173,1168,4.173,1169,4.173,1170,4.173,1171,4.173,1172,4.173,1173,4.173,1399,6.226,1400,4.771,1401,4.771]],["title/classes/UpdateCompanyDto.html",[11,0.189,331,2.823]],["body/classes/UpdateCompanyDto.html",[3,0.139,4,0.124,5,0.094,7,0.266,8,0.012,10,0.139,11,0.291,13,0.009,14,0.009,102,0.519,111,1.575,115,0.929,118,0.908,119,0.863,222,1.563,240,1.116,306,1.375,312,3.177,331,4.35,340,3.932,429,1.215,431,4.029,433,3.553,462,2.958,474,1.837,476,2.802,477,3.247,478,3.369,479,3.498,480,3.498,512,3.932,513,3.53,774,2.714,775,2.481,776,2.481,1402,6.523,1403,4.965,1404,4.965,1405,4.965]],["title/classes/UpdateFileDto.html",[11,0.189,693,2.823]],["body/classes/UpdateFileDto.html",[3,0.174,4,0.155,5,0.117,7,0.276,8,0.012,10,0.174,11,0.283,13,0.01,14,0.01,306,1.72,429,1.519,518,3.975,520,4.919,693,4.995,707,4.919,774,3.396,775,3.104,776,3.104,780,3.377,1406,5.432,1407,7.336]],["title/classes/UpdateJobDto.html",[11,0.189,822,2.823]],["body/classes/UpdateJobDto.html",[3,0.174,4,0.155,5,0.117,7,0.276,8,0.012,10,0.174,11,0.283,13,0.01,14,0.01,306,1.72,429,1.519,460,4.535,475,3.756,774,3.396,775,3.104,776,3.104,780,3.377,822,4.995,826,4.919,1408,5.432,1409,7.336]],["title/classes/UpdatePermissionDto.html",[11,0.189,1109,2.653]],["body/classes/UpdatePermissionDto.html",[3,0.174,4,0.155,5,0.117,7,0.276,8,0.012,10,0.174,11,0.283,13,0.01,14,0.01,306,1.72,429,1.519,538,3.975,540,4.919,774,3.396,775,3.104,776,3.104,780,3.377,1109,4.694,1113,4.919,1410,5.432,1411,7.336]],["title/classes/UpdateResumeDto.html",[11,0.189,779,2.508]],["body/classes/UpdateResumeDto.html",[3,0.141,4,0.125,5,0.094,7,0.291,8,0.012,10,0.141,11,0.352,13,0.009,14,0.009,58,1.304,102,0.524,111,1.118,115,0.66,119,0.915,141,1.388,222,1.573,240,0.908,246,2.617,257,1.388,264,1.265,306,1.388,426,2.678,429,1.226,436,2.403,439,2.308,462,3.194,465,4.377,466,2.617,467,3.888,469,4.377,473,3.88,474,1.855,492,3.413,499,3.213,547,2.74,549,3.208,552,2.74,767,4.87,768,4.694,774,2.74,775,2.505,776,3.213,777,3.413,778,3.97,779,3.888,780,2.96,781,5.091,1412,5.013,1413,5.013]],["title/classes/UpdateRoleDto.html",[11,0.189,1280,2.823]],["body/classes/UpdateRoleDto.html",[3,0.174,4,0.155,5,0.117,7,0.276,8,0.012,10,0.174,11,0.283,13,0.01,14,0.01,306,1.72,429,1.519,564,3.975,566,4.919,774,3.396,775,3.104,776,3.104,780,3.377,1280,4.995,1283,4.919,1414,5.432,1415,7.336]],["title/classes/UpdateSubscriberDto.html",[11,0.189,1346,2.823]],["body/classes/UpdateSubscriberDto.html",[3,0.174,4,0.155,5,0.117,7,0.276,8,0.012,10,0.174,11,0.283,13,0.01,14,0.01,306,1.72,429,1.519,574,3.975,576,4.919,774,3.396,775,3.104,776,3.104,780,3.377,1346,4.995,1351,4.919,1416,5.432,1417,7.336]],["title/classes/UpdateUserDto.html",[11,0.189,1418,2.823]],["body/classes/UpdateUserDto.html",[3,0.156,4,0.138,5,0.105,7,0.28,8,0.012,10,0.156,11,0.312,13,0.01,14,0.01,102,0.58,111,1.237,115,0.73,119,0.678,158,3.778,183,2.152,222,1.676,240,0.968,257,2.209,306,1.536,429,1.357,462,2.718,474,2.053,476,2.201,477,2.817,478,2.922,479,3.034,480,3.034,495,3.55,501,3.033,505,3.425,513,2.773,775,2.773,776,2.773,780,3.155,1418,4.666,1419,5.993,1420,6.852,1421,5.548,1422,5.548]],["title/classes/UpdatedBy.html",[11,0.189,426,1.484]],["body/classes/UpdatedBy.html",[3,0.138,4,0.122,5,0.092,7,0.289,8,0.012,10,0.138,11,0.35,13,0.009,14,0.009,58,1.277,102,0.513,111,1.414,115,0.834,119,0.94,141,1.358,222,1.551,240,0.993,246,2.562,257,1.945,264,1.772,306,1.358,426,2.751,429,1.2,436,2.352,439,2.259,462,3.221,465,4.317,466,2.562,467,3.834,469,4.317,473,3.84,474,1.816,492,3.341,499,3.169,547,2.682,549,3.14,552,2.682,560,4.291,577,4.291,767,4.49,768,5.129,774,2.682,775,2.452,776,3.169,777,3.341,778,5.021,779,2.967,780,2.259,781,3.885,1423,4.906]],["title/classes/User.html",[11,0.189,114,1.222]],["body/classes/User.html",[3,0.093,4,0.083,5,0.063,7,0.236,8,0.012,10,0.16,11,0.151,13,0.007,14,0.007,48,0.947,58,1.26,93,2.392,102,0.347,111,1.805,114,1.427,115,1.065,118,0.673,119,1.028,183,1.042,222,1.184,240,1.144,257,1.74,264,1.818,265,2.326,274,4.527,286,2.438,314,2.249,370,2.422,371,1.99,379,1.792,391,2.438,426,2.046,427,2.532,429,0.811,431,2.985,432,3.282,434,3.282,436,2.74,437,5.085,439,3.213,441,3.608,442,4.042,443,4.468,448,2.419,454,2.006,455,2.779,456,2.006,457,3.457,461,2.894,505,2.857,506,3.457,507,3.457,604,2.259,610,2.259,613,2.422,628,2.259,787,4.59,788,4.175,808,2.627,1181,4.234,1192,4.234,1424,2.422,1425,3.317,1426,3.317,1427,3.317,1428,3.317,1429,3.317,1430,3.317,1431,3.317,1432,3.317,1433,3.317,1434,3.317,1435,3.317,1436,3.317,1437,3.317,1438,3.317,1439,3.317,1440,3.317,1441,2.901]],["title/classes/UserLoginDto.html",[11,0.189,156,2.508]],["body/classes/UserLoginDto.html",[3,0.1,4,0.089,5,0.067,7,0.245,8,0.012,10,0.167,11,0.326,13,0.007,14,0.007,58,1.329,102,0.373,111,1.139,115,0.672,118,0.81,119,0.795,139,1.954,156,3.09,157,3.606,165,2.161,222,1.25,240,1.134,243,4.163,257,0.989,264,1.806,265,1.891,314,2.328,344,3.053,379,2.408,429,0.874,431,3.397,433,2.996,461,2.352,462,3.279,466,1.866,470,3.269,471,3.269,472,3.606,473,2.793,474,1.322,476,3.229,477,3.347,478,3.423,479,3.555,480,3.555,482,2.793,483,2.793,495,2.287,498,4.354,499,2.98,500,3.09,501,1.954,502,3.09,503,3.731,504,3.731,505,3.684,506,3.935,507,3.935,508,3.479,509,3.731,510,3.731,1442,5.109,1443,3.574,1444,3.574]],["title/controllers/UsersController.html",[0,1.184,1445,3.028]],["body/controllers/UsersController.html",[0,0.982,2,0.982,3,0.096,4,0.086,5,0.065,7,0.281,8,0.012,9,0.521,10,0.096,11,0.156,13,0.007,14,0.007,56,1.23,71,2.51,84,1.897,87,3.006,88,3.006,89,2.892,100,1.648,102,0.359,103,1.419,110,2.762,111,1.512,114,2.487,115,0.892,117,2.129,118,0.857,119,0.829,120,2.063,121,1.937,141,1.376,143,1.879,144,3.046,146,3.006,147,3.006,149,1.648,150,1.522,158,3.383,163,3.006,165,2.079,170,3.006,229,3.19,240,1.162,245,2.079,264,0.867,306,1.376,307,2.043,308,2.043,309,2.043,310,2.043,313,2.2,316,1.522,317,2.831,322,2.2,323,1.413,325,2.615,327,1.413,328,2.341,334,2.716,335,1.973,336,2.119,339,1.413,341,1.413,343,1.583,344,1.466,345,2.079,346,1.973,348,3.179,349,2.079,350,2.079,352,1.973,353,1.973,356,2.079,359,1.973,360,2.2,361,1.973,501,3.863,505,2.483,662,2.722,1106,2.51,1336,3.935,1358,3.006,1361,3.006,1418,4.812,1445,3.628,1446,3.006,1447,3.438,1448,3.438,1449,3.438,1450,3.438,1451,3.438,1452,3.438,1453,3.438,1454,3.006,1455,3.438,1456,3.438,1457,3.006,1458,3.006,1459,4.969,1460,3.438,1461,3.438,1462,3.438,1463,3.438,1464,3.438,1465,3.438,1466,3.438,1467,3.438,1468,3.438,1469,3.438,1470,3.438,1471,3.438]],["title/modules/UsersModule.html",[15,1.014,38,2.653]],["body/modules/UsersModule.html",[2,1.854,3,0.143,4,0.127,5,0.096,7,0.299,8,0.012,9,0.77,10,0.143,11,0.232,13,0.009,14,0.009,15,1.748,17,2.091,18,2.169,19,2.342,20,2.342,21,2.169,22,3.29,23,3.29,38,5.17,40,2.987,41,2.342,42,2.252,44,2.342,47,2.656,48,1.453,114,1.499,118,0.764,229,4.605,265,1.882,369,2.781,371,2.668,604,4.418,609,4.152,610,3.463,611,4.028,613,3.714,1445,5.217,1457,4.448,1472,4.448,1473,4.448,1474,5.086,1475,5.086,1476,5.086,1477,4.448]],["title/injectables/UsersService.html",[95,0.816,229,2.267]],["body/injectables/UsersService.html",[3,0.15,4,0.051,5,0.039,7,0.268,8,0.012,9,0.311,10,0.058,11,0.093,12,1.325,13,0.005,14,0.005,48,0.586,50,3.295,51,1.122,55,1.026,56,1.511,57,1.026,58,1.099,78,3.213,84,1.878,89,2.58,90,1.398,95,0.657,96,0.76,102,0.215,103,0.954,110,2.454,113,1.178,114,2.157,115,0.921,117,1.98,118,0.823,119,0.771,120,1.918,121,1.728,122,3.024,139,2.66,141,1.169,158,2.274,167,1.944,183,2.348,185,3.369,222,0.817,226,2.921,229,1.826,240,1.066,243,2.02,245,2.942,246,2.54,249,1.178,255,2.439,257,1.899,260,1.795,264,1.448,265,1.982,274,3.853,283,1.795,286,0.875,293,2.205,306,0.925,307,1.373,308,2,309,1.736,310,1.373,316,1.479,317,1.87,322,1.87,323,1.373,325,2.124,327,1.373,336,0.875,339,0.844,341,0.844,374,3.308,377,2.921,379,2.124,384,1.122,386,1.241,387,1.178,388,1.178,391,0.875,392,2.554,393,2.554,394,1.241,395,1.241,396,2.274,397,1.241,398,1.241,399,1.241,400,1.241,401,1.241,402,2.796,403,2.02,404,1.241,405,2.02,407,2.02,408,1.241,409,3.138,411,1.241,412,1.241,413,1.241,414,1.241,415,1.241,416,2.02,417,1.122,418,1.241,419,1.241,420,1.241,426,0.734,427,0.909,501,2.66,505,3.024,610,1.398,620,3.344,622,3.693,627,1.313,628,1.398,631,2.439,634,1.795,636,1.625,644,1.398,651,1.625,666,1.625,668,1.795,680,2.137,909,3.853,922,1.795,1010,2.875,1049,2.274,1253,3.344,1254,4.241,1315,1.795,1383,2.921,1418,3.908,1454,2.921,1458,1.795,1477,1.795,1478,1.795,1479,4.223,1480,4.223,1481,4.223,1482,4.223,1483,3.34,1484,2.053,1485,2.053,1486,2.053,1487,2.053,1488,3.34,1489,2.053,1490,3.34,1491,2.053,1492,2.053,1493,2.053,1494,2.053,1495,2.053,1496,2.053,1497,2.053,1498,2.053,1499,2.053,1500,2.053,1501,1.795,1502,2.053,1503,3.34,1504,2.053,1505,2.053,1506,3.34,1507,2.053,1508,4.866,1509,3.34,1510,4.866,1511,3.34,1512,3.34,1513,2.053,1514,2.053,1515,2.053,1516,4.223,1517,3.34,1518,3.34,1519,4.223,1520,2.053,1521,3.34,1522,2.053,1523,2.053,1524,2.053,1525,2.053]],["title/coverage.html",[1526,4.489]],["body/coverage.html",[0,2.101,1,1.708,5,0.07,6,2.046,8,0.012,11,0.374,13,0.005,14,0.005,21,0.997,39,1.593,72,1.593,95,1.523,97,2.046,98,1.708,99,2.046,110,0.837,114,1.093,119,0.809,124,1.497,139,1.279,141,0.648,148,1.414,149,1.121,151,1.708,154,1.414,156,1.414,157,3.173,161,1.279,201,1.593,202,1.593,221,2.046,229,1.279,265,0.866,303,1.708,304,2.046,312,1.497,314,1.649,331,1.593,337,1.497,367,1.708,372,2.046,385,1.708,426,0.837,430,3.366,459,2.938,460,3.366,475,1.414,495,3.66,501,1.279,511,2.046,512,2.938,518,1.497,519,2.046,520,2.938,538,1.497,539,2.046,540,2.938,547,1.279,548,2.938,549,3.66,562,1.497,564,1.497,565,2.046,566,2.938,574,1.497,575,2.046,576,2.938,594,1.708,595,2.046,597,1.497,604,1.593,606,1.077,607,1.593,609,1.497,614,2.046,626,1.593,627,1.497,628,1.593,629,1.852,630,1.852,631,1.708,644,5.914,683,2.046,684,1.708,685,2.046,693,1.593,705,1.497,737,1.708,741,2.046,751,2.046,767,1.414,768,3.366,779,1.414,782,2.374,784,2.046,785,1.169,786,3.366,809,1.593,810,1.593,812,1.708,813,2.046,822,1.593,824,1.497,839,2.046,861,1.852,862,2.046,863,2.938,881,1.852,882,1.852,919,2.046,939,2.046,941,2.046,949,1.708,950,2.046,960,1.593,962,1.343,1004,1.593,1013,1.593,1030,2.046,1031,2.046,1087,3.366,1100,1.708,1101,2.046,1109,1.497,1111,1.497,1125,2.046,1153,2.938,1160,1.708,1161,1.708,1174,1.414,1175,3.366,1191,1.708,1194,1.708,1196,1.708,1197,2.046,1213,1.497,1233,2.046,1260,3.366,1273,1.708,1274,2.046,1280,1.593,1296,2.046,1317,3.366,1329,1.708,1330,2.046,1346,1.593,1349,1.497,1352,1.852,1369,2.046,1393,1.852,1394,1.852,1396,2.046,1402,2.046,1406,2.046,1408,2.046,1410,2.046,1414,2.046,1416,2.046,1418,1.593,1419,2.046,1424,3.366,1445,1.708,1446,2.046,1478,2.046,1526,1.852,1527,2.046,1528,2.339,1529,2.339,1530,8.322,1531,6.379,1532,3.709,1533,6.379,1534,6.379,1535,6.815,1536,5.246,1537,5.246,1538,7.68,1539,6.379,1540,4.031,1541,5.579,1542,5.72,1543,2.339,1544,2.046,1545,2.339,1546,3.709,1547,2.339,1548,3.709,1549,2.339,1550,2.339,1551,2.339,1552,2.339]],["title/dependencies.html",[18,2.128,1553,3.024]],["body/dependencies.html",[8,0.012,9,0.757,11,0.292,13,0.009,14,0.009,18,2.133,48,1.429,51,2.734,55,2.499,56,1.789,57,2.499,58,1.67,69,3.96,71,3.652,152,3.96,159,3.024,165,3.024,206,3.2,209,3.96,211,3.96,272,4.373,336,2.133,387,2.87,388,2.87,466,2.611,474,1.851,709,3.652,759,3.96,775,2.499,776,2.499,879,3.652,886,4.373,929,5.613,930,4.373,957,3.652,958,3.96,963,3.2,964,4.373,1501,4.373,1554,5.001,1555,7.088,1556,5.001,1557,5.001,1558,5.001,1559,5.001,1560,5.001,1561,5.001,1562,5.001,1563,5.001,1564,5.001,1565,6.419,1566,5.001,1567,5.001,1568,5.001,1569,5.001,1570,5.001,1571,5.001,1572,5.001,1573,5.001,1574,5.001,1575,5.001,1576,5.001,1577,5.001,1578,5.001,1579,5.001,1580,5.001,1581,5.001,1582,5.001,1583,5.001,1584,5.001,1585,5.001,1586,5.001]],["title/miscellaneous/functions.html",[1587,2.213,1588,4.364]],["body/miscellaneous/functions.html",[8,0.011,13,0.011,14,0.011,21,3.411,102,0.688,1544,5.759,1587,4.214,1588,5.759,1589,6.585]],["title/index.html",[102,0.361,1590,3.458,1591,3.458]],["body/index.html",[4,0.095,8,0.012,13,0.007,14,0.007,42,3.234,269,3.319,433,1.747,508,4.552,653,3.319,749,3.319,753,5.332,785,2.665,814,2.771,898,3.319,957,5.591,991,5.294,1009,3.006,1063,3.319,1526,3.006,1527,4.663,1592,3.795,1593,3.795,1594,6.163,1595,5.332,1596,3.795,1597,3.795,1598,3.795,1599,5.332,1600,6.163,1601,3.795,1602,3.795,1603,3.795,1604,6.685,1605,3.795,1606,7.656,1607,3.795,1608,7.501,1609,3.795,1610,3.795,1611,3.795,1612,5.332,1613,3.795,1614,5.332,1615,3.795,1616,6.163,1617,3.795,1618,5.332,1619,3.795,1620,3.795,1621,3.795,1622,3.795,1623,6.685,1624,7.303,1625,3.795,1626,5.332,1627,3.795,1628,3.795,1629,3.795,1630,3.795,1631,3.795,1632,5.332,1633,6.685,1634,3.795,1635,5.332,1636,3.795,1637,5.332,1638,7.303,1639,6.685,1640,3.795,1641,5.332,1642,3.795,1643,3.795,1644,3.795,1645,3.795,1646,6.685,1647,3.795,1648,3.795,1649,3.795,1650,3.795,1651,5.332,1652,3.795,1653,3.795,1654,3.795,1655,3.795,1656,3.795,1657,5.332,1658,3.795,1659,3.795,1660,3.795,1661,5.332,1662,3.795,1663,3.795,1664,5.332,1665,3.795,1666,3.795,1667,3.795,1668,3.795,1669,3.795,1670,3.795,1671,3.795,1672,3.795,1673,5.332,1674,3.795,1675,3.319,1676,3.795,1677,3.795,1678,6.163,1679,3.795,1680,3.795,1681,3.795,1682,3.795,1683,3.795,1684,5.332,1685,3.795,1686,3.795,1687,3.795,1688,3.795,1689,3.795,1690,3.795,1691,5.332,1692,5.332,1693,3.795,1694,3.795,1695,3.795,1696,3.795,1697,3.795,1698,3.795,1699,3.795,1700,3.795,1701,3.795,1702,3.795,1703,3.319,1704,3.795,1705,3.795,1706,3.795,1707,3.795,1708,3.795,1709,3.795,1710,3.319]],["title/modules.html",[17,2.331]],["body/modules.html",[8,0.01,13,0.01,14,0.01,16,4.073,17,2.293,27,3.798,28,3.798,29,3.798,30,3.798,31,3.798,32,3.798,33,3.798,34,3.798,35,3.798,36,3.569,37,3.798,38,3.569,991,6.753,1675,4.878,1711,8.527,1712,8.527,1713,8.559,1714,5.578]],["title/overview.html",[1715,4.958]],["body/overview.html",[2,1.086,8,0.012,13,0.007,14,0.007,15,0.93,16,6.239,17,1.563,18,1.622,19,1.751,20,1.751,21,1.622,22,1.751,23,1.751,24,3.325,25,3.325,26,3.325,27,5.561,28,4.798,29,5.11,30,4.798,31,4.201,32,4.798,33,4.798,34,4.798,35,4.798,36,4.802,37,4.798,38,4.802,39,4.201,40,2.458,41,1.751,42,1.684,90,2.589,96,1.407,154,4.538,161,4.103,197,3.325,199,3.325,200,3.325,201,4.201,202,4.201,229,4.188,337,3.948,363,3.325,364,3.325,402,1.985,429,0.93,597,3.948,600,3.325,601,3.325,705,3.948,732,3.325,733,3.325,783,3.011,824,3.948,833,3.325,834,3.325,1002,3.325,1003,3.325,1004,4.201,1111,3.948,1120,3.325,1121,3.325,1213,3.948,1227,3.325,1228,3.325,1290,3.325,1291,3.325,1292,3.325,1349,3.948,1364,3.325,1365,3.325,1393,3.011,1472,3.325,1473,3.325,1715,3.325,1716,5.339,1717,3.802,1718,3.802]],["title/properties.html",[222,1.221,1553,3.024]],["body/properties.html",[8,0.012,13,0.011,14,0.011,222,1.596,433,3.003,1703,5.705,1710,5.705,1719,6.523,1720,6.523,1721,6.523]],["title/miscellaneous/typealiases.html",[1587,2.213,1722,4.99]],["body/miscellaneous/typealiases.html",[8,0.01,13,0.01,14,0.01,102,0.627,119,0.733,385,5.246,430,4.378,455,4.803,626,4.892,627,4.597,628,4.892,786,4.378,809,4.892,960,4.892,1087,4.378,1175,4.378,1191,5.246,1260,4.378,1317,4.378,1424,4.378,1587,3.837,1723,5.996,1724,5.244,1725,5.244,1726,5.244,1727,5.244,1728,5.244,1729,5.244,1730,5.244]],["title/miscellaneous/variables.html",[1587,2.213,1731,4.364]],["body/miscellaneous/variables.html",[5,0.025,8,0.012,13,0.003,14,0.003,15,1.857,56,2.165,84,0.355,93,0.825,102,0.138,114,1.609,118,0.893,119,0.558,122,0.661,134,0.966,144,2.564,148,1.395,149,1.105,183,0.416,240,0.645,245,4.045,246,3.492,257,2.278,261,2.171,263,6.638,264,1.924,265,1.357,286,3.237,305,3.637,306,1.264,310,1.877,314,1.488,325,1.69,334,2.497,367,1.684,391,3.237,426,0.473,430,0.966,432,4.357,434,4.357,436,3.638,458,1.157,476,1.216,541,4.857,542,5.168,552,0.723,604,1.57,606,1.915,607,1.57,609,1.476,629,1.826,630,1.826,631,1.684,644,5.168,646,3.617,662,3.294,675,6.668,686,1.048,785,2.079,786,0.966,810,1.57,811,1.157,814,3.037,871,0.901,881,1.826,882,1.826,889,1.157,895,1.157,936,5.542,1013,1.57,1087,0.966,1099,1.157,1160,1.684,1174,2.515,1175,0.966,1194,1.684,1195,1.157,1198,4.295,1260,0.966,1272,1.157,1317,0.966,1328,1.157,1336,3.617,1352,1.826,1424,0.966,1441,1.157,1540,1.157,1541,1.157,1587,0.847,1724,1.157,1725,1.157,1726,1.157,1727,1.157,1728,1.157,1729,1.157,1730,1.157,1731,1.157,1732,3.065,1733,4.911,1734,1.323,1735,1.323,1736,2.306,1737,7.625,1738,8.217,1739,8.217,1740,1.323,1741,1.323,1742,7.59,1743,1.323,1744,2.306,1745,1.323,1746,3.065,1747,2.306,1748,1.323,1749,2.306,1750,1.323,1751,2.306,1752,1.323,1753,3.065,1754,2.306,1755,1.323,1756,2.306,1757,2.306,1758,1.323,1759,2.306,1760,1.323,1761,2.306,1762,1.323,1763,2.306,1764,1.323,1765,1.323,1766,1.323,1767,1.323,1768,2.306,1769,1.323,1770,2.306,1771,2.306,1772,1.323,1773,3.065,1774,2.306,1775,1.323,1776,2.306,1777,1.323,1778,2.306,1779,1.323,1780,2.306,1781,1.323,1782,2.306,1783,2.306,1784,1.323,1785,4.567,1786,2.306,1787,1.323,1788,2.306,1789,2.306,1790,1.323,1791,2.306,1792,1.323,1793,1.323,1794,2.306,1795,1.323,1796,1.323,1797,2.306,1798,1.323,1799,2.306,1800,2.306,1801,1.323,1802,2.306,1803,1.323,1804,3.065,1805,2.306,1806,1.323,1807,2.306,1808,1.323,1809,2.306,1810,1.323,1811,2.306,1812,2.306,1813,1.323,1814,2.306,1815,1.323,1816,3.065,1817,2.306,1818,1.323,1819,2.306,1820,1.323,1821,2.306,1822,1.323,1823,1.323,1824,1.323,1825,1.323,1826,1.323,1827,1.323,1828,1.323,1829,1.323]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":644,"title":{},"body":{"injectables/DatabasesService.html":{},"controllers/MailController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1720,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1567,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1584,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1566,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1580,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1530,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1548,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1537,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1550,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1547,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1549,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1542,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1543,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1534,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1533,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1536,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1531,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1535,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1532,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1546,"title":{},"body":{"coverage.html":{}}}],["00:00:00",{"_index":975,"title":{},"body":{"controllers/MailController.html":{}}}],["06",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":402,"title":{"classes/Company-1.html":{}},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["1.0.0",{"_index":1582,"title":{},"body":{"dependencies.html":{}}}],["1.0.17",{"_index":1586,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":1569,"title":{},"body":{"dependencies.html":{}}}],["1.6.1",{"_index":1554,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":404,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["10.0.0",{"_index":1555,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":1559,"title":{},"body":{"dependencies.html":{}}}],["10.1.0",{"_index":1558,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1557,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["1024",{"_index":719,"title":{},"body":{"controllers/FilesController.html":{}}}],["11.0.0",{"_index":1562,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":1561,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":1716,"title":{},"body":{"overview.html":{}}}],["15t06:47:49.369z",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:48:22.224z",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:01.241z",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:23.973z",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:05.131z",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:32.799z",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:31.898z",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:51.041z",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:13.364z",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:41.934z",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:56.274z",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:01:36.923z",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:16.508z",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:33.697z",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:46.085z",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:24.175z",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:37.896z",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:14.659z",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:33.395z",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:50.801z",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:15.785z",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:41.694z",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:05.961z",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:50.946z",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:10.914z",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:33.234z",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:48.081z",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:11.323z",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:51.974z",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:06.618z",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:20.853z",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:36.836z",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:52.798z",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1717,"title":{},"body":{"overview.html":{}}}],["1gb",{"_index":722,"title":{},"body":{"controllers/FilesController.html":{}}}],["2",{"_index":90,"title":{"classes/Company-2.html":{}},"body":{"modules/AppModule.html":{},"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["2.1.3",{"_index":1577,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1565,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.1.10",{"_index":1571,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1556,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":670,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["31",{"_index":1718,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1467,"title":{},"body":{"controllers/UsersController.html":{}}}],["4.0.1",{"_index":1581,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":1573,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":1560,"title":{},"body":{"dependencies.html":{}}}],["5.4.0",{"_index":1564,"title":{},"body":{"dependencies.html":{}}}],["6.10.0",{"_index":1579,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":1563,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{}}}],["647b5108a8a243e8191855b5",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab415f4328bd3153ee211",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab436f4328bd3153ee216",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4d5f4328bd3153ee21b",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4ebf4328bd3153ee220",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab5a8072f2a2ef910638d",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6d3fa16b294212e4033",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6e7fa16b294212e4038",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6fdfa16b294212e403d",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab719fa16b294212e4042",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab728fa16b294212e4047",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab750fa16b294212e404c",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad488dafdb9754f40b846",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad499dafdb9754f40b84b",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4a6dafdb9754f40b850",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4ccdafdb9754f40b859",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4d9dafdb9754f40b85e",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4fedafdb9754f40b863",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad511dafdb9754f40b868",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad522dafdb9754f40b86d",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad53bdafdb9754f40b872",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad555dafdb9754f40b877",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad56ddafdb9754f40b87c",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad59adafdb9754f40b881",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5aedafdb9754f40b886",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5c5dafdb9754f40b88b",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5d4dafdb9754f40b890",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5ebdafdb9754f40b895",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad613dafdb9754f40b89a",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad622dafdb9754f40b89f",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad630dafdb9754f40b8a6",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad640dafdb9754f40b8ab",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad650dafdb9754f40b8b0",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.6.1",{"_index":1576,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1585,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":1575,"title":{},"body":{"dependencies.html":{}}}],["999999",{"_index":510,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["__v",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["_req",{"_index":1076,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["accesstoken",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":1524,"title":{},"body":{"injectables/UsersService.html":{}}}],["action",{"_index":747,"title":{},"body":{"injectables/FilesService.html":{}}}],["actual",{"_index":1171,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["adapter",{"_index":1025,"title":{},"body":{"modules/MailModule.html":{}}}],["addfiletypevalidator",{"_index":714,"title":{},"body":{"controllers/FilesController.html":{}}}],["addmaxsizevalidator",{"_index":717,"title":{},"body":{"controllers/FilesController.html":{}}}],["address",{"_index":431,"title":{},"body":{"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["adds",{"_index":748,"title":{},"body":{"injectables/FilesService.html":{}}}],["admin",{"_index":651,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["admin@gmail.com",{"_index":509,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["admin_role",{"_index":629,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminrole",{"_index":665,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["adminrole?._id",{"_index":673,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["age",{"_index":506,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["alias",{"_index":1539,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":1723,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowing",{"_index":1652,"title":{},"body":{"index.html":{}}}],["already",{"_index":680,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["amazing",{"_index":1697,"title":{},"body":{"index.html":{}}}],["api",{"_index":387,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["api/v1/companies",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/companies/:id",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/files/upload",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs/:id",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions/:id",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/:id",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/by",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/status/:id",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles/:id",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users/:id",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":1460,"title":{},"body":{"controllers/UsersController.html":{}}}],["apibody",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["apipath",{"_index":541,"title":{},"body":{"classes/CreatePermissionDto.html":{},"interfaces/IUser.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":498,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["app",{"_index":997,"title":{},"body":{"controllers/MailController.html":{}}}],["app.controller",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":1624,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1599,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":16,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":39,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aqp",{"_index":386,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["aqp(qs",{"_index":398,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["arguments",{"_index":899,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["array",{"_index":485,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["array'})@isstring({each",{"_index":535,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["async",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"modules/MailModule.html":{}}}],["auth.controller",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":863,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:13",{"_index":872,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:25",{"_index":875,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:8",{"_index":869,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":98,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":880,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":864,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":940,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":27,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1703,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":154,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1714,"title":{},"body":{"modules.html":{}}}],["await",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["aws",{"_index":1641,"title":{},"body":{"index.html":{}}}],["b",{"_index":479,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["backers",{"_index":1698,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('apipath",{"_index":1138,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["badrequestexception('email",{"_index":1383,"title":{},"body":{"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('id",{"_index":422,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["badrequestexception('name",{"_index":1306,"title":{},"body":{"injectables/RolesService.html":{}}}],["badrequestexception('not",{"_index":1315,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('refresh",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{}}}],["based",{"_index":898,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"index.html":{}}}],["basename",{"_index":1083,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["bcryptjs",{"_index":1501,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["bearer",{"_index":902,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["board",{"_index":1690,"title":{},"body":{"index.html":{}}}],["body",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["body('name",{"_index":1464,"title":{},"body":{"controllers/UsersController.html":{}}}],["body('password",{"_index":1463,"title":{},"body":{"controllers/UsersController.html":{}}}],["body('status",{"_index":1224,"title":{},"body":{"controllers/ResumesController.html":{}}}],["boolean",{"_index":448,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"guards/TestGuard.html":{},"classes/User.html":{}}}],["boolean(isinit",{"_index":639,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bootstrap",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":1057,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["browse",{"_index":1713,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1711,"title":{},"body":{"modules.html":{}}}],["build",{"_index":723,"title":{},"body":{"controllers/FilesController.html":{}}}],["building",{"_index":1595,"title":{},"body":{"index.html":{}}}],["c",{"_index":478,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["callback",{"_index":1069,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["callback(null",{"_index":1073,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["callhandler",{"_index":1156,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":865,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/TestGuard.html":{}}}],["canactivate(context",{"_index":870,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"guards/TestGuard.html":{}}}],["case",{"_index":1052,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["catch",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["ch",{"_index":971,"title":{},"body":{"controllers/MailController.html":{}}}],["channel",{"_index":1666,"title":{},"body":{"index.html":{}}}],["check",{"_index":753,"title":{},"body":{"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{},"guards/TestGuard.html":{},"index.html":{}}}],["class",{"_index":11,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":429,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"overview.html":{}}}],["clicks",{"_index":1651,"title":{},"body":{"index.html":{}}}],["client",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["cloud",{"_index":1636,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_companiesmodule",{"_index":363,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_companiesmodule_providers",{"_index":364,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule",{"_index":600,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule_providers",{"_index":601,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":732,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":733,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_jobsmodule",{"_index":833,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":834,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":1002,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":1003,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule",{"_index":1120,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule_providers",{"_index":1121,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_resumesmodule",{"_index":1227,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_resumesmodule_providers",{"_index":1228,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":1290,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_exports",{"_index":1291,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":1292,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule",{"_index":1364,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule_providers",{"_index":1365,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1472,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1473,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1474,"title":{},"body":{"modules/UsersModule.html":{}}}],["come",{"_index":1658,"title":{},"body":{"index.html":{}}}],["companies",{"_index":305,"title":{},"body":{"controllers/CompaniesController.html":{},"miscellaneous/variables.html":{}}}],["companies.controller",{"_index":366,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["companies.service",{"_index":338,"title":{},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{}}}],["companies/companies.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["companiescontroller",{"_index":303,"title":{"controllers/CompaniesController.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"coverage.html":{}}}],["companiesmodule",{"_index":28,"title":{"modules/CompaniesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules.html":{},"overview.html":{}}}],["companiesservice",{"_index":337,"title":{"injectables/CompaniesService.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"coverage.html":{},"overview.html":{}}}],["company",{"_index":314,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/MailController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["company.dto",{"_index":340,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts",{"_index":512,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["company.dto.ts:10",{"_index":1403,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts:11",{"_index":515,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:13",{"_index":1404,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts:14",{"_index":516,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:5",{"_index":517,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:7",{"_index":1405,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts:8",{"_index":514,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.name",{"_index":370,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Job.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["companydocument",{"_index":385,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["companyid",{"_index":550,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["companymodel",{"_index":376,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["companyschema",{"_index":367,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparesync",{"_index":1498,"title":{},"body":{"injectables/UsersService.html":{}}}],["comparesync(password",{"_index":1507,"title":{},"body":{"injectables/UsersService.html":{}}}],["configmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["configservice.get('email_host",{"_index":1018,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_preview",{"_index":1029,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_send",{"_index":1020,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_send_password",{"_index":1021,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('jwt_access_token_secret",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('mongo_url",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":998,"title":{},"body":{"controllers/MailController.html":{}}}],["connection",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.plugin(softdeleteplugin",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionfactory",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error(error",{"_index":1066,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log('directory",{"_index":1047,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["const",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel(company.name",{"_index":389,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["constructor(@injectmodel(job.name",{"_index":849,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(@injectmodel(permission.name",{"_index":1133,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["constructor(@injectmodel(resume.name",{"_index":1245,"title":{},"body":{"injectables/ResumesService.html":{}}}],["constructor(@injectmodel(subscriber.name",{"_index":1380,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(authservice",{"_index":942,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(companymodel",{"_index":373,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["constructor(configservice",{"_index":922,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["constructor(jobmodel",{"_index":840,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(permissionmodel",{"_index":1126,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["constructor(private",{"_index":343,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":867,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["constructor(resumemodel",{"_index":1234,"title":{},"body":{"injectables/ResumesService.html":{}}}],["constructor(rolemodel",{"_index":1297,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(subscribermodel",{"_index":1371,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(usermodel",{"_index":618,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["constructor(userservice",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["contains",{"_index":1061,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["context",{"_index":873,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":892,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":891,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":894,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":1166,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('companies",{"_index":342,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["controller('databases",{"_index":599,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["controller('files",{"_index":710,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller('health",{"_index":760,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('jobs",{"_index":827,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('mail",{"_index":966,"title":{},"body":{"controllers/MailController.html":{}}}],["controller('permissions",{"_index":1114,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["controller('resumes",{"_index":1215,"title":{},"body":{"controllers/ResumesController.html":{}}}],["controller('roles",{"_index":1284,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('subscribers",{"_index":1353,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["controller('users",{"_index":1461,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["courses",{"_index":1672,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1526,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":306,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":346,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["create(@body('email",{"_index":1462,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createcompanydto",{"_index":311,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["create(createfiledto",{"_index":688,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["create(createjobdto",{"_index":815,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["create(createpermissiondto",{"_index":1102,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["create(createresumedto",{"_index":1201,"title":{},"body":{"controllers/ResumesController.html":{}}}],["create(createroledto",{"_index":1275,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["create(createsubscriberdto",{"_index":1332,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["create(createusercvdto",{"_index":1237,"title":{},"body":{"injectables/ResumesService.html":{}}}],["create(createuserdto",{"_index":1447,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(info",{"_index":377,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/UsersService.html":{}}}],["createcompanydto",{"_index":312,"title":{"classes/CreateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["created",{"_index":1048,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createdat",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createdby",{"_index":391,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createfiledto",{"_index":518,"title":{"classes/CreateFileDto.html":{}},"body":{"classes/CreateFileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["createjobdto",{"_index":475,"title":{"classes/CreateJobDto.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["createmulteroptions",{"_index":1034,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createparamdecorator((_data",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermissiondto",{"_index":538,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["createpermissiondto.apipath",{"_index":1136,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["createpermissiondto.method",{"_index":1137,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["createrefreshtoken",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["createresumedto",{"_index":547,"title":{"classes/CreateResumeDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/History.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["createroledto",{"_index":564,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["createroledto.name",{"_index":1305,"title":{},"body":{"injectables/RolesService.html":{}}}],["createsubscriberdto",{"_index":574,"title":{"classes/CreateSubscriberDto.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["createsubscriberdto.email",{"_index":1382,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["createusercvdto",{"_index":562,"title":{"classes/CreateUserCvDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":501,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["cron",{"_index":964,"title":{},"body":{"controllers/MailController.html":{},"dependencies.html":{}}}],["cronexpression",{"_index":965,"title":{},"body":{"controllers/MailController.html":{}}}],["ctx",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["currentpage",{"_index":322,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["cách",{"_index":1517,"title":{},"body":{"injectables/UsersService.html":{}}}],["cập",{"_index":916,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["data",{"_index":682,"title":{},"body":{"injectables/DatabasesService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["data.result",{"_index":1173,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["data?.meta",{"_index":1169,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["data?.result",{"_index":1168,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["databases",{"_index":596,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["databases.controller",{"_index":603,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["databases.service",{"_index":598,"title":{},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{}}}],["databases/databases.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["databasescontroller",{"_index":594,"title":{"controllers/DatabasesController.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"coverage.html":{}}}],["databasesmodule",{"_index":29,"title":{"modules/DatabasesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabasesModule.html":{},"modules.html":{},"overview.html":{}}}],["databasesservice",{"_index":597,"title":{"injectables/DatabasesService.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":439,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{}}}],["date(value",{"_index":492,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["date.now()}${extname",{"_index":1086,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["db",{"_index":761,"title":{},"body":{"controllers/HealthController.html":{}}}],["declarations",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":1668,"title":{},"body":{"index.html":{}}}],["default",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defaultlimit",{"_index":403,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["defined",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":359,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@responsemessage('delete",{"_index":328,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@skipcheckpermission()@responsemessage('delete",{"_index":1343,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["deletedat",{"_index":432,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["deletedby",{"_index":427,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["denied",{"_index":1065,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dependencies",{"_index":18,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1623,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":1640,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1632,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":1650,"title":{},"body":{"index.html":{}}}],["description",{"_index":433,"title":{},"body":{"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"classes/UpdateCompanyDto.html":{},"classes/UserLoginDto.html":{},"index.html":{},"properties.html":{}}}],["destination",{"_index":1068,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["development",{"_index":1609,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1680,"title":{},"body":{"index.html":{}}}],["dir",{"_index":1022,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["directory",{"_index":1056,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["discord",{"_index":1665,"title":{},"body":{"index.html":{}}}],["diskstorage",{"_index":1041,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dive",{"_index":1667,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1527,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto/create",{"_index":339,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":341,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dùng",{"_index":656,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["dạng",{"_index":483,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["dạng'})@isnotempty({message",{"_index":556,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["dụng",{"_index":659,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["e2e",{"_index":1619,"title":{},"body":{"index.html":{}}}],["each",{"_index":486,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["eexist",{"_index":1053,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["efficient",{"_index":1596,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":1630,"title":{},"body":{"index.html":{}}}],["ejs",{"_index":1570,"title":{},"body":{"dependencies.html":{}}}],["em21072006015@vnkgu.edu.vn",{"_index":990,"title":{},"body":{"controllers/MailController.html":{}}}],["email",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["email')@cron",{"_index":954,"title":{},"body":{"controllers/MailController.html":{}}}],["enddate",{"_index":493,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["endpoint",{"_index":917,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["enotdir",{"_index":1058,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensure",{"_index":1628,"title":{},"body":{"index.html":{}}}],["ensureexists",{"_index":1032,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["enterprise",{"_index":1683,"title":{},"body":{"index.html":{}}}],["err",{"_index":876,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{}}}],["error.code",{"_index":1051,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["errorhttpstatuscode",{"_index":724,"title":{},"body":{"controllers/FilesController.html":{}}}],["example",{"_index":508,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"index.html":{}}}],["exception",{"_index":897,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["exec",{"_index":416,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["executioncontext",{"_index":871,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exists",{"_index":1049,"title":{},"body":{"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["experience",{"_index":1670,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":218,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":696,"title":{},"body":{"controllers/FilesController.html":{}}}],["extends",{"_index":780,"title":{},"body":{"classes/History.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{}}}],["extension",{"_index":1078,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extname",{"_index":1079,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":927,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":934,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":936,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"guards/TestGuard.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":1644,"title":{},"body":{"index.html":{}}}],["features",{"_index":1654,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["few",{"_index":1646,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file')@useinterceptors(undefined",{"_index":698,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.dto",{"_index":707,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{}}}],["file.dto.ts",{"_index":520,"title":{},"body":{"classes/CreateFileDto.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":726,"title":{},"body":{"controllers/FilesController.html":{}}}],["fileinterceptor",{"_index":708,"title":{},"body":{"controllers/FilesController.html":{}}}],["filename",{"_index":700,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["files",{"_index":686,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"miscellaneous/variables.html":{}}}],["files.controller",{"_index":735,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.service",{"_index":706,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files/files.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["filescontroller",{"_index":684,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesmodule",{"_index":30,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filesservice",{"_index":705,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"coverage.html":{},"overview.html":{}}}],["filetype",{"_index":715,"title":{},"body":{"controllers/FilesController.html":{}}}],["filter",{"_index":394,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.limit",{"_index":400,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.page",{"_index":399,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["finalname",{"_index":1085,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["find(filter",{"_index":411,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["findall",{"_index":307,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(@query('page",{"_index":349,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["findall(currentpage",{"_index":316,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findcvbyuser",{"_index":1199,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["findcvbyuser(@user",{"_index":1218,"title":{},"body":{"controllers/ResumesController.html":{}}}],["findcvbyuser(user",{"_index":1204,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["findone",{"_index":308,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":353,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":323,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findoneusername",{"_index":1483,"title":{},"body":{"injectables/UsersService.html":{}}}],["findoneusername(username",{"_index":1488,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbytoken",{"_index":1479,"title":{},"body":{"injectables/UsersService.html":{}}}],["focus",{"_index":1653,"title":{},"body":{"index.html":{}}}],["folder",{"_index":1070,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["follow",{"_index":1686,"title":{},"body":{"index.html":{}}}],["forbiddenexception",{"_index":877,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["forbiddenexception('bạn",{"_index":914,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["found",{"_index":858,"title":{},"body":{"injectables/JobsService.html":{}}}],["foundrole",{"_index":1311,"title":{},"body":{"injectables/RolesService.html":{}}}],["foundrole.name",{"_index":1313,"title":{},"body":{"injectables/RolesService.html":{}}}],["founduser",{"_index":1521,"title":{},"body":{"injectables/UsersService.html":{}}}],["founduser.email",{"_index":1523,"title":{},"body":{"injectables/UsersService.html":{}}}],["framework",{"_index":1594,"title":{},"body":{"index.html":{}}}],["fs",{"_index":1040,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.mkdir(targetdirectory",{"_index":1045,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["full",{"_index":653,"title":{},"body":{"injectables/DatabasesService.html":{},"index.html":{}}}],["function",{"_index":1545,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1588,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":1649,"title":{},"body":{"index.html":{}}}],["gender",{"_index":507,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["gensaltsync",{"_index":1499,"title":{},"body":{"injectables/UsersService.html":{}}}],["gensaltsync(10",{"_index":1504,"title":{},"body":{"injectables/UsersService.html":{}}}],["get(':id",{"_index":352,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@responsemessage('fetch",{"_index":1106,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@skipcheckpermission()@responsemessage('fetch",{"_index":1338,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["get('account",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('account')@responsemessage('get",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('by",{"_index":1205,"title":{},"body":{"controllers/ResumesController.html":{}}}],["get('refresh",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@public()@healthcheck",{"_index":754,"title":{},"body":{"controllers/HealthController.html":{}}}],["get()@public()@responsemessage('test",{"_index":953,"title":{},"body":{"controllers/MailController.html":{}}}],["get()@responsemessage('fetch",{"_index":1104,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["get()@skipcheckpermission()@responsemessage('fetch",{"_index":1335,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["get()@useguards(throttlerguard)@throttle({default",{"_index":1449,"title":{},"body":{"controllers/UsersController.html":{}}}],["gethashpassword",{"_index":1480,"title":{},"body":{"injectables/UsersService.html":{}}}],["getprofile",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@user",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(user",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["getrootpath",{"_index":1033,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["getskills",{"_index":1370,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["getskills(user",{"_index":1376,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["getting",{"_index":1590,"title":{"index.html":{}},"body":{}}],["getuserskills",{"_index":1331,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getuserskills(@user",{"_index":1356,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getuserskills(user",{"_index":1340,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["giải",{"_index":931,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["graph",{"_index":1675,"title":{},"body":{"index.html":{},"modules.html":{}}}],["grow",{"_index":1694,"title":{},"body":{"index.html":{}}}],["guard",{"_index":1393,"title":{"guards/TestGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":1395,"title":{},"body":{"guards/TestGuard.html":{}}}],["h",{"_index":660,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["handlebars",{"_index":1572,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":1011,"title":{},"body":{"modules/MailModule.html":{}}}],["handlelogin",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(@req",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(req",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout(@res",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout(response",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["handler",{"_index":888,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerefreshtoken",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken(@req",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshtoken(request",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(@body",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(registeruserdto",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":866,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":874,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handletestemail",{"_index":952,"title":{},"body":{"controllers/MailController.html":{}}}],["hands",{"_index":1669,"title":{},"body":{"index.html":{}}}],["handy",{"_index":1659,"title":{},"body":{"index.html":{}}}],["hash",{"_index":1506,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpass",{"_index":1510,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync",{"_index":1500,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync(password",{"_index":1505,"title":{},"body":{"injectables/UsersService.html":{}}}],["header",{"_index":903,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["health",{"_index":752,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":765,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.controller",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["health/health.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":756,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":757,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":72,"title":{"controllers/HealthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":31,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["helmet",{"_index":1574,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":1673,"title":{},"body":{"index.html":{}}}],["here",{"_index":1701,"title":{},"body":{"index.html":{}}}],["hierarchy",{"_index":1060,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["history",{"_index":767,"title":{"classes/History.html":{}},"body":{"classes/History.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["host",{"_index":1017,"title":{},"body":{"modules/MailModule.html":{}}}],["httponly",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":1707,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":704,"title":{},"body":{"controllers/FilesController.html":{}}}],["httpstatus.unprocessable_entity",{"_index":725,"title":{},"body":{"controllers/FilesController.html":{}}}],["hydrateddocument",{"_index":455,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["hàng",{"_index":973,"title":{},"body":{"controllers/MailController.html":{}}}],["hợp",{"_index":901,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["id",{"_index":325,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1528,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":935,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1077,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["image's",{"_index":1081,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["implements",{"_index":633,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":102,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["info.email",{"_index":1509,"title":{},"body":{"injectables/UsersService.html":{}}}],["information",{"_index":1634,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":1656,"title":{},"body":{"index.html":{}}}],["init",{"_index":681,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["init_permissions",{"_index":630,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialize",{"_index":641,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["initializedata",{"_index":616,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["inject",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["injectable",{"_index":95,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":96,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":384,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(job.name",{"_index":967,"title":{},"body":{"controllers/MailController.html":{}}}],["injectmodel(permission.name",{"_index":635,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["injectmodel(role.name",{"_index":636,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(subscriber.name",{"_index":968,"title":{},"body":{"controllers/MailController.html":{}}}],["injectmodel(user.name",{"_index":634,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["install",{"_index":1648,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":1607,"title":{},"body":{"index.html":{}}}],["interact",{"_index":1676,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":1399,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":1162,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":782,"title":{"interfaces/IUser.html":{},"interfaces/Response.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":783,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["invalid",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["is_public_key",{"_index":881,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["is_public_permission",{"_index":882,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":494,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"classes/Role.html":{}}}],["isarray",{"_index":467,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["isboolean",{"_index":468,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["isdate",{"_index":469,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["isdate({message",{"_index":524,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["isdeleted",{"_index":434,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":499,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{}}}],["isexist",{"_index":909,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["isexistapipathandmethod",{"_index":1134,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["isexistname",{"_index":1304,"title":{},"body":{"injectables/RolesService.html":{}}}],["isglobal",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["isinit",{"_index":637,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["ismongoid",{"_index":500,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty",{"_index":462,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty()@isarray()@validatenested()@type(undefined",{"_index":1412,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["isnotempty()@isemail",{"_index":577,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/UpdatedBy.html":{}}}],["isnotempty()@transform",{"_index":770,"title":{},"body":{"classes/History.html":{}}}],["isnotempty({message",{"_index":513,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotemptyobject",{"_index":470,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotemptyobject()@isobject()@validatenested()@type(undefined",{"_index":521,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{}}}],["isobject",{"_index":471,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["ispublic",{"_index":889,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["ispublicpermission",{"_index":895,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["iss",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":472,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({example",{"_index":1442,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["isvalid",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvalidpassword",{"_index":1481,"title":{},"body":{"injectables/UsersService.html":{}}}],["it's",{"_index":1055,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["item.company.name",{"_index":986,"title":{},"body":{"controllers/MailController.html":{}}}],["item.name",{"_index":985,"title":{},"body":{"controllers/MailController.html":{}}}],["item.salary}`.replace(/\\b(?=(\\d{3})+(?!\\d))/g",{"_index":987,"title":{},"body":{"controllers/MailController.html":{}}}],["item.skills",{"_index":988,"title":{},"body":{"controllers/MailController.html":{}}}],["iuser",{"_index":110,"title":{"interfaces/IUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["job",{"_index":785,"title":{"classes/Job.html":{}},"body":{"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["job._id",{"_index":851,"title":{},"body":{"injectables/JobsService.html":{}}}],["job.createdat",{"_index":852,"title":{},"body":{"injectables/JobsService.html":{}}}],["job.dto",{"_index":826,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts",{"_index":460,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:18",{"_index":463,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:21",{"_index":464,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:26",{"_index":531,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:31",{"_index":536,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:34",{"_index":533,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:37",{"_index":532,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:40",{"_index":528,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:43",{"_index":529,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:46",{"_index":530,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:51",{"_index":537,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:56",{"_index":525,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:60",{"_index":527,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:66",{"_index":522,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.name",{"_index":838,"title":{},"body":{"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Resume.html":{}}}],["jobdocument",{"_index":809,"title":{},"body":{"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["jobid",{"_index":551,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["jobmodel",{"_index":842,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["jobs",{"_index":814,"title":{},"body":{"controllers/JobsController.html":{},"controllers/MailController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["jobs.controller",{"_index":836,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":825,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["jobschema",{"_index":810,"title":{},"body":{"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobscontroller",{"_index":812,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"coverage.html":{}}}],["jobsmodule",{"_index":32,"title":{"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsservice",{"_index":824,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"overview.html":{}}}],["jobwithmatchingskills",{"_index":981,"title":{},"body":{"controllers/MailController.html":{}}}],["jobwithmatchingskills.map((item",{"_index":984,"title":{},"body":{"controllers/MailController.html":{}}}],["jobwithmatchingskills?.length",{"_index":983,"title":{},"body":{"controllers/MailController.html":{}}}],["join",{"_index":1009,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"index.html":{}}}],["join(__dirname",{"_index":1023,"title":{},"body":{"modules/MailModule.html":{}}}],["join(this.getrootpath",{"_index":1074,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["jpg|jpeg|image\\/jpeg|png|image\\/png|gif|txt|pdf|application\\/pdf|doc|docx|text\\/plain",{"_index":716,"title":{},"body":{"controllers/FilesController.html":{}}}],["jwt",{"_index":930,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":861,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":933,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":201,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1704,"title":{},"body":{"index.html":{}}}],["kb",{"_index":720,"title":{},"body":{"controllers/FilesController.html":{}}}],["key",{"_index":1625,"title":{},"body":{"index.html":{}}}],["không",{"_index":477,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["khẩu",{"_index":504,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["l",{"_index":484,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["learn",{"_index":1662,"title":{},"body":{"index.html":{}}}],["legend",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["level",{"_index":489,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["license",{"_index":1710,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1692,"title":{},"body":{"index.html":{}}}],["limit",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["limit(defaultlimit",{"_index":413,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["linkedin",{"_index":1688,"title":{},"body":{"index.html":{}}}],["list",{"_index":319,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["literal",{"_index":441,"title":{},"body":{"classes/Company.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["local",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":151,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":202,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":490,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{}}}],["logger",{"_index":615,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["logger(databasesservice.name",{"_index":625,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["logic",{"_index":1398,"title":{},"body":{"guards/TestGuard.html":{}}}],["login",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(user",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":435,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["logout",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(response",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":1635,"title":{},"body":{"index.html":{}}}],["loop",{"_index":1685,"title":{},"body":{"index.html":{}}}],["lấy",{"_index":884,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["m",{"_index":932,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["mail",{"_index":951,"title":{},"body":{"controllers/MailController.html":{}}}],["mail.controller",{"_index":1007,"title":{},"body":{"modules/MailModule.html":{}}}],["mail.service",{"_index":1006,"title":{},"body":{"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["mailcontroller",{"_index":949,"title":{"controllers/MailController.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"coverage.html":{}}}],["mailermodule",{"_index":1008,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1015,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":956,"title":{},"body":{"controllers/MailController.html":{}}}],["mailmodule",{"_index":33,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":1004,"title":{"injectables/MailService.html":{}},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["makes",{"_index":1642,"title":{},"body":{"index.html":{}}}],["male",{"_index":671,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["managing",{"_index":1655,"title":{},"body":{"index.html":{}}}],["map",{"_index":1158,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":1165,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalitems",{"_index":408,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["mau",{"_index":1638,"title":{},"body":{"index.html":{}}}],["maxage",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxsize",{"_index":718,"title":{},"body":{"controllers/FilesController.html":{}}}],["mb",{"_index":721,"title":{},"body":{"controllers/FilesController.html":{}}}],["message",{"_index":476,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":417,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":886,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["method",{"_index":542,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":1587,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1691,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1612,"title":{},"body":{"index.html":{}}}],["module",{"_index":15,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/CreatePermissionDto.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":17,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":958,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":1012,"title":{},"body":{"modules/MailModule.html":{}}}],["mongo",{"_index":563,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{}}}],["mongoose",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.schema.types.array",{"_index":1193,"title":{},"body":{"classes/Resume.html":{}}}],["mongoose.schema.types.objectid",{"_index":461,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["mongoose.types.objectid",{"_index":457,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["mongoose.types.objectid.isvalid(id",{"_index":421,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["mongoosehealthindicator",{"_index":758,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":369,"title":{},"body":{"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forroot('mongodb://localhost:27017",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":1633,"title":{},"body":{"index.html":{}}}],["ms",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["ms(configservice.get('jwt_access_expiration",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{}}}],["ms(this.configservice.get('jwt_refresh_expiration",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["multer",{"_index":1042,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multer.config",{"_index":738,"title":{},"body":{"modules/FilesModule.html":{}}}],["multerconfigservice",{"_index":737,"title":{"injectables/MulterConfigService.html":{}},"body":{"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["multermodule",{"_index":736,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermodule.registerasync",{"_index":739,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermoduleoptions",{"_index":1036,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":1039,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["myśliwiec",{"_index":1705,"title":{},"body":{"index.html":{}}}],["mật",{"_index":503,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["name",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":1681,"title":{},"body":{"index.html":{}}}],["nest",{"_index":1600,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1709,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":1155,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":957,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":879,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":775,"title":{},"body":{"classes/History.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":709,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"controllers/MailController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":759,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newrefreshtoken",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["newuser._id",{"_index":1513,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser.createdat",{"_index":1514,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser?._id",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["newuser?.createdat",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["next",{"_index":1163,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["next.handle().pipe",{"_index":1164,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["ng",{"_index":502,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["người",{"_index":655,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["nh",{"_index":482,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["nhật",{"_index":972,"title":{},"body":{"controllers/MailController.html":{}}}],["nice",{"_index":996,"title":{},"body":{"controllers/MailController.html":{}}}],["node.js",{"_index":1593,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":1578,"title":{},"body":{"dependencies.html":{}}}],["normal_user",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notfoundexception",{"_index":848,"title":{},"body":{"injectables/JobsService.html":{}}}],["notfoundexception('job",{"_index":857,"title":{},"body":{"injectables/JobsService.html":{}}}],["npm",{"_index":1606,"title":{},"body":{"index.html":{}}}],["null",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":379,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["này",{"_index":918,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["object",{"_index":443,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["objuser",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable",{"_index":1157,"title":{},"body":{"interfaces/Response.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["offer",{"_index":1689,"title":{},"body":{"index.html":{}}}],["official",{"_index":1639,"title":{},"body":{"index.html":{}}}],["offset",{"_index":401,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["omittype",{"_index":1422,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["omittype(createuserdto",{"_index":1420,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["onmoduleinit",{"_index":617,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["open",{"_index":1693,"title":{},"body":{"index.html":{}}}],["optional",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":1026,"title":{},"body":{"modules/MailModule.html":{}}}],["out",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["override",{"_index":993,"title":{},"body":{"controllers/MailController.html":{}}}],["overview",{"_index":1715,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1553,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":419,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["pagesize",{"_index":418,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["paginate",{"_index":1336,"title":{},"body":{"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":335,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":388,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["parent",{"_index":1059,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["parsefilepipebuilder",{"_index":703,"title":{},"body":{"controllers/FilesController.html":{}}}],["parser",{"_index":1568,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":1682,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":774,"title":{},"body":{"classes/History.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdatedBy.html":{}}}],["partialtype(createfiledto",{"_index":1407,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["partialtype(createjobdto",{"_index":1409,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["partialtype(createpermissiondto",{"_index":1411,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["partialtype(createresumedto",{"_index":781,"title":{},"body":{"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["partialtype(createroledto",{"_index":1415,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["partialtype(createsubscriberdto",{"_index":1417,"title":{},"body":{"classes/UpdateSubscriberDto.html":{}}}],["pass",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["passport",{"_index":929,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passport/jwt.strategy",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{}}}],["passport/local.strategy",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule",{"_index":205,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":926,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":920,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passthrough",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":505,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":334,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["patch(':id",{"_index":355,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["patch(':id')@responsemessage('update",{"_index":332,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/RolesController.html":{}}}],["patch('status/:id",{"_index":1222,"title":{},"body":{"controllers/ResumesController.html":{}}}],["patch('status/:id')@responsemessage('update",{"_index":1211,"title":{},"body":{"controllers/ResumesController.html":{}}}],["patch()@responsemessage('update",{"_index":1455,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch()@skipcheckpermission()@responsemessage('update",{"_index":1347,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["path",{"_index":1010,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["path.basename(file.originalname",{"_index":1084,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.extname(file.originalname",{"_index":1080,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["payload",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["pending",{"_index":1247,"title":{},"body":{"injectables/ResumesService.html":{}}}],["permission",{"_index":606,"title":{"classes/Permission.html":{}},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission._id",{"_index":1140,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["permission.apipath",{"_index":912,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.createdat",{"_index":1141,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["permission.dto",{"_index":1113,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts",{"_index":540,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permission.dto.ts:11",{"_index":545,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:14",{"_index":544,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:5",{"_index":546,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:8",{"_index":543,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.method",{"_index":911,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.name",{"_index":612,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/PermissionsModule.html":{},"classes/Role.html":{}}}],["permissioncount",{"_index":642,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["permissiondocument",{"_index":626,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["permissionmodel",{"_index":619,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["permissions",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["permissions.controller",{"_index":1123,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["permissions.find",{"_index":910,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permissions.service",{"_index":1112,"title":{},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{}}}],["permissions/permissions.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["permissionschema",{"_index":607,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissionscontroller",{"_index":1100,"title":{"controllers/PermissionsController.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"coverage.html":{}}}],["permissionsmodule",{"_index":34,"title":{"modules/PermissionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionsModule.html":{},"modules.html":{},"overview.html":{}}}],["permissionsservice",{"_index":1111,"title":{"injectables/PermissionsService.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"overview.html":{}}}],["permissionupdate",{"_index":1144,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["platform",{"_index":1637,"title":{},"body":{"index.html":{}}}],["please",{"_index":1664,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["populate",{"_index":1253,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["populate(population",{"_index":415,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["population",{"_index":397,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["possible",{"_index":1631,"title":{},"body":{"index.html":{}}}],["post",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["post('login",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout')@responsemessage('logout",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('skills",{"_index":1355,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('skills')@skipcheckpermission()@responsemessage('get",{"_index":1341,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('upload",{"_index":711,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('upload')@responsemessage('upload",{"_index":697,"title":{},"body":{"controllers/FilesController.html":{}}}],["post()@responsemessage('create",{"_index":313,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["post()@skipcheckpermission()@responsemessage('create",{"_index":1333,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["prefix",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["preview",{"_index":1028,"title":{},"body":{"modules/MailModule.html":{}}}],["private",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["process.cwd",{"_index":1043,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["processnewtoken",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["production",{"_index":1614,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1592,"title":{},"body":{"index.html":{}}}],["project",{"_index":1604,"title":{},"body":{"index.html":{}}}],["projection",{"_index":396,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["promise",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"guards/TestGuard.html":{}}}],["prop",{"_index":437,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["prop({required",{"_index":1181,"title":{},"body":{"classes/Resume.html":{},"classes/User.html":{}}}],["prop({type",{"_index":442,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["properties",{"_index":222,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["providers",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get(':id')@responsemessage('fetch",{"_index":324,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["public()@get(':id')@responsemessage('get",{"_index":819,"title":{},"body":{"controllers/JobsController.html":{}}}],["public()@get('refresh')@responsemessage('refresh",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@get()@responsemessage('fetch",{"_index":318,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["public()@get()@responsemessage('get",{"_index":817,"title":{},"body":{"controllers/JobsController.html":{}}}],["public()@post('login')@useguards(throttlerguard)@useguards(localauthguard)@apibody({type",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('register')@responsemessage('register",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["public/images/${folder",{"_index":1075,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["push",{"_index":1258,"title":{},"body":{"injectables/ResumesService.html":{}}}],["qs",{"_index":317,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["quantity",{"_index":488,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["query",{"_index":336,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["query('limit",{"_index":350,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["questions",{"_index":1663,"title":{},"body":{"index.html":{}}}],["quyền",{"_index":654,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{}}}],["ra",{"_index":885,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["read",{"_index":1700,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":344,"title":{},"body":{"controllers/CompaniesController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["ready",{"_index":1622,"title":{},"body":{"index.html":{}}}],["real",{"_index":1677,"title":{},"body":{"index.html":{}}}],["receiver",{"_index":1000,"title":{},"body":{"controllers/MailController.html":{}}}],["recursive",{"_index":1046,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ref",{"_index":787,"title":{},"body":{"classes/Job.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["reflect",{"_index":1583,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":868,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["refresh",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["register",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["register(info",{"_index":1490,"title":{},"body":{"injectables/UsersService.html":{}}}],["register(user",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["registeruserdto",{"_index":139,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["remove",{"_index":309,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":361,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":327,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":750,"title":{},"body":{"injectables/FilesService.html":{}}}],["render",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["replace",{"_index":1172,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["repository",{"_index":1603,"title":{},"body":{"index.html":{}}}],["req",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MulterConfigService.html":{}}}],["req.user",{"_index":948,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["req?.headers?.folder_type",{"_index":1071,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["request",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["request.cookies['refreshtoken",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["request.method",{"_index":905,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.route.path",{"_index":907,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.user",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requested",{"_index":1054,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["required",{"_index":1192,"title":{},"body":{"classes/Resume.html":{},"classes/User.html":{}}}],["requiring",{"_index":1645,"title":{},"body":{"index.html":{}}}],["res",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["reset",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":1657,"title":{},"body":{"index.html":{}}}],["response",{"_index":124,"title":{"interfaces/Response.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response.clearcookie('refreshtoken",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.cookie('refreshtoken",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["response_message",{"_index":1160,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage('create",{"_index":345,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('delete",{"_index":360,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('fetch",{"_index":348,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('get",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"controllers/JobsController.html":{},"controllers/SubscribersController.html":{}}}],["responsemessage('logout",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('refresh",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('register",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('test",{"_index":970,"title":{},"body":{"controllers/MailController.html":{}}}],["responsemessage('update",{"_index":356,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('upload",{"_index":712,"title":{},"body":{"controllers/FilesController.html":{}}}],["responsemessage('user",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["result",{"_index":409,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["results",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":1174,"title":{"classes/Resume.html":{}},"body":{"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resume.dto",{"_index":777,"title":{},"body":{"classes/History.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["resume.dto.ts",{"_index":549,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["resume.dto.ts:10",{"_index":561,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:13",{"_index":560,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["resume.dto.ts:16",{"_index":559,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:18",{"_index":769,"title":{},"body":{"classes/History.html":{}}}],["resume.dto.ts:19",{"_index":555,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:22",{"_index":558,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:23",{"_index":771,"title":{},"body":{"classes/History.html":{}}}],["resume.dto.ts:27",{"_index":584,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:28",{"_index":773,"title":{},"body":{"classes/History.html":{}}}],["resume.dto.ts:31",{"_index":582,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:35",{"_index":583,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:36",{"_index":1413,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts:7",{"_index":557,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:9",{"_index":1423,"title":{},"body":{"classes/UpdatedBy.html":{}}}],["resume.name",{"_index":1232,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resume?.createdat",{"_index":1249,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resume?.id",{"_index":1248,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumedocument",{"_index":1191,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["resumemodel",{"_index":1236,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumes",{"_index":1198,"title":{},"body":{"controllers/ResumesController.html":{},"miscellaneous/variables.html":{}}}],["resumes.controller",{"_index":1230,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumes.service",{"_index":1214,"title":{},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{}}}],["resumes/resumes.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["resumeschema",{"_index":1194,"title":{},"body":{"classes/Resume.html":{},"modules/ResumesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resumescontroller",{"_index":1196,"title":{"controllers/ResumesController.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"coverage.html":{}}}],["resumesmodule",{"_index":35,"title":{"modules/ResumesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResumesModule.html":{},"modules.html":{},"overview.html":{}}}],["resumesservice",{"_index":1213,"title":{"injectables/ResumesService.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"overview.html":{}}}],["resumeupdate",{"_index":1255,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumeupdatestatus",{"_index":1257,"title":{},"body":{"injectables/ResumesService.html":{}}}],["return",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":265,"title":{"classes/Role.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role.dto",{"_index":1283,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":566,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:13",{"_index":569,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:18",{"_index":573,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:6",{"_index":570,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:9",{"_index":567,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.name",{"_index":613,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/RolesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["rolecount",{"_index":647,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["roledocument",{"_index":627,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["rolemodel",{"_index":620,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["roles",{"_index":646,"title":{},"body":{"injectables/DatabasesService.html":{},"controllers/RolesController.html":{},"miscellaneous/variables.html":{}}}],["roles.controller",{"_index":1294,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.service",{"_index":1282,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/roles.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["roleschema",{"_index":609,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolescontroller",{"_index":1273,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["roleservice",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{}}}],["rolesmodule",{"_index":36,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RolesModule.html":{},"modules.html":{},"overview.html":{}}}],["rolesservice",{"_index":161,"title":{"injectables/RolesService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"coverage.html":{},"overview.html":{}}}],["run",{"_index":1608,"title":{},"body":{"index.html":{}}}],["runs",{"_index":1629,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":963,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"interfaces/Response.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1159,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["s",{"_index":658,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["salary",{"_index":487,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"controllers/MailController.html":{}}}],["salt",{"_index":1503,"title":{},"body":{"injectables/UsersService.html":{}}}],["same",{"_index":1062,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sample",{"_index":632,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["scalable",{"_index":1597,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":371,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":454,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(company",{"_index":458,"title":{},"body":{"classes/Company.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(job",{"_index":811,"title":{},"body":{"classes/Job.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(permission",{"_index":1099,"title":{},"body":{"classes/Permission.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(resume",{"_index":1195,"title":{},"body":{"classes/Resume.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1272,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(subscriber",{"_index":1328,"title":{},"body":{"classes/Subscriber.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1441,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/company.schema",{"_index":368,"title":{},"body":{"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{}}}],["schemas/job.schema",{"_index":837,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["schemas/permission.schema",{"_index":1124,"title":{},"body":{"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{}}}],["schemas/resume.schema",{"_index":1231,"title":{},"body":{"modules/ResumesModule.html":{},"injectables/ResumesService.html":{}}}],["schemas/role.schema",{"_index":1295,"title":{},"body":{"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["schemas/subscriber.schema",{"_index":1368,"title":{},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{}}}],["schemas/user.schema",{"_index":1477,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["secret",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":937,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":1019,"title":{},"body":{"modules/MailModule.html":{}}}],["select",{"_index":1254,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["select(projection",{"_index":855,"title":{},"body":{"injectables/JobsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["server",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["set",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["setmetadata(is_public_key",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(is_public_permission",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_message",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1605,"title":{},"body":{"index.html":{}}}],["side",{"_index":1598,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":1647,"title":{},"body":{"index.html":{}}}],["single",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skills",{"_index":481,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/Job.html":{},"controllers/MailController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["skip(offset",{"_index":412,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["skipcheckpermission",{"_index":1352,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["soft",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["softdeletemodel",{"_index":374,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["softdeleteplugin",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":395,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["sort(sort",{"_index":414,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":1696,"title":{},"body":{"index.html":{}}}],["src/.../company.schema.ts",{"_index":1724,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../customize.ts",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../job.schema.ts",{"_index":1725,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1589,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../permission.schema.ts",{"_index":1726,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../resume.schema.ts",{"_index":1727,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.schema.ts",{"_index":1728,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../sample.ts",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../subscriber.schema.ts",{"_index":1729,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1730,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":97,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:25",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:32",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:38",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:47",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:53",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":203,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:138",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:20",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:40",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:72",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:81",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:90",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":862,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local",{"_index":939,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts",{"_index":919,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts:22",{"_index":925,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/jwt.strategy.ts:9",{"_index":923,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/local.strategy.ts",{"_index":941,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/local.strategy.ts:12",{"_index":945,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passport/local.strategy.ts:7",{"_index":943,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/companies/companies.controller.ts",{"_index":304,"title":{},"body":{"controllers/CompaniesController.html":{},"coverage.html":{}}}],["src/companies/companies.controller.ts:14",{"_index":315,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:21",{"_index":321,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:28",{"_index":326,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:34",{"_index":333,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:40",{"_index":329,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.module.ts",{"_index":365,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["src/companies/companies.service.ts",{"_index":372,"title":{},"body":{"injectables/CompaniesService.html":{},"coverage.html":{}}}],["src/companies/companies.service.ts:12",{"_index":375,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:15",{"_index":378,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:27",{"_index":380,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:57",{"_index":381,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:65",{"_index":383,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:78",{"_index":382,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/dto/create",{"_index":511,"title":{},"body":{"classes/CreateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/dto/update",{"_index":1402,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/schemas/company.schema",{"_index":808,"title":{},"body":{"classes/Job.html":{},"classes/Resume.html":{},"classes/User.html":{}}}],["src/companies/schemas/company.schema.ts",{"_index":430,"title":{},"body":{"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/companies/schemas/company.schema.ts:12",{"_index":438,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:15",{"_index":447,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:18",{"_index":450,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:21",{"_index":444,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:27",{"_index":453,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:33",{"_index":446,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:39",{"_index":440,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:42",{"_index":452,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:45",{"_index":449,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:48",{"_index":445,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schemas/company.schema.ts:9",{"_index":451,"title":{},"body":{"classes/Company.html":{}}}],["src/core/transform.interceptor.ts",{"_index":1153,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/core/transform.interceptor.ts:14",{"_index":1400,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/core/transform.interceptor.ts:17",{"_index":1401,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/databases/databases.controller.ts",{"_index":595,"title":{},"body":{"controllers/DatabasesController.html":{},"coverage.html":{}}}],["src/databases/databases.module.ts",{"_index":602,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["src/databases/databases.service.ts",{"_index":614,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{}}}],["src/databases/databases.service.ts:13",{"_index":621,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/databases.service.ts:29",{"_index":624,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/databases.service.ts:36",{"_index":623,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/sample",{"_index":1502,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/databases/sample.ts",{"_index":1540,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorator/customize",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["src/decorator/customize.ts",{"_index":1541,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/files/dto/create",{"_index":519,"title":{},"body":{"classes/CreateFileDto.html":{},"coverage.html":{}}}],["src/files/dto/update",{"_index":1406,"title":{},"body":{"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["src/files/entities/file.entity.ts",{"_index":683,"title":{},"body":{"classes/File.html":{},"coverage.html":{}}}],["src/files/files.controller.ts",{"_index":685,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/files/files.controller.ts:27",{"_index":699,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:49",{"_index":689,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:54",{"_index":690,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:59",{"_index":691,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:64",{"_index":694,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:69",{"_index":692,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.module.ts",{"_index":734,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/files.service.ts",{"_index":741,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/files/files.service.ts:11",{"_index":743,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:15",{"_index":744,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:19",{"_index":746,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:23",{"_index":745,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:7",{"_index":742,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/multer.config.ts",{"_index":1031,"title":{},"body":{"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["src/files/multer.config.ts:13",{"_index":1037,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:39",{"_index":1035,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:9",{"_index":1038,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/health/health.controller.ts",{"_index":751,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:14",{"_index":755,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":764,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/jobs/dto/create",{"_index":459,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"coverage.html":{}}}],["src/jobs/dto/update",{"_index":1408,"title":{},"body":{"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts",{"_index":813,"title":{},"body":{"controllers/JobsController.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts:14",{"_index":816,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:21",{"_index":818,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:28",{"_index":820,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:34",{"_index":823,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:40",{"_index":821,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.module.ts",{"_index":835,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.service.ts",{"_index":839,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/jobs/jobs.service.ts:12",{"_index":841,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:15",{"_index":843,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:30",{"_index":844,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:61",{"_index":845,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:70",{"_index":847,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:83",{"_index":846,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/schemas/job.schema",{"_index":959,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{}}}],["src/jobs/schemas/job.schema.ts",{"_index":786,"title":{},"body":{"classes/Job.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/jobs/schemas/job.schema.ts:10",{"_index":801,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:13",{"_index":804,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:16",{"_index":789,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:23",{"_index":799,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:26",{"_index":800,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:29",{"_index":803,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:32",{"_index":802,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:35",{"_index":798,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:38",{"_index":794,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:41",{"_index":805,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:44",{"_index":795,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:47",{"_index":796,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:50",{"_index":791,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:56",{"_index":807,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:62",{"_index":793,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:68",{"_index":790,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:71",{"_index":806,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:74",{"_index":797,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:77",{"_index":792,"title":{},"body":{"classes/Job.html":{}}}],["src/mail/mail.controller.ts",{"_index":950,"title":{},"body":{"controllers/MailController.html":{},"coverage.html":{}}}],["src/mail/mail.controller.ts:24",{"_index":955,"title":{},"body":{"controllers/MailController.html":{}}}],["src/mail/mail.module.ts",{"_index":1005,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1030,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1544,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/permissions/dto/create",{"_index":539,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/dto/update",{"_index":1410,"title":{},"body":{"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts",{"_index":1101,"title":{},"body":{"controllers/PermissionsController.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts:14",{"_index":1103,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:20",{"_index":1105,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:26",{"_index":1107,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:32",{"_index":1110,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:38",{"_index":1108,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.module.ts",{"_index":1122,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["src/permissions/permissions.service.ts",{"_index":1125,"title":{},"body":{"injectables/PermissionsService.html":{},"coverage.html":{}}}],["src/permissions/permissions.service.ts:12",{"_index":1127,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:15",{"_index":1128,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:39",{"_index":1129,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:70",{"_index":1130,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:78",{"_index":1132,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:99",{"_index":1131,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/schemas/permission.schema",{"_index":608,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Role.html":{}}}],["src/permissions/schemas/permission.schema.ts",{"_index":1087,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/permissions/schemas/permission.schema.ts:12",{"_index":1088,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:15",{"_index":1095,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:18",{"_index":1094,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:21",{"_index":1090,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:27",{"_index":1098,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:33",{"_index":1092,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:39",{"_index":1089,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:42",{"_index":1097,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:45",{"_index":1093,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:48",{"_index":1091,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:9",{"_index":1096,"title":{},"body":{"classes/Permission.html":{}}}],["src/resumes/dto/create",{"_index":548,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"coverage.html":{}}}],["src/resumes/dto/update",{"_index":768,"title":{},"body":{"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts",{"_index":1197,"title":{},"body":{"controllers/ResumesController.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts:14",{"_index":1202,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:20",{"_index":1203,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:26",{"_index":1207,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:32",{"_index":1208,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:44",{"_index":1212,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:49",{"_index":1209,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.module.ts",{"_index":1229,"title":{},"body":{"modules/ResumesModule.html":{}}}],["src/resumes/resumes.service.ts",{"_index":1233,"title":{},"body":{"injectables/ResumesService.html":{},"coverage.html":{}}}],["src/resumes/resumes.service.ts:12",{"_index":1235,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:125",{"_index":1244,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:15",{"_index":1238,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:154",{"_index":1242,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:43",{"_index":1239,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:75",{"_index":1241,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:83",{"_index":1240,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:93",{"_index":1243,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/schemas/resume.schema.ts",{"_index":1175,"title":{},"body":{"classes/Resume.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/resumes/schemas/resume.schema.ts:11",{"_index":1182,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:14",{"_index":1190,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:17",{"_index":1189,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:20",{"_index":1186,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:23",{"_index":1176,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:26",{"_index":1185,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:29",{"_index":1183,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:39",{"_index":1178,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:45",{"_index":1188,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:51",{"_index":1180,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:57",{"_index":1177,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:60",{"_index":1187,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:63",{"_index":1184,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:66",{"_index":1179,"title":{},"body":{"classes/Resume.html":{}}}],["src/roles/dto/create",{"_index":565,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/update",{"_index":1414,"title":{},"body":{"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts",{"_index":1274,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:14",{"_index":1276,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:20",{"_index":1277,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:26",{"_index":1278,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:32",{"_index":1281,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:38",{"_index":1279,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/roles/roles.module.ts",{"_index":1293,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/roles/roles.service.ts",{"_index":1296,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:104",{"_index":1302,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:13",{"_index":1298,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:19",{"_index":1299,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:40",{"_index":1300,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:72",{"_index":1301,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:83",{"_index":1303,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/schemas/role.schema",{"_index":610,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/roles/schemas/role.schema.ts",{"_index":1260,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/roles/schemas/role.schema.ts:10",{"_index":1268,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:13",{"_index":1265,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:16",{"_index":1266,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:19",{"_index":1269,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:22",{"_index":1262,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:28",{"_index":1271,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:34",{"_index":1264,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:40",{"_index":1261,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:43",{"_index":1270,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:46",{"_index":1267,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:49",{"_index":1263,"title":{},"body":{"classes/Role.html":{}}}],["src/subscribers/dto/create",{"_index":575,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/dto/update",{"_index":1416,"title":{},"body":{"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/schemas/subscriber.schema",{"_index":961,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts",{"_index":1317,"title":{},"body":{"classes/Subscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:12",{"_index":1322,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:15",{"_index":1325,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:18",{"_index":1319,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:24",{"_index":1327,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:30",{"_index":1321,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:36",{"_index":1318,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:39",{"_index":1326,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:42",{"_index":1323,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:45",{"_index":1320,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:9",{"_index":1324,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/subscribers.controller.ts",{"_index":1330,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.controller.ts:15",{"_index":1334,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:22",{"_index":1342,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:30",{"_index":1337,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:37",{"_index":1339,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:44",{"_index":1348,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:51",{"_index":1344,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.module.ts",{"_index":1366,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/subscribers/subscribers.service.ts",{"_index":1369,"title":{},"body":{"injectables/SubscribersService.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.service.ts:113",{"_index":1377,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:12",{"_index":1372,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:15",{"_index":1373,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:37",{"_index":1374,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:68",{"_index":1375,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:77",{"_index":1379,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:95",{"_index":1378,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/users/dto/create",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":1419,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema",{"_index":605,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":1424,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:11",{"_index":1435,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:14",{"_index":1432,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:17",{"_index":1436,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:20",{"_index":1426,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:23",{"_index":1433,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:26",{"_index":1425,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:29",{"_index":1427,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:35",{"_index":1438,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:38",{"_index":1437,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:41",{"_index":1429,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:47",{"_index":1440,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:53",{"_index":1431,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:59",{"_index":1428,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:62",{"_index":1439,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:65",{"_index":1434,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:68",{"_index":1430,"title":{},"body":{"classes/User.html":{}}}],["src/users/test.guard.ts",{"_index":1396,"title":{},"body":{"guards/TestGuard.html":{},"coverage.html":{}}}],["src/users/test.guard.ts:6",{"_index":1397,"title":{},"body":{"guards/TestGuard.html":{}}}],["src/users/users.controller.ts",{"_index":1446,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:20",{"_index":1448,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:29",{"_index":1451,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:35",{"_index":1452,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:41",{"_index":1456,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:47",{"_index":1453,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.interface",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["src/users/users.interface.ts",{"_index":784,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/users/users.module",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":1475,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/users.service.ts",{"_index":1478,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:107",{"_index":1487,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:121",{"_index":1489,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:129",{"_index":1493,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:146",{"_index":1492,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:16",{"_index":1484,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:166",{"_index":1497,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:170",{"_index":1494,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:24",{"_index":1495,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:29",{"_index":1496,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":1485,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:57",{"_index":1491,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:75",{"_index":1486,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":1610,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1613,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":1615,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":491,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["started",{"_index":1591,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1602,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1529,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":552,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/History.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":1154,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["stay",{"_index":1684,"title":{},"body":{"index.html":{}}}],["steps",{"_index":1626,"title":{},"body":{"index.html":{}}}],["storage",{"_index":1067,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["straightforward",{"_index":1643,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":928,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strict",{"_index":1027,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":994,"title":{},"body":{"controllers/MailController.html":{}}}],["subs",{"_index":978,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.name",{"_index":1001,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.skills",{"_index":980,"title":{},"body":{"controllers/MailController.html":{}}}],["subscriber",{"_index":962,"title":{"classes/Subscriber.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["subscriber._id",{"_index":1385,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscriber.createdat",{"_index":1386,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscriber.dto",{"_index":1351,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{}}}],["subscriber.dto.ts",{"_index":576,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["subscriber.dto.ts:10",{"_index":580,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:14",{"_index":578,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:5",{"_index":579,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.name",{"_index":1014,"title":{},"body":{"modules/MailModule.html":{},"modules/SubscribersModule.html":{}}}],["subscriberdocument",{"_index":960,"title":{},"body":{"controllers/MailController.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["subscribermodel",{"_index":969,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["subscribers",{"_index":976,"title":{},"body":{"controllers/MailController.html":{},"controllers/SubscribersController.html":{}}}],["subscribers.controller",{"_index":1367,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscribers.service",{"_index":1350,"title":{},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{}}}],["subscribers/subscribers.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["subscriberschema",{"_index":1013,"title":{},"body":{"modules/MailModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["subscriberscontroller",{"_index":1329,"title":{"controllers/SubscribersController.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"coverage.html":{}}}],["subscribersmodule",{"_index":37,"title":{"modules/SubscribersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["subscribersservice",{"_index":1349,"title":{"injectables/SubscribersService.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["subscriberupdate",{"_index":1389,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subsskills",{"_index":979,"title":{},"body":{"controllers/MailController.html":{}}}],["success",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["successfully",{"_index":320,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"controllers/RolesController.html":{}}}],["super",{"_index":883,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":893,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super_admin",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":991,"title":{},"body":{"controllers/MailController.html":{},"index.html":{},"modules.html":{}}}],["supposed",{"_index":1170,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["svg",{"_index":1712,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1050,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["t",{"_index":887,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["table",{"_index":1552,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1551,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1627,"title":{},"body":{"index.html":{}}}],["targetdirectory",{"_index":1044,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["targetendpoint",{"_index":906,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetendpoint.startswith('/api/v1/auth",{"_index":913,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetmethod",{"_index":904,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["team",{"_index":992,"title":{},"body":{"controllers/MailController.html":{}}}],["temp",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["temp.permissions",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["temp?.permissions",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["template",{"_index":999,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["templates",{"_index":1024,"title":{},"body":{"modules/MailModule.html":{}}}],["terminusmodule",{"_index":766,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":1618,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":1621,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1620,"title":{},"body":{"index.html":{}}}],["testguard",{"_index":1394,"title":{"guards/TestGuard.html":{}},"body":{"guards/TestGuard.html":{},"coverage.html":{}}}],["tests",{"_index":1616,"title":{},"body":{"index.html":{}}}],["th",{"_index":652,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["thanks",{"_index":1695,"title":{},"body":{"index.html":{}}}],["this.authservice.login(req.user",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(response",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.processnewtoken(request",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(registeruserdto",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":946,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.companiesservice.create(createcompanydto",{"_index":347,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findall(+currentpage",{"_index":351,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findone(id",{"_index":354,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.remove(id",{"_index":362,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.update(id",{"_index":358,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companymodel",{"_index":410,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.create",{"_index":390,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.find(filter)).length",{"_index":406,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.findone",{"_index":424,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.softdelete",{"_index":428,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.updateone",{"_index":425,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.configservice.get('email_admin",{"_index":668,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["this.configservice.get('jwt_refresh_token_secret",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('role_admin",{"_index":1314,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.configservice.get('should_init",{"_index":638,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.createrefreshtoken(payload",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.db.pingcheck('database",{"_index":763,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.ensureexists(`public/images/${folder",{"_index":1072,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["this.filesservice.create(createfiledto",{"_index":727,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.findall",{"_index":728,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.findone(+id",{"_index":729,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.remove(+id",{"_index":731,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.update(+id",{"_index":730,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.gethashpassword(info.password",{"_index":1511,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.health.check",{"_index":762,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.initializedata",{"_index":640,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.jobmodel",{"_index":854,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.create",{"_index":850,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find",{"_index":982,"title":{},"body":{"controllers/MailController.html":{}}}],["this.jobmodel.find(filter)).length",{"_index":853,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findone",{"_index":856,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.softdelete",{"_index":860,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.updateone",{"_index":859,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobsservice.create(createjobdto",{"_index":828,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findall(+currentpage",{"_index":829,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findone(id",{"_index":830,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.remove(id",{"_index":832,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.update(id",{"_index":831,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log",{"_index":679,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.mailerservice.sendmail",{"_index":989,"title":{},"body":{"controllers/MailController.html":{}}}],["this.permissionmodel",{"_index":1143,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.countdocuments",{"_index":643,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.create",{"_index":1139,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter)).length",{"_index":1142,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find({}).select('_id",{"_index":649,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.findone",{"_index":1135,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.insertmany(init_permissions",{"_index":645,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.softdelete",{"_index":1146,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.updateone",{"_index":1145,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionsservice.create(createpermissiondto",{"_index":1115,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findall(+currentpage",{"_index":1116,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findone(id",{"_index":1117,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.remove(id",{"_index":1119,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.update(id",{"_index":1118,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.reflector.get(response_message",{"_index":1167,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":890,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.reflector.getallandoverride(is_public_permission",{"_index":896,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.resumemodel",{"_index":1251,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.create",{"_index":1246,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter)).length",{"_index":1250,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.findone",{"_index":1252,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.softdelete",{"_index":1259,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.updateone",{"_index":1256,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumesservice.create(createresumedto",{"_index":1216,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findall(+currentpage",{"_index":1217,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findcvbyuser(user",{"_index":1219,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findone(id",{"_index":1220,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.remove(id",{"_index":1226,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.update(id",{"_index":1221,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.updatestatus(id",{"_index":1225,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.rolemodel",{"_index":1309,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.countdocuments",{"_index":648,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.create",{"_index":1307,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.find(filter)).length",{"_index":1308,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id",{"_index":1312,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findone",{"_index":666,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["this.rolemodel.insertmany",{"_index":650,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.softdelete",{"_index":1316,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.updateone",{"_index":1310,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.roleservice.findone(user.role._id",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.roleservice.findone(userrole._id)).toobject",{"_index":938,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.rolesservice.create(createroledto",{"_index":1285,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findall(+currentpage",{"_index":1286,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(id",{"_index":1287,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(userrole._id",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.rolesservice.remove(id",{"_index":1289,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.update(id",{"_index":1288,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.subscribermodel",{"_index":1388,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.create",{"_index":1384,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.find",{"_index":977,"title":{},"body":{"controllers/MailController.html":{}}}],["this.subscribermodel.find(filter)).length",{"_index":1387,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.findone",{"_index":1381,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.softdelete",{"_index":1392,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.updateone",{"_index":1390,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribersservice.create(createsubscriberdto",{"_index":1354,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findall(+currentpage",{"_index":1359,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findone(id",{"_index":1360,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.getskills(user",{"_index":1357,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.remove(id",{"_index":1363,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.update(updatesubscriberdto",{"_index":1362,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.usermodel",{"_index":1516,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.countdocuments",{"_index":664,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.create",{"_index":1512,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find(filter)).length",{"_index":1515,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id",{"_index":1522,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":1508,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.insertmany",{"_index":667,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.softdelete",{"_index":1525,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.updateone",{"_index":1519,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.findoneusername(username",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.finduserbytoken(refreshtoken",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.gethashpassword(this.configservice.get('init_password",{"_index":669,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.userservice.isvalidpassword(pass",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.register(user",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updaterefreshtoken(_id",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updaterefreshtoken(_id.tostring",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updaterefreshtoken(user._id",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":1466,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.create(email",{"_index":1465,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(+currentpage",{"_index":1468,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":1469,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(id",{"_index":1471,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(updateuserdto",{"_index":1470,"title":{},"body":{"controllers/UsersController.html":{}}}],["throttle",{"_index":1459,"title":{},"body":{"controllers/UsersController.html":{}}}],["throttlerguard",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["throttlermodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["thống",{"_index":661,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["time",{"_index":1678,"title":{},"body":{"index.html":{}}}],["timestamps",{"_index":456,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["token",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["total",{"_index":420,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalitems",{"_index":405,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalpages",{"_index":407,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["touch",{"_index":1702,"title":{},"body":{"index.html":{}}}],["transform",{"_index":465,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["transformer",{"_index":466,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":1161,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["transport",{"_index":1016,"title":{},"body":{"modules/MailModule.html":{}}}],["true",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["true})@isarray",{"_index":572,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["trungem",{"_index":674,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["trungem@gmail.com",{"_index":675,"title":{},"body":{"injectables/DatabasesService.html":{},"miscellaneous/variables.html":{}}}],["truy",{"_index":915,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["try",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["trying",{"_index":1064,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["trống",{"_index":480,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["trống'})@isarray({message",{"_index":534,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["trống'})@isboolean",{"_index":568,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["trống'})@isboolean({message",{"_index":526,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["trống'})@ismongoid",{"_index":592,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["trống'})@ismongoid({each",{"_index":571,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["trống'})@ismongoid({message",{"_index":581,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["trống'})@transform",{"_index":523,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["ttl",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{}}}],["tuần",{"_index":974,"title":{},"body":{"controllers/MailController.html":{}}}],["twitter",{"_index":1708,"title":{},"body":{"index.html":{}}}],["type",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/History.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"guards/TestGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1722,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":776,"title":{},"body":{"classes/History.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"dependencies.html":{}}}],["types.objectid",{"_index":778,"title":{},"body":{"classes/History.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{}}}],["typescript",{"_index":1601,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":878,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('token",{"_index":900,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["unauthorizedexception('username/password",{"_index":947,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":788,"title":{},"body":{"classes/Job.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["undefined})@responsemessage('fetch",{"_index":1450,"title":{},"body":{"controllers/UsersController.html":{}}}],["unit",{"_index":1617,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1721,"title":{},"body":{"properties.html":{}}}],["update",{"_index":310,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["update(@body",{"_index":1361,"title":{},"body":{"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["update(@param('id",{"_index":357,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["update(id",{"_index":330,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["update(updatesubscriberdto",{"_index":1345,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["update(updateuserdto",{"_index":1454,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatecompanydto",{"_index":331,"title":{"classes/UpdateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":436,"title":{},"body":{"classes/Company.html":{},"classes/History.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["updatedby",{"_index":426,"title":{"classes/UpdatedBy.html":{}},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/History.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatefiledto",{"_index":693,"title":{"classes/UpdateFileDto.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["updatejobdto",{"_index":822,"title":{"classes/UpdateJobDto.html":{}},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["updatepermissiondto",{"_index":1109,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updaterefreshtoken",{"_index":1482,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateresumedto",{"_index":779,"title":{"classes/UpdateResumeDto.html":{}},"body":{"classes/History.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"coverage.html":{}}}],["updateroledto",{"_index":1280,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updates",{"_index":749,"title":{},"body":{"injectables/FilesService.html":{},"index.html":{}}}],["updatestatus",{"_index":1200,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["updatestatus(@param('id",{"_index":1223,"title":{},"body":{"controllers/ResumesController.html":{}}}],["updatestatus(id",{"_index":1210,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["updatesubscriberdto",{"_index":1346,"title":{"classes/UpdateSubscriberDto.html":{}},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":1418,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto._id",{"_index":1520,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploadedfile",{"_index":702,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile",{"_index":687,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(file",{"_index":695,"title":{},"body":{"controllers/FilesController.html":{}}}],["upsert",{"_index":1391,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["uri",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":553,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{}}}],["useclass",{"_index":740,"title":{},"body":{"modules/FilesModule.html":{}}}],["usefactory",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["useguards",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["useguards(localauthguard",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(testguard",{"_index":1358,"title":{},"body":{"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["useguards(throttlerguard",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["useinterceptors",{"_index":701,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":713,"title":{},"body":{"controllers/FilesController.html":{}}}],["user",{"_index":114,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user')@responsemessage('fetch",{"_index":1206,"title":{},"body":{"controllers/ResumesController.html":{}}}],["user._id",{"_index":392,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":495,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":496,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:13",{"_index":497,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:18",{"_index":590,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:22",{"_index":588,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:25",{"_index":591,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":585,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:31",{"_index":586,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:34",{"_index":589,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:38",{"_index":593,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:44",{"_index":587,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:51",{"_index":1444,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.dto.ts:59",{"_index":1443,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.dto.ts:64",{"_index":1151,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:68",{"_index":1149,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:7",{"_index":1421,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:71",{"_index":1152,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:74",{"_index":1147,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:77",{"_index":1148,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:80",{"_index":1150,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.email",{"_index":393,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.name",{"_index":611,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/JobsService.html":{},"modules/UsersModule.html":{}}}],["user.password",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permissions",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.role",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.toobject",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user1@gmail.com",{"_index":676,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["user2@gmail.com",{"_index":678,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["user?.permissions",{"_index":908,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["user_role",{"_index":631,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercount",{"_index":663,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["userdocument",{"_index":628,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":554,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["userlogindto",{"_index":156,"title":{"classes/UserLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["userlogindto})@responsemessage('user",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["usermodel",{"_index":622,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["userrole",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["userrole?._id",{"_index":677,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["users",{"_index":662,"title":{},"body":{"injectables/DatabasesService.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":1476,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.interface",{"_index":1458,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":1457,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":604,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":1445,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{}}}],["usersmodule",{"_index":38,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":229,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userupdate",{"_index":1518,"title":{},"body":{"injectables/UsersService.html":{}}}],["using",{"_index":1679,"title":{},"body":{"index.html":{}}}],["valid",{"_index":423,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["validate",{"_index":921,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":924,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":944,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatenested",{"_index":473,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{}}}],["validatenested()@isnotempty()@type(undefined",{"_index":772,"title":{},"body":{"classes/History.html":{}}}],["validateuser",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":474,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/History.html":{},"injectables/JobsService.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdatedBy.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/DatabasesService.html":{},"classes/History.html":{},"injectables/MulterConfigService.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdatedBy.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1538,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1731,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1719,"title":{},"body":{"properties.html":{}}}],["video",{"_index":1671,"title":{},"body":{"index.html":{}}}],["vietnam",{"_index":672,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["visit",{"_index":1661,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":1674,"title":{},"body":{"index.html":{}}}],["viên",{"_index":657,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["watch",{"_index":1611,"title":{},"body":{"index.html":{}}}],["website",{"_index":1706,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":995,"title":{},"body":{"controllers/MailController.html":{}}}],["without",{"_index":1082,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["working",{"_index":1660,"title":{},"body":{"index.html":{}}}],["x",{"_index":1687,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":1699,"title":{},"body":{"index.html":{}}}],["you're",{"_index":1063,"title":{},"body":{"injectables/MulterConfigService.html":{},"index.html":{}}}],["zoom",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller()\nexport class AppController {\n    constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompaniesModule\n                        \n                        \n                            DatabasesModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PermissionsModule\n                        \n                        \n                            ResumesModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { CompaniesModule } from './companies/companies.module';\nimport { JobsModule } from './jobs/jobs.module';\nimport { FilesModule } from './files/files.module';\nimport { ResumesModule } from './resumes/resumes.module';\nimport { PermissionsModule } from './permissions/permissions.module';\nimport { RolesModule } from './roles/roles.module';\nimport { DatabasesModule } from './databases/databases.module';\nimport { SubscribersModule } from './subscribers/subscribers.module';\nimport { MailModule } from './mail/mail.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { HealthController } from './health/health.controller';\nimport { HealthModule } from './health/health.module';\n\n@Module({\n    imports: [\n        // MongooseModule.forRoot('mongodb://localhost:27017'),\n        MongooseModule.forRootAsync({\n            imports: [ConfigModule],\n            useFactory: async (configService: ConfigService) => ({\n                uri: configService.get('MONGO_URL'),\n                connectionFactory: (connection) => {\n                    connection.plugin(softDeletePlugin);\n                    return connection;\n                },\n            }),\n            inject: [ConfigService],\n        }),\n        ThrottlerModule.forRoot([\n            {\n                ttl: 60000,\n                limit: 2,\n            },\n        ]),\n        ConfigModule.forRoot({\n            isGlobal: true,\n        }),\n        ScheduleModule.forRoot(),\n        UsersModule,\n        AuthModule,\n        CompaniesModule,\n        JobsModule,\n        FilesModule,\n        ResumesModule,\n        PermissionsModule,\n        RolesModule,\n        DatabasesModule,\n        SubscribersModule,\n        MailModule,\n        HealthModule,\n    ],\n    controllers: [AppController],\n    providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                getProfile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                handleLogin\n                            \n                            \n                                    \n                                    \n                                handleLogout\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRefreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('account')@ResponseMessage('Get current user')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        handleLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogin(req, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('login')@UseGuards(ThrottlerGuard)@UseGuards(LocalAuthGuard)@ApiBody({type: UserLoginDto})@ResponseMessage('User login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        handleLogout\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogout(response: Response, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')@ResponseMessage('Logout user')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handleRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRefreshToken(request: Request, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('refresh')@ResponseMessage('Refresh token')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handleRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRegister(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('register')@ResponseMessage('Register a new user')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Render, Req, Res, UseGuards } from '@nestjs/common';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { LocalAuthGuard } from './local-auth.guard';\nimport { AuthService } from './auth.service';\nimport { RegisterUserDto, UserLoginDto } from 'src/users/dto/create-user.dto';\nimport { Request, Response } from 'express';\nimport { IUser } from 'src/users/users.interface';\nimport { RolesService } from 'src/roles/roles.service';\nimport { ThrottlerGuard } from '@nestjs/throttler';\nimport { ApiBody } from '@nestjs/swagger';\n\n@Controller('auth')\nexport class AuthController {\n    constructor(\n        private authService: AuthService,\n        private roleService: RolesService,\n    ) {}\n\n    @Public()\n    @Post('login')\n    @UseGuards(ThrottlerGuard)\n    @UseGuards(LocalAuthGuard)\n    @ApiBody({ type: UserLoginDto })\n    @ResponseMessage('User login')\n    handleLogin(@Req() req, @Res({ passthrough: true }) response: Response) {\n        return this.authService.login(req.user, response);\n    }\n\n    @Public()\n    @Post('register')\n    @ResponseMessage('Register a new user')\n    handleRegister(@Body() registerUserDto: RegisterUserDto) {\n        return this.authService.register(registerUserDto);\n    }\n\n    @Get('account')\n    @ResponseMessage('Get current user')\n    async getProfile(@User() user: IUser) {\n        const temp = (await this.roleService.findOne(user.role._id)) as any;\n        user.permissions = temp.permissions;\n        return { user };\n    }\n\n    @Public()\n    @Get('refresh')\n    @ResponseMessage('Refresh token')\n    handleRefreshToken(@Req() request: Request, @Res({ passthrough: true }) response: Response) {\n        return this.authService.processNewToken(request, response);\n    }\n\n    @Post('logout')\n    @ResponseMessage('Logout user')\n    handleLogout(@Res({ passthrough: true }) response: Response, @User() user: IUser) {\n        return this.authService.logout(response, user);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './passport/local.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtStrategy } from './passport/jwt.strategy';\nimport ms from 'ms';\nimport { AuthController } from './auth.controller';\nimport { RolesModule } from 'src/roles/roles.module';\n\n@Module({\n    imports: [\n        UsersModule,\n        PassportModule,\n        RolesModule,\n        JwtModule.registerAsync({\n            imports: [ConfigModule],\n            useFactory: async (configService: ConfigService) => ({\n                secret: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n                signOptions: {\n                    expiresIn: ms(configService.get('JWT_ACCESS_EXPIRATION')) / 1000,\n                },\n            }),\n            inject: [ConfigService],\n        }),\n    ],\n    controllers: [AuthController],\n    providers: [AuthService, LocalStrategy, JwtStrategy],\n    exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRefreshToken\n                            \n                            \n                                processNewToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, jwtService: JwtService, configService: ConfigService, rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: IUser, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(response: Response, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(user: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processNewToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:90\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request, Response } from 'express';\nimport ms from 'ms';\nimport { RolesService } from 'src/roles/roles.service';\nimport { RegisterUserDto } from 'src/users/dto/create-user.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { UsersService } from 'src/users/users.service';\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        private userService: UsersService,\n        private jwtService: JwtService,\n        private configService: ConfigService,\n        private rolesService: RolesService,\n    ) {}\n\n    async validateUser(username: string, pass: string): Promise {\n        const user = await this.userService.findOneUsername(username);\n        if (user) {\n            const isValid = this.userService.isValidPassword(pass, user.password);\n            if (isValid === true) {\n                const userRole = user.role as unknown as { _id: string; name: string };\n                const temp = await this.rolesService.findOne(userRole._id);\n\n                const objUser = {\n                    ...user.toObject(),\n                    permissions: temp?.permissions ?? [],\n                };\n\n                return objUser;\n            }\n        }\n\n        return null;\n    }\n\n    async login(user: IUser, response: Response) {\n        const { _id, name, email, role, permissions } = user;\n        const payload = {\n            sub: 'token login',\n            iss: 'from server',\n            _id,\n            name,\n            email,\n            role,\n        };\n\n        // Set refresh token for cookie client\n        const refreshToken = this.createRefreshToken(payload);\n        await this.userService.updateRefreshToken(_id, refreshToken);\n\n        response.cookie('refreshToken', refreshToken, {\n            httpOnly: true,\n            maxAge: ms(this.configService.get('JWT_REFRESH_EXPIRATION')),\n        });\n\n        return {\n            accessToken: this.jwtService.sign(payload),\n            user: {\n                _id,\n                name,\n                email,\n                role,\n                permissions,\n            },\n        };\n    }\n\n    async register(user: RegisterUserDto) {\n        const newUser = await this.userService.register(user);\n\n        return {\n            _id: newUser?._id,\n            createdAt: newUser?.createdAt,\n        };\n    }\n\n    createRefreshToken = (payload: any) => {\n        const refreshToken = this.jwtService.sign(payload, {\n            secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n            expiresIn: ms(this.configService.get('JWT_REFRESH_EXPIRATION')) / 1000,\n        });\n\n        return refreshToken;\n    };\n\n    processNewToken = async (request: Request, response: Response) => {\n        try {\n            const refreshToken = request.cookies['refreshToken'];\n            this.jwtService.verify(refreshToken, {\n                secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n            });\n\n            let user = await this.userService.findUserByToken(refreshToken);\n            if (!user) {\n                throw new BadRequestException('Refresh token is invalid');\n            }\n\n            const { _id, name, email, role } = user;\n            const payload = {\n                sub: 'refresh token login',\n                iss: 'from server',\n                _id,\n                name,\n                email,\n                role,\n            };\n\n            // Set refresh token for cookie client\n            const newRefreshToken = this.createRefreshToken(payload);\n            await this.userService.updateRefreshToken(_id.toString(), newRefreshToken);\n            const userRole = user.role as unknown as { _id: string; name: string };\n            const temp = await this.rolesService.findOne(userRole._id);\n\n            response.cookie('refreshToken', newRefreshToken, {\n                httpOnly: true,\n                maxAge: ms(this.configService.get('JWT_REFRESH_EXPIRATION')),\n            });\n\n            return {\n                accessToken: this.jwtService.sign(payload),\n                user: {\n                    _id,\n                    name,\n                    email,\n                    role,\n                    permissions: temp?.permissions ?? [],\n                },\n            };\n        } catch (error) {\n            throw new BadRequestException('Refresh token is invalid');\n        }\n    };\n\n    async logout(response: Response, user: IUser) {\n        await this.userService.updateRefreshToken(user._id, '');\n        response.clearCookie('refreshToken');\n\n        return 'Logout success';\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompaniesController.html":{"url":"controllers/CompaniesController.html","title":"controller - CompaniesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompaniesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                companies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new company')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()@ResponseMessage('Fetch list companies successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')@ResponseMessage('Fetch company by id')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a company')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a company')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\n\n@Controller('companies')\nexport class CompaniesController {\n    constructor(private readonly companiesService: CompaniesService) {}\n\n    @Post()\n    @ResponseMessage('Create a new company')\n    create(@Body() createCompanyDto: CreateCompanyDto, @User() user: IUser) {\n        return this.companiesService.create(createCompanyDto, user);\n    }\n\n    @Public()\n    @Get()\n    @ResponseMessage('Fetch list companies successfully')\n    findAll(@Query('page') currentPage: string, @Query('limit') limit: string, @Query() qs: string) {\n        return this.companiesService.findAll(+currentPage, +limit, qs);\n    }\n\n    @Public()\n    @Get(':id')\n    @ResponseMessage('Fetch company by id')\n    findOne(@Param('id') id: string) {\n        return this.companiesService.findOne(id);\n    }\n\n    @Patch(':id')\n    @ResponseMessage('Update a company')\n    update(@Param('id') id: string, @Body() updateCompanyDto: UpdateCompanyDto, @User() user: IUser) {\n        return this.companiesService.update(id, updateCompanyDto, user);\n    }\n\n    @Delete(':id')\n    @ResponseMessage('Delete a company')\n    remove(@Param('id') id: string, @User() user: IUser) {\n        return this.companiesService.remove(id, user);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompaniesModule.html":{"url":"modules/CompaniesModule.html","title":"module - CompaniesModule","body":"\n                   \n\n\n\n\n    Modules\n    CompaniesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\n\nCompaniesService\n\nCompaniesService\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/companies/companies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompaniesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CompaniesController } from './companies.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Company, CompanySchema } from './schemas/company.schema';\n\n@Module({\n    imports: [MongooseModule.forFeature([{ name: Company.name, schema: CompanySchema }])],\n    controllers: [CompaniesController],\n    providers: [CompaniesService],\n})\nexport class CompaniesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompaniesService.html":{"url":"injectables/CompaniesService.html","title":"injectable - CompaniesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompaniesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/companies/companies.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(info: CreateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, User: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                User\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Company, CompanyDocument } from './schemas/company.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class CompaniesService {\n    constructor(@InjectModel(Company.name) private companyModel: SoftDeleteModel) {}\n\n    async create(info: CreateCompanyDto, user: IUser) {\n        const company = await this.companyModel.create({\n            ...info,\n            createdBy: {\n                _id: user._id,\n                email: user.email,\n            },\n        });\n\n        return company;\n    }\n\n    async findAll(currentPage: number, limit: number, qs: string) {\n        const { filter, sort, projection, population } = aqp(qs);\n        delete filter.page;\n        delete filter.limit;\n\n        let offset = (+currentPage - 1) * +limit;\n        let defaultLimit = +limit ? +limit : 10;\n\n        const totalItems = (await this.companyModel.find(filter)).length;\n        const totalPages = Math.ceil(totalItems / defaultLimit);\n\n        const result = await this.companyModel\n            .find(filter)\n            .skip(offset)\n            .limit(defaultLimit)\n            .sort(sort as any)\n            .populate(population)\n            .exec();\n\n        return {\n            result,\n            meta: {\n                current: currentPage,\n                pageSize: limit,\n                pages: totalPages,\n                total: totalItems,\n            },\n        };\n    }\n\n    async findOne(id: string) {\n        if (!mongoose.Types.ObjectId.isValid(id)) {\n            throw new BadRequestException('id not is valid');\n        }\n\n        return await this.companyModel.findOne({ _id: id });\n    }\n\n    async update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser) {\n        return await this.companyModel.updateOne(\n            { _id: id },\n            {\n                ...updateCompanyDto,\n                updatedBy: {\n                    _id: user._id,\n                    email: user.email,\n                },\n            },\n        );\n    }\n\n    async remove(id: string, User: IUser) {\n        await this.companyModel.updateOne(\n            { _id: id },\n            {\n                deletedBy: {\n                    _id: User._id,\n                    email: User.email,\n                },\n            },\n        );\n        return await this.companyModel.softDelete({ _id: id });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/schemas/company.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schemas/company.schema.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type CompanyDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Company {\n    @Prop()\n    name: string;\n\n    @Prop()\n    address: string;\n\n    @Prop()\n    description: string;\n    \n    @Prop()\n    logo: string;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: Boolean;\n\n    @Prop()\n    deletedAt: Date;\n}\n\nexport const CompanySchema = SchemaFactory.createForClass(Company);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-1.html":{"url":"classes/Company-1.html","title":"class - Company-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport {\n    IsArray,\n    IsBoolean,\n    IsDate,\n    IsNotEmpty,\n    IsNotEmptyObject,\n    IsObject,\n    IsString,\n    ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n}\n\nexport class CreateJobDto {\n    @IsNotEmpty({ message: 'Name không được bỏ trống' })\n    name: string;\n\n    @IsNotEmpty({ message: 'Skills không được bỏ trống' })\n    @IsArray({ message: 'Skills có định dạng là array' })\n    @IsString({ each: true, message: 'Skills có định dạng là string' })\n    skills: string[];\n\n    @IsNotEmpty({ message: 'Salary không được bỏ trống' })\n    salary: string;\n\n    @IsNotEmpty({ message: 'Quantity không được bỏ trống' })\n    quantity: number;\n\n    @IsNotEmpty({ message: 'Level không được bỏ trống' })\n    level: string;\n\n    @IsNotEmpty({ message: 'Location không được bỏ trống' })\n    location: string;\n\n    @IsNotEmpty({ message: 'Logo không được bỏ trống' })\n    logo: string;\n\n    @IsNotEmpty({ message: 'StartDate không được bỏ trống' })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'StartDate có định dạng là Date' })\n    startDate: Date;\n\n    @IsNotEmpty({ message: 'EndDate không được bỏ trống' })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'EndDate có định dạng là Date' })\n    endDate: Date;\n\n    @IsNotEmpty({ message: 'IsActive không được bỏ trống' })\n    @IsBoolean({ message: 'IsActive có định dạng là Boolean' })\n    isActive: boolean;\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-2.html":{"url":"classes/Company-2.html","title":"class - Company-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsObject, IsString, ValidateNested } from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n}\n\nexport class CreateUserDto {\n    @IsNotEmpty({ message: 'Name không được bỏ trống' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng' })\n    @IsNotEmpty({ message: 'Email không được bỏ trống' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Mật khẩu không được bỏ trống' })\n    password: string;\n\n    @IsNotEmpty({ message: 'Address không được bỏ trống' })\n    address: string;\n\n    @IsNotEmpty({ message: 'Age không được bỏ trống' })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender không được bỏ trống' })\n    gender: number;\n\n    @IsNotEmpty({ message: 'Role không được bỏ trống' })\n    @IsMongoId()\n    role: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\nexport class UserLoginDto {\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({ example: 'admin@gmail.com', description: 'username' })\n    readonly username: string;\n\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({\n        example: '999999',\n        description: 'password',\n    })\n    readonly password: string;\n}\n\nexport class RegisterUserDto {\n    @IsNotEmpty({ message: 'Name không được bỏ trống' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng' })\n    @IsNotEmpty({ message: 'Email không được bỏ trống' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Mật khẩu không được bỏ trống' })\n    password: string;\n\n    @IsNotEmpty({ message: 'Address không được bỏ trống' })\n    address: string;\n\n    @IsNotEmpty({ message: 'Age không được bỏ trống' })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender không được bỏ trống' })\n    gender: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompanyDto.html":{"url":"classes/CreateCompanyDto.html","title":"class - CreateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Description không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Logo không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class CreateCompanyDto {\n    @IsNotEmpty({ message: 'Name không được bỏ trống' })\n    name: string;\n\n    @IsNotEmpty({ message: 'Address không được bỏ trống' })\n    address: string;\n\n    @IsNotEmpty({ message: 'Description không được bỏ trống' })\n    description: string;\n\n    @IsNotEmpty({ message: 'Logo không được bỏ trống' })\n    logo: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFileDto.html":{"url":"classes/CreateFileDto.html","title":"class - CreateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/create-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobDto.html":{"url":"classes/CreateJobDto.html","title":"class - CreateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                    \n                                endDate\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                            \n                                    \n                                    \n                                    \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'EndDate không được bỏ trống'})@Transform( => )@IsDate({message: 'EndDate có định dạng là Date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'IsActive không được bỏ trống'})@IsBoolean({message: 'IsActive có định dạng là Boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Level không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Location không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Logo không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Quantity không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Salary không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Skills không được bỏ trống'})@IsArray({message: 'Skills có định dạng là array'})@IsString({each: true, message: 'Skills có định dạng là string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'StartDate không được bỏ trống'})@Transform( => )@IsDate({message: 'StartDate có định dạng là Date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Transform, Type } from 'class-transformer';\nimport {\n    IsArray,\n    IsBoolean,\n    IsDate,\n    IsNotEmpty,\n    IsNotEmptyObject,\n    IsObject,\n    IsString,\n    ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n}\n\nexport class CreateJobDto {\n    @IsNotEmpty({ message: 'Name không được bỏ trống' })\n    name: string;\n\n    @IsNotEmpty({ message: 'Skills không được bỏ trống' })\n    @IsArray({ message: 'Skills có định dạng là array' })\n    @IsString({ each: true, message: 'Skills có định dạng là string' })\n    skills: string[];\n\n    @IsNotEmpty({ message: 'Salary không được bỏ trống' })\n    salary: string;\n\n    @IsNotEmpty({ message: 'Quantity không được bỏ trống' })\n    quantity: number;\n\n    @IsNotEmpty({ message: 'Level không được bỏ trống' })\n    level: string;\n\n    @IsNotEmpty({ message: 'Location không được bỏ trống' })\n    location: string;\n\n    @IsNotEmpty({ message: 'Logo không được bỏ trống' })\n    logo: string;\n\n    @IsNotEmpty({ message: 'StartDate không được bỏ trống' })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'StartDate có định dạng là Date' })\n    startDate: Date;\n\n    @IsNotEmpty({ message: 'EndDate không được bỏ trống' })\n    @Transform(({ value }) => new Date(value))\n    @IsDate({ message: 'EndDate có định dạng là Date' })\n    endDate: Date;\n\n    @IsNotEmpty({ message: 'IsActive không được bỏ trống' })\n    @IsBoolean({ message: 'IsActive có định dạng là Boolean' })\n    isActive: boolean;\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'apiPath không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'method không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'module không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreatePermissionDto {\n    @IsNotEmpty({ message: 'Name không được bỏ trống' })\n    name: string;\n\n    @IsNotEmpty({ message: 'apiPath không được bỏ trống' })\n    apiPath: string;\n\n    @IsNotEmpty({ message: 'module không được bỏ trống' })\n    module: string;\n\n    @IsNotEmpty({ message: 'method không được bỏ trống' })\n    method: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResumeDto.html":{"url":"classes/CreateResumeDto.html","title":"class - CreateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'companyId không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email không đúng định dạng'})@IsNotEmpty({message: 'Email không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'jobId không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'status không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'url không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'userId không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateResumeDto {\n    @IsEmail({}, { message: 'Email không đúng định dạng' })\n    @IsNotEmpty({ message: 'Email không được bỏ trống' })\n    email: string;\n\n    @IsNotEmpty({ message: 'userId không được bỏ trống' })\n    userId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'url không được bỏ trống' })\n    url: string;\n\n    @IsNotEmpty({ message: 'status không được bỏ trống' })\n    status: string;\n\n    @IsNotEmpty({ message: 'companyId không được bỏ trống' })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'jobId không được bỏ trống' })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCvDto {\n    @IsNotEmpty({ message: 'url không được bỏ trống' })\n    url: string;\n\n    @IsNotEmpty({ message: 'companyId không được bỏ trống' })\n    @IsMongoId({ message: 'companyId is a mongo id' })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'jobId không được bỏ trống' })\n    @IsMongoId({ message: 'jobId is a mongo id' })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'description không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'isActive không được bỏ trống'})@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'permissions không được bỏ trống'})@IsMongoId({each: true})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsBoolean, IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateRoleDto {\n    @IsNotEmpty({ message: 'Name không được bỏ trống' })\n    name: string;\n\n    @IsNotEmpty({ message: 'description không được bỏ trống' })\n    description: string;\n\n    @IsNotEmpty({ message: 'isActive không được bỏ trống' })\n    @IsBoolean()\n    isActive: boolean;\n\n    @IsNotEmpty({ message: 'permissions không được bỏ trống' })\n    @IsMongoId({ each: true })\n    @IsArray()\n    permissions: mongoose.Schema.Types.ObjectId[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriberDto.html":{"url":"classes/CreateSubscriberDto.html","title":"class - CreateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/create-subscriber.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                skills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Skills không được bỏ trống'})@IsArray({message: 'Skills có định dạng là array'})@IsString({each: true, message: 'Skills có định dạng là string'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateSubscriberDto {\n    @IsNotEmpty({ message: 'Name không được bỏ trống' })\n    name: string;\n\n    @IsNotEmpty({ message: 'Skills không được bỏ trống' })\n    @IsArray({ message: 'Skills có định dạng là array' })\n    @IsString({ each: true, message: 'Skills có định dạng là string' })\n    skills: string[];\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCvDto.html":{"url":"classes/CreateUserCvDto.html","title":"class - CreateUserCvDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCvDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                companyId\n                            \n                            \n                                    \n                                    \n                                jobId\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'companyId không được bỏ trống'})@IsMongoId({message: 'companyId is a mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'jobId không được bỏ trống'})@IsMongoId({message: 'jobId is a mongo id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'url không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsMongoId, IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateResumeDto {\n    @IsEmail({}, { message: 'Email không đúng định dạng' })\n    @IsNotEmpty({ message: 'Email không được bỏ trống' })\n    email: string;\n\n    @IsNotEmpty({ message: 'userId không được bỏ trống' })\n    userId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'url không được bỏ trống' })\n    url: string;\n\n    @IsNotEmpty({ message: 'status không được bỏ trống' })\n    status: string;\n\n    @IsNotEmpty({ message: 'companyId không được bỏ trống' })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'jobId không được bỏ trống' })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCvDto {\n    @IsNotEmpty({ message: 'url không được bỏ trống' })\n    url: string;\n\n    @IsNotEmpty({ message: 'companyId không được bỏ trống' })\n    @IsMongoId({ message: 'companyId is a mongo id' })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty({ message: 'jobId không được bỏ trống' })\n    @IsMongoId({ message: 'jobId is a mongo id' })\n    jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Age không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email không đúng định dạng'})@IsNotEmpty({message: 'Email không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Gender không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Mật khẩu không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Role không được bỏ trống'})@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsObject, IsString, ValidateNested } from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n}\n\nexport class CreateUserDto {\n    @IsNotEmpty({ message: 'Name không được bỏ trống' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng' })\n    @IsNotEmpty({ message: 'Email không được bỏ trống' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Mật khẩu không được bỏ trống' })\n    password: string;\n\n    @IsNotEmpty({ message: 'Address không được bỏ trống' })\n    address: string;\n\n    @IsNotEmpty({ message: 'Age không được bỏ trống' })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender không được bỏ trống' })\n    gender: number;\n\n    @IsNotEmpty({ message: 'Role không được bỏ trống' })\n    @IsMongoId()\n    role: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\nexport class UserLoginDto {\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({ example: 'admin@gmail.com', description: 'username' })\n    readonly username: string;\n\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({\n        example: '999999',\n        description: 'password',\n    })\n    readonly password: string;\n}\n\nexport class RegisterUserDto {\n    @IsNotEmpty({ message: 'Name không được bỏ trống' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng' })\n    @IsNotEmpty({ message: 'Email không được bỏ trống' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Mật khẩu không được bỏ trống' })\n    password: string;\n\n    @IsNotEmpty({ message: 'Address không được bỏ trống' })\n    address: string;\n\n    @IsNotEmpty({ message: 'Age không được bỏ trống' })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender không được bỏ trống' })\n    gender: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabasesController.html":{"url":"controllers/DatabasesController.html","title":"controller - DatabasesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabasesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                databases\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\n\n@Controller('databases')\nexport class DatabasesController {\n    constructor(private readonly databasesService: DatabasesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabasesModule.html":{"url":"modules/DatabasesModule.html","title":"module - DatabasesModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\n\nDatabasesService\n\nDatabasesService\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/databases/databases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabasesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabasesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\nimport { DatabasesController } from './databases.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport { Permission, PermissionSchema } from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\nimport { UsersService } from 'src/users/users.service';\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            { name: User.name, schema: UserSchema },\n            { name: Permission.name, schema: PermissionSchema },\n            { name: Role.name, schema: RoleSchema },\n        ]),\n    ],\n    controllers: [DatabasesController],\n    providers: [DatabasesService, UsersService],\n})\nexport class DatabasesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabasesService.html":{"url":"injectables/DatabasesService.html","title":"injectable - DatabasesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabasesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                initializeData\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, permissionModel: SoftDeleteModel, roleModel: SoftDeleteModel, configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/databases/databases.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        initializeData\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/databases/databases.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/databases/databases.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DatabasesService.name)\n                    \n                \n                    \n                        \n                                Defined in src/databases/databases.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Permission, PermissionDocument } from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { UsersService } from 'src/users/users.service';\nimport { ADMIN_ROLE, INIT_PERMISSIONS, USER_ROLE } from './sample';\n\n@Injectable()\nexport class DatabasesService implements OnModuleInit {\n    private readonly logger = new Logger(DatabasesService.name);\n\n    constructor(\n        @InjectModel(User.name)\n        private userModel: SoftDeleteModel,\n\n        @InjectModel(Permission.name)\n        private permissionModel: SoftDeleteModel,\n\n        @InjectModel(Role.name)\n        private roleModel: SoftDeleteModel,\n\n        private configService: ConfigService,\n        private userService: UsersService,\n    ) {}\n\n    async onModuleInit() {\n        const isInit = this.configService.get('SHOULD_INIT');\n        if (Boolean(isInit)) {\n            await this.initializeData();\n        }\n    }\n\n    private async initializeData() {\n        // Initialize permissions\n        const permissionCount = await this.permissionModel.countDocuments({});\n        if (permissionCount === 0) {\n            await this.permissionModel.insertMany(INIT_PERMISSIONS);\n        }\n\n        // Initialize roles\n        const roleCount = await this.roleModel.countDocuments({});\n        if (roleCount === 0) {\n            const permissions = await this.permissionModel.find({}).select('_id');\n            await this.roleModel.insertMany([\n                { name: ADMIN_ROLE, description: 'Admin thì full quyền :))', isActive: true, permissions: permissions },\n                {\n                    name: USER_ROLE,\n                    description: 'Người dùng / ứng viên sử dụng hệ thống',\n                    isActive: true,\n                    permissions: [],\n                },\n            ]);\n        }\n\n        // Initialize users\n        const userCount = await this.userModel.countDocuments({});\n        if (userCount === 0) {\n            const adminRole = await this.roleModel.findOne({ name: ADMIN_ROLE });\n            const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n\n            await this.userModel.insertMany([\n                {\n                    name: 'Admin',\n                    email: this.configService.get('EMAIL_ADMIN'),\n                    password: this.userService.getHashPassword(this.configService.get('INIT_PASSWORD')),\n                    age: 30,\n                    gender: 'MALE',\n                    address: 'vietnam',\n                    role: adminRole?._id,\n                },\n                {\n                    name: 'trungem',\n                    email: 'trungem@gmail.com',\n                    password: this.userService.getHashPassword(this.configService.get('INIT_PASSWORD')),\n                    age: 30,\n                    gender: 'MALE',\n                    address: 'vietnam',\n                    role: adminRole?._id,\n                },\n                {\n                    name: 'user 1',\n                    email: 'user1@gmail.com',\n                    password: this.userService.getHashPassword(this.configService.get('INIT_PASSWORD')),\n                    age: 30,\n                    gender: 'MALE',\n                    address: 'vietnam',\n                    role: userRole?._id,\n                },\n                {\n                    name: 'user 2',\n                    email: 'user2@gmail.com',\n                    password: this.userService.getHashPassword(this.configService.get('INIT_PASSWORD')),\n                    age: 30,\n                    gender: 'MALE',\n                    address: 'vietnam',\n                    role: userRole?._id,\n                },\n            ]);\n        }\n\n        if (userCount > 0 && roleCount > 0 && permissionCount > 0) {\n            this.logger.log('>>> ALREADY INIT SAMPLE DATA...');\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/entities/file.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class File {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createFileDto: CreateFileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFileDto\n                                            \n                                                            CreateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateFileDto: UpdateFileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@ResponseMessage('Upload file')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { fileName: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Controller,\n    Get,\n    Post,\n    Body,\n    Patch,\n    Param,\n    Delete,\n    UseInterceptors,\n    UploadedFile,\n    ParseFilePipeBuilder,\n    HttpStatus,\n} from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ResponseMessage } from 'src/decorator/customize';\n\n@Controller('files')\nexport class FilesController {\n    constructor(private readonly filesService: FilesService) {}\n\n    @Post('upload')\n    @ResponseMessage('Upload file')\n    @UseInterceptors(FileInterceptor('file'))\n    uploadFile(\n        @UploadedFile(\n            new ParseFilePipeBuilder()\n                .addFileTypeValidator({\n                    fileType:\n                        /^(jpg|jpeg|image\\/jpeg|png|image\\/png|gif|txt|pdf|application\\/pdf|doc|docx|text\\/plain)$/,\n                })\n                .addMaxSizeValidator({\n                    maxSize: 1024 * 1024, // KB = 1024 MB = 1GB\n                })\n                .build({\n                    errorHttpStatusCode: HttpStatus.UNPROCESSABLE_ENTITY,\n                }),\n        )\n        file: Express.Multer.File,\n    ) {\n        return {\n            fileName: file.filename,\n        };\n    }\n\n    @Post()\n    create(@Body() createFileDto: CreateFileDto) {\n        return this.filesService.create(createFileDto);\n    }\n\n    @Get()\n    findAll() {\n        return this.filesService.findAll();\n    }\n\n    @Get(':id')\n    findOne(@Param('id') id: string) {\n        return this.filesService.findOne(+id);\n    }\n\n    @Patch(':id')\n    update(@Param('id') id: string, @Body() updateFileDto: UpdateFileDto) {\n        return this.filesService.update(+id, updateFileDto);\n    }\n\n    @Delete(':id')\n    remove(@Param('id') id: string) {\n        return this.filesService.remove(+id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nFilesService\n\nFilesService\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { FilesController } from './files.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { MulterConfigService } from './multer.config';\n\n@Module({\n    controllers: [FilesController],\n    providers: [FilesService],\n    imports: [\n        MulterModule.registerAsync({\n            useClass: MulterConfigService,\n        }),\n    ],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFileDto: CreateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFileDto\n                                            \n                                                            CreateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateFileDto: UpdateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\n\n@Injectable()\nexport class FilesService {\n    create(createFileDto: CreateFileDto) {\n        return 'This action adds a new file';\n    }\n\n    findAll() {\n        return `This action returns all files`;\n    }\n\n    findOne(id: number) {\n        return `This action returns a #${id} file`;\n    }\n\n    update(id: number, updateFileDto: UpdateFileDto) {\n        return `This action updates a #${id} file`;\n    }\n\n    remove(id: number) {\n        return `This action removes a #${id} file`;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { HealthCheck, HealthCheckService, MongooseHealthIndicator } from '@nestjs/terminus';\nimport { Public } from 'src/decorator/customize';\n\n@Controller('health')\nexport class HealthController {\n    constructor(\n        private health: HealthCheckService,\n        private db: MongooseHealthIndicator,\n    ) {}\n    @Get()\n    @Public()\n    @HealthCheck()\n    check() {\n        return this.health.check([() => this.db.pingCheck('database')]);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthController } from './health.controller';\nimport { TerminusModule } from '@nestjs/terminus';\n\n@Module({\n    imports: [TerminusModule],\n    controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/History.html":{"url":"classes/History.html","title":"class - History","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  History\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Transform( => )@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdatedBy\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@IsNotEmpty()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\nimport { IsArray, IsDate, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { Transform, Type } from 'class-transformer';\n\nclass UpdatedBy {\n    @IsNotEmpty()\n    _id: Types.ObjectId;\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n}\n\nclass History {\n    @IsNotEmpty()\n    status: string;\n\n    @IsNotEmpty()\n    @Transform(({ value }) => new Date(value))\n    @IsDate()\n    updatedAt: Date;\n\n    @ValidateNested()\n    @IsNotEmpty()\n    @Type(() => UpdatedBy)\n    updatedBy: UpdatedBy;\n}\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {\n    @IsNotEmpty()\n    @IsArray()\n    @ValidateNested()\n    @Type(() => History)\n    history: History[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            age\n                                        \n                                \n                                \n                                        \n                                            company\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        company\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        company:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n    _id: string;\n    name: string;\n    email: string;\n    password: string;\n    address: string;\n    age: number;\n    gender: number;\n    company: {\n        _id: string;\n        name: string;\n    };\n    role: {\n        _id: string;\n        name: string;\n    };\n    permissions?: {\n        _id: string;\n        name: string;\n        apiPath: string;\n        module: string;\n    }[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Job.html":{"url":"classes/Job.html","title":"class - Job","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/schemas/job.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schema';\n\nexport type JobDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Job {\n    @Prop()\n    name: string;\n\n    @Prop()\n    skills: string[];\n\n    @Prop({ type: Object, ref: Company.name })\n    company: {\n        _id: mongoose.Schema.Types.ObjectId;\n        name: string;\n        logo: string;\n    };\n\n    @Prop()\n    location: string;\n\n    @Prop()\n    logo: string;\n\n    @Prop()\n    salary: number;\n\n    @Prop()\n    quantity: number;\n\n    @Prop()\n    level: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    startDate: Date;\n\n    @Prop()\n    endDate: Date;\n\n    @Prop()\n    isActive: boolean;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: Boolean;\n\n    @Prop()\n    deletedAt: Date;\n}\n\nexport const JobSchema = SchemaFactory.createForClass(Job);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get()@ResponseMessage('Get list of jobs')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')@ResponseMessage('Get job by id')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\n\n@Controller('jobs')\nexport class JobsController {\n    constructor(private readonly jobsService: JobsService) {}\n\n    @Post()\n    @ResponseMessage('Create a new job')\n    create(@Body() createJobDto: CreateJobDto, @User() user: IUser) {\n        return this.jobsService.create(createJobDto, user);\n    }\n\n    @Public()\n    @Get()\n    @ResponseMessage('Get list of jobs')\n    findAll(@Query('page') currentPage: string, @Query('limit') limit: string, @Query() qs: string) {\n        return this.jobsService.findAll(+currentPage, +limit, qs);\n    }\n\n    @Public()\n    @Get(':id')\n    @ResponseMessage('Get job by id')\n    findOne(@Param('id') id: string) {\n        return this.jobsService.findOne(id);\n    }\n\n    @Patch(':id')\n    @ResponseMessage('Update job')\n    update(@Param('id') id: string, @Body() updateJobDto: UpdateJobDto, @User() user: IUser) {\n        return this.jobsService.update(id, updateJobDto, user);\n    }\n\n    @Delete(':id')\n    @ResponseMessage('Delete job')\n    remove(@Param('id') id: string, @User() user: IUser) {\n        return this.jobsService.remove(id, user);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService\n\nJobsService\n\n\n\nJobsModule\n\nJobsModule\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { JobsController } from './jobs.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Job, JobSchema } from './schemas/job.schema';\n\n@Module({\n    imports: [MongooseModule.forFeature([{ name: Job.name, schema: JobSchema }])],\n    controllers: [JobsController],\n    providers: [JobsService],\n})\nexport class JobsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Job, JobDocument } from './schemas/job.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class JobsService {\n    constructor(@InjectModel(Job.name) private jobModel: SoftDeleteModel) {}\n\n    async create(createJobDto: CreateJobDto, user: IUser) {\n        const job = await this.jobModel.create({\n            ...createJobDto,\n            createdBy: {\n                _id: user._id,\n                name: user.name,\n            },\n        });\n\n        return {\n            _id: job._id,\n            createdAt: job.createdAt,\n        };\n    }\n\n    async findAll(currentPage: number, limit: number, qs: string) {\n        const { filter, sort, population, projection } = aqp(qs);\n        delete filter.page;\n        delete filter.limit;\n\n        let offset = (currentPage - 1) * limit;\n        let defaultLimit = limit ? limit : 10;\n\n        const totalItems = (await this.jobModel.find(filter)).length;\n        const totalPages = Math.ceil(totalItems / defaultLimit);\n\n        const result = await this.jobModel\n            .find(filter)\n            .skip(offset)\n            .limit(defaultLimit)\n            .sort(sort as any)\n            .select(projection as any)\n            .populate(population)\n            .exec();\n\n        return {\n            result,\n            meta: {\n                current: currentPage,\n                pageSize: limit,\n                pages: totalPages,\n                total: totalItems,\n            },\n        };\n    }\n\n    async findOne(id: string) {\n        const job = await this.jobModel.findOne({ _id: id });\n\n        if (!job) {\n            throw new NotFoundException('Job not found');\n        }\n        return job;\n    }\n\n    async update(id: string, updateJobDto: UpdateJobDto, user: IUser) {\n        return await this.jobModel.updateOne(\n            { _id: id },\n            {\n                ...updateJobDto,\n                updatedBy: {\n                    _id: user._id,\n                    name: user.name,\n                },\n            },\n        );\n    }\n\n    async remove(id: string, user: IUser) {\n        if (!mongoose.Types.ObjectId.isValid(id)) {\n            throw new BadRequestException('id not validator');\n        }\n\n        await this.jobModel.updateOne(\n            { _id: id },\n            {\n                deletedBy: {\n                    _id: user._id,\n                    email: user.email,\n                },\n            },\n        );\n\n        return this.jobModel.softDelete({ _id: id });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, ForbiddenException, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { IS_PUBLIC_KEY, IS_PUBLIC_PERMISSION } from 'src/decorator/customize';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n    constructor(private reflector: Reflector) {\n        super();\n    }\n\n    canActivate(context: ExecutionContext) {\n        // Lấy ra metadata từ handler\n        const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n            context.getHandler(),\n            context.getClass(),\n        ]);\n        if (isPublic) {\n            return true;\n        }\n        return super.canActivate(context);\n    }\n\n    handleRequest(err, user, info, context: ExecutionContext) {\n        const request: Request = context.switchToHttp().getRequest();\n\n        // Lấy ra metadata từ handler\n        const isPublicPermission = this.reflector.getAllAndOverride(IS_PUBLIC_PERMISSION, [\n            context.getHandler(),\n            context.getClass(),\n        ]);\n\n        // You can throw an exception based on either \"info\" or \"err\" arguments\n        if (err || !user) {\n            throw err || new UnauthorizedException('Token không hợp lệ or không có token ở Bearer ở Header');\n        }\n\n        // Check permission\n        const targetMethod = request.method;\n        const targetEndpoint = request.route.path as string;\n\n        const permissions = user?.permissions ?? [];\n        let isExist = permissions.find(\n            (permission) => targetMethod === permission.method && targetEndpoint === permission.apiPath,\n        );\n\n        if (targetEndpoint.startsWith('/api/v1/auth')) isExist = true;\n\n        if (!isExist && !isPublicPermission) {\n            throw new ForbiddenException('Bạn không có quyền truy cập endpoint này');\n        }\n        return user;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, roleService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/jwt.strategy.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { RolesService } from 'src/roles/roles.service';\nimport { IUser } from 'src/users/users.interface';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor(\n        private configService: ConfigService,\n        private roleService: RolesService,\n    ) {\n        // Giải mã token\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n        });\n    }\n\n    async validate(payload: IUser) {\n        const { _id, name, email, role } = payload;\n        const userRole = role as unknown as { _id: string; name: string };\n        const temp = (await this.roleService.findOne(userRole._id)).toObject();\n\n        return {\n            _id,\n            name,\n            email,\n            role,\n            permissions: temp?.permissions ?? [],\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/local.strategy.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { AuthService } from '../auth.service';\nimport { Strategy } from 'passport-local';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    constructor(private authService: AuthService) {\n        super();\n    }\n\n    async validate(username: string, password: string): Promise {\n        const user = await this.authService.validateUser(username, password);\n        if (!user) {\n            throw new UnauthorizedException('Username/password không hợp lệ');\n        }\n        return user; // req.user\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailController.html":{"url":"controllers/MailController.html","title":"controller - MailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                handleTestEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        handleTestEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleTestEmail()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Test email')@Cron('* 0 0 * * 0')\n                \n            \n\n                    \n                        \n                            Defined in src/mail/mail.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { Public, ResponseMessage } from 'src/decorator/customize';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Job, JobDocument } from 'src/jobs/schemas/job.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SubscriberDocument } from 'src/subscribers/schemas/subscriber.schema';\nimport { Subscriber } from 'rxjs';\nimport { Cron, CronExpression } from '@nestjs/schedule';\n\n@Controller('mail')\nexport class MailController {\n    constructor(\n        private readonly mailerService: MailerService,\n\n        @InjectModel(Job.name) private jobModel: SoftDeleteModel,\n        @InjectModel(Subscriber.name) private subscriberModel: SoftDeleteModel,\n    ) {}\n\n    @Get()\n    @Public()\n    @ResponseMessage('Test email')\n    @Cron('* 0 0 * * 0') // Chủ nhật hàng tuần 00:00:00\n    async handleTestEmail() {\n        const subscribers = await this.subscriberModel.find({});\n        for (const subs of subscribers) {\n            const subsSkills = subs.skills;\n            const jobWithMatchingSkills = await this.jobModel.find({ skills: { $in: subsSkills } });\n\n            if (jobWithMatchingSkills?.length) {\n                const jobs = jobWithMatchingSkills.map((item) => {\n                    return {\n                        name: item.name,\n                        company: item.company.name,\n                        salary: `${item.salary}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + ' đ',\n                        skills: item.skills,\n                    };\n                });\n                await this.mailerService.sendMail({\n                    to: 'em21072006015@vnkgu.edu.vn',\n                    from: '\"Support Team\" ', // override default from\n                    subject: 'Welcome to Nice App! Confirm your Email',\n                    template: 'mail',\n                    context: {\n                        receiver: subs.name,\n                        jobs: jobs,\n                    },\n                });\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService\n\nMailService\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailController } from './mail.controller';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { ConfigService } from '@nestjs/config';\nimport { join } from 'path';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber } from 'rxjs';\nimport { SubscriberSchema } from 'src/subscribers/schemas/subscriber.schema';\nimport { Job, JobSchema } from 'src/jobs/schemas/job.schema';\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            { name: Subscriber.name, schema: SubscriberSchema },\n            { name: Job.name, schema: JobSchema },\n        ]),\n        MailerModule.forRootAsync({\n            useFactory: async (configService: ConfigService) => ({\n                transport: {\n                    host: configService.get('EMAIL_HOST'),\n                    secure: false,\n                    auth: {\n                        user: configService.get('EMAIL_SEND'),\n                        pass: configService.get('EMAIL_SEND_PASSWORD'),\n                    },\n                },\n                template: {\n                    dir: join(__dirname, 'templates'),\n                    adapter: new HandlebarsAdapter(),\n                    options: {\n                        strict: true,\n                    },\n                },\n                preview: configService.get('EMAIL_PREVIEW') === 'true' ? true : false,\n            }),\n            inject: [ConfigService],\n        }),\n    ],\n    controllers: [MailController],\n    providers: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MailService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/multer.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ensureExists\n                            \n                            \n                                getRootPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMulterOptions\n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     MulterModuleOptions\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ensureExists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/files/multer.config.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/files/multer.config.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { MulterModuleOptions, MulterOptionsFactory } from '@nestjs/platform-express';\nimport fs from 'fs';\nimport { diskStorage } from 'multer';\nimport path, { join } from 'path';\n\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n    getRootPath = () => {\n        return process.cwd();\n    };\n\n    ensureExists = (targetDirectory: string) => {\n        fs.mkdir(targetDirectory, { recursive: true }, (error) => {\n            if (!error) {\n                console.log('Directory successfully created, or it already exists.');\n                return;\n            }\n\n            switch (error.code) {\n                case 'EEXIST':\n                    // Error:\n                    // Requested location already exists, but it's not a directory.\n                    break;\n                case 'ENOTDIR':\n                    // Error:\n                    // The parent hierarchy contains a file with the same name as the dir\n                    // you're trying to create.\n                    break;\n                default:\n                    // Some other error like permission denied\n                    console.error(error);\n\n                    break;\n            }\n        });\n    }\n\n    createMulterOptions(): MulterModuleOptions {\n        return {\n            storage: diskStorage({\n                destination: (req, file, callback) => {\n                    const folder = req?.headers?.folder_type ?? 'default';\n                    this.ensureExists(`public/images/${folder}`);\n                    callback(null, join(this.getRootPath(), `public/images/${folder}`));\n                },\n                filename: (_req, file, callback) => {\n                    // get image extension\n                    let extName = path.extname(file.originalname);\n\n                    // get image's name (without extension)\n                    let baseName = path.basename(file.originalname, extName);\n\n                    let finalName = `${baseName}-${Date.now()}${extName}`;\n                    callback(null, finalName);\n                },\n            }),\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/schemas/permission.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type PermissionDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Permission {\n    @Prop()\n    name: string;\n\n    @Prop()\n    apiPath: string;\n\n    @Prop()\n    module: string;\n\n    @Prop()\n    method: string;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: Boolean;\n\n    @Prop()\n    deletedAt: Date;\n}\n\nexport const PermissionSchema = SchemaFactory.createForClass(Permission);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionsController.html":{"url":"controllers/PermissionsController.html","title":"controller - PermissionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permissions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch list permission successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch permission by id')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\n\n@Controller('permissions')\nexport class PermissionsController {\n    constructor(private readonly permissionsService: PermissionsService) {}\n\n    @Post()\n    @ResponseMessage('Create a new permission')\n    create(@Body() createPermissionDto: CreatePermissionDto, @User() user: IUser) {\n        return this.permissionsService.create(createPermissionDto, user);\n    }\n\n    @Get()\n    @ResponseMessage('Fetch list permission successfully')\n    findAll(@Query('page') currentPage: string, @Query('limit') limit: string, @Query() qs: string) {\n        return this.permissionsService.findAll(+currentPage, +limit, qs);\n    }\n\n    @Get(':id')\n    @ResponseMessage('Fetch permission by id')\n    findOne(@Param('id') id: string) {\n        return this.permissionsService.findOne(id);\n    }\n\n    @Patch(':id')\n    @ResponseMessage('Update a permission')\n    update(@Param('id') id: string, @Body() updatePermissionDto: UpdatePermissionDto, @User() user: IUser) {\n        return this.permissionsService.update(id, updatePermissionDto, user);\n    }\n\n    @Delete(':id')\n    @ResponseMessage('Delete a permission')\n    remove(@Param('id') id: string, @User() user: IUser) {\n        return this.permissionsService.remove(id, user);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionsModule.html":{"url":"modules/PermissionsModule.html","title":"module - PermissionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nPermissionsService\n\nPermissionsService\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/permissions/permissions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { PermissionsController } from './permissions.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Permission, PermissionSchema } from './schemas/permission.schema';\n\n@Module({\n    imports: [MongooseModule.forFeature([{ name: Permission.name, schema: PermissionSchema }])],\n    controllers: [PermissionsController],\n    providers: [PermissionsService],\n})\nexport class PermissionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionsService.html":{"url":"injectables/PermissionsService.html","title":"injectable - PermissionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/permissions/permissions.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { Permission, PermissionDocument } from './schemas/permission.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class PermissionsService {\n    constructor(@InjectModel(Permission.name) private permissionModel: SoftDeleteModel) {}\n\n    async create(createPermissionDto: CreatePermissionDto, user: IUser) {\n        const isExistApiPathAndMethod = await this.permissionModel.findOne({\n            apiPath: createPermissionDto.apiPath,\n            method: createPermissionDto.method,\n        });\n\n        if (isExistApiPathAndMethod) {\n            throw new BadRequestException('apiPath and method already exists');\n        }\n\n        const permission = await this.permissionModel.create({\n            ...createPermissionDto,\n            createdBy: {\n                _id: user._id,\n                email: user.email,\n            },\n        });\n\n        return {\n            _id: permission._id,\n            createdAt: permission.createdAt,\n        };\n    }\n\n    async findAll(currentPage: number, limit: number, qs: string) {\n        const { filter, sort, population } = aqp(qs);\n\n        delete filter.page;\n        delete filter.limit;\n\n        let offset = (+currentPage - 1) * +limit;\n        let defaultLimit = +limit ? +limit : 10;\n\n        const totalItems = (await this.permissionModel.find(filter)).length;\n        const totalPages = Math.ceil(totalItems / defaultLimit);\n\n        const result = await this.permissionModel\n            .find(filter)\n            .skip(offset)\n            .limit(defaultLimit)\n            .sort(sort as any)\n            .populate(population)\n            .exec();\n\n        return {\n            result,\n            meta: {\n                current: currentPage,\n                pageSize: limit,\n                pages: totalPages,\n                total: totalItems,\n            },\n        };\n    }\n\n    async findOne(id: string) {\n        if (!mongoose.Types.ObjectId.isValid(id)) {\n            throw new BadRequestException('id is not valid');\n        }\n\n        return await this.permissionModel.findOne({ _id: id });\n    }\n\n    async update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser) {\n        if (!mongoose.Types.ObjectId.isValid(id)) {\n            throw new BadRequestException('id is not valid');\n        }\n\n        const permissionUpdate = await this.permissionModel.updateOne(\n            { _id: id },\n            {\n                ...updatePermissionDto,\n                updatedBy: {\n                    _id: user._id,\n                    email: user.email,\n                },\n            },\n        );\n\n        return {\n            result: permissionUpdate,\n        };\n    }\n\n    async remove(id: string, user: IUser) {\n        if (!mongoose.Types.ObjectId.isValid(id)) {\n            throw new BadRequestException('id is not valid');\n        }\n\n        await this.permissionModel.updateOne(\n            { _id: id },\n            {\n                deletedBy: {\n                    _id: user._id,\n                    email: user.email,\n                },\n            },\n        );\n\n        return await this.permissionModel.softDelete({ _id: id });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Age không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail({}, {message: 'Email không đúng định dạng'})@IsNotEmpty({message: 'Email không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Gender không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Mật khẩu không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsObject, IsString, ValidateNested } from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n}\n\nexport class CreateUserDto {\n    @IsNotEmpty({ message: 'Name không được bỏ trống' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng' })\n    @IsNotEmpty({ message: 'Email không được bỏ trống' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Mật khẩu không được bỏ trống' })\n    password: string;\n\n    @IsNotEmpty({ message: 'Address không được bỏ trống' })\n    address: string;\n\n    @IsNotEmpty({ message: 'Age không được bỏ trống' })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender không được bỏ trống' })\n    gender: number;\n\n    @IsNotEmpty({ message: 'Role không được bỏ trống' })\n    @IsMongoId()\n    role: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\nexport class UserLoginDto {\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({ example: 'admin@gmail.com', description: 'username' })\n    readonly username: string;\n\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({\n        example: '999999',\n        description: 'password',\n    })\n    readonly password: string;\n}\n\nexport class RegisterUserDto {\n    @IsNotEmpty({ message: 'Name không được bỏ trống' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng' })\n    @IsNotEmpty({ message: 'Email không được bỏ trống' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Mật khẩu không được bỏ trống' })\n    password: string;\n\n    @IsNotEmpty({ message: 'Address không được bỏ trống' })\n    address: string;\n\n    @IsNotEmpty({ message: 'Age không được bỏ trống' })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender không được bỏ trống' })\n    gender: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\n\nexport interface Response {\n    statusCode: number;\n    message: string;\n    data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor> {\n    constructor(private reflector: Reflector) {}\n\n    intercept(context: ExecutionContext, next: CallHandler): Observable> {\n        return next.handle().pipe(\n            map((data) => ({\n                statusCode: context.switchToHttp().getResponse().statusCode,\n                message: this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) || '',\n                data: {\n                    result: data?.result ?? data,\n                    meta: data?.meta, // if this is supposed to be the actual return then replace {} with data.result\n                },\n            })),\n        );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/schemas/resume.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                history\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schema';\nimport { Job } from 'src/jobs/schemas/job.schema';\n\nexport type ResumeDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Resume {\n    @Prop({ required: true })\n    email: string;\n\n    @Prop()\n    userId: mongoose.Schema.Types.ObjectId;\n\n    @Prop()\n    url: string;\n\n    @Prop()\n    status: string;\n\n    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Company.name })\n    companyId: mongoose.Schema.Types.ObjectId;\n\n    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Job.name })\n    jobId: mongoose.Schema.Types.ObjectId;\n\n    @Prop({ type: mongoose.Schema.Types.Array })\n    history: {\n        status: string;\n        updatedAt: Date;\n        updatedBy: {\n            _id: mongoose.Schema.Types.ObjectId;\n            email: string;\n        };\n    }[];\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: Boolean;\n\n    @Prop()\n    deletedAt: Date;\n}\n\nexport const ResumeSchema = SchemaFactory.createForClass(Resume);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResumesController.html":{"url":"controllers/ResumesController.html","title":"controller - ResumesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResumesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                resumes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findCvByUser\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createResumeDto: CreateUserCvDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create new a resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createResumeDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('fetch list resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findCvByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findCvByUser(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('by-user')@ResponseMessage('fetch a resume by user')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('fetch a resume by id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStatus(id: string, status: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('status/:id')@ResponseMessage('Update status a resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\n\n@Controller('resumes')\nexport class ResumesController {\n    constructor(private readonly resumesService: ResumesService) {}\n\n    @Post()\n    @ResponseMessage('Create new a resume')\n    create(@Body() createResumeDto: CreateUserCvDto, @User() user: IUser) {\n        return this.resumesService.create(createResumeDto, user);\n    }\n\n    @Get()\n    @ResponseMessage('fetch list resume')\n    findAll(@Query('page') currentPage: string, @Query('limit') limit: string, @Query() qs: string) {\n        return this.resumesService.findAll(+currentPage, +limit, qs);\n    }\n\n    @Get('by-user')\n    @ResponseMessage('fetch a resume by user')\n    findCvByUser(@User() user: IUser) {\n        return this.resumesService.findCvByUser(user);\n    }\n\n    @Get(':id')\n    @ResponseMessage('fetch a resume by id')\n    findOne(@Param('id') id: string) {\n        return this.resumesService.findOne(id);\n    }\n\n    // @Patch(':id')\n    // @ResponseMessage('Update a resume')\n    // update(@Param('id') id: string, @Body() updateResumeDto: UpdateResumeDto, @User() user: IUser) {\n    //     return this.resumesService.update(id, updateResumeDto, user);\n    // }\n\n    @Patch('status/:id')\n    @ResponseMessage('Update status a resume')\n    updateStatus(@Param('id') id: string, @Body('status') status: string, @User() user: IUser) {\n        return this.resumesService.updateStatus(id, status, user);\n    }\n\n    @Delete(':id')\n    remove(@Param('id') id: string, @User() user: IUser) {\n        return this.resumesService.remove(id, user);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResumesModule.html":{"url":"modules/ResumesModule.html","title":"module - ResumesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResumesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\n\nResumesService\n\nResumesService\n\n\n\nResumesModule\n\nResumesModule\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resumes/resumes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResumesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResumesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { ResumesController } from './resumes.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Resume, ResumeSchema } from './schemas/resume.schema';\n\n@Module({\n    imports: [MongooseModule.forFeature([{ name: Resume.name, schema: ResumeSchema }])],\n    controllers: [ResumesController],\n    providers: [ResumesService],\n})\nexport class ResumesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumesService.html":{"url":"injectables/ResumesService.html","title":"injectable - ResumesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findCvByUser\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/resumes/resumes.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resumeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(CreateUserCvDto: CreateUserCvDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                CreateUserCvDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findCvByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findCvByUser(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateResumeDto: UpdateResumeDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateResumeDto\n                                            \n                                                            UpdateResumeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStatus(id: string, status: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateResumeDto, CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Resume, ResumeDocument } from './schemas/resume.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class ResumesService {\n    constructor(@InjectModel(Resume.name) private resumeModel: SoftDeleteModel) {}\n\n    async create(CreateUserCvDto: CreateUserCvDto, user: IUser) {\n        const resume = await this.resumeModel.create({\n            ...CreateUserCvDto,\n            email: user.email,\n            userId: user._id,\n            status: 'PENDING',\n            history: [\n                {\n                    status: 'PENDING',\n                    updatedAt: new Date(),\n                    updatedBy: {\n                        _id: user._id,\n                        email: user.email,\n                    },\n                },\n            ],\n            createdBy: {\n                _id: user._id,\n                email: user.email,\n            },\n        });\n\n        return {\n            _id: resume?.id,\n            createdAt: resume?.createdAt,\n        };\n    }\n\n    async findAll(currentPage: number, limit: number, qs: string) {\n        const { filter, sort, population, projection } = aqp(qs);\n\n        delete filter.page;\n        delete filter.limit;\n\n        let offset = (+currentPage - 1) * +limit;\n        let defaultLimit = +limit ? +limit : 10;\n\n        const totalItems = (await this.resumeModel.find(filter)).length;\n        const totalPages = Math.ceil(totalItems / defaultLimit);\n\n        const result = await this.resumeModel\n            .find(filter)\n            .skip(offset)\n            .limit(defaultLimit)\n            .sort(sort as any)\n            .select(projection as any)\n            .populate(population)\n            .exec();\n\n        return {\n            result,\n            meta: {\n                current: currentPage,\n                pageSize: limit,\n                pages: totalPages,\n                total: totalItems,\n            },\n        };\n    }\n\n    async findOne(id: string) {\n        if (!mongoose.Types.ObjectId.isValid(id)) {\n            throw new BadRequestException('id is not valid');\n        }\n\n        return await this.resumeModel.findOne({ _id: id });\n    }\n\n    async findCvByUser(user: IUser) {\n        return await this.resumeModel\n            .findOne({ userId: user._id })\n            .sort('-createdAt')\n            .populate([\n                { path: 'companyId', select: { name: 1 } },\n                { path: 'jobId', select: { name: 1 } },\n            ]);\n    }\n\n    async update(id: string, updateResumeDto: UpdateResumeDto, user: IUser) {\n        if (!mongoose.Types.ObjectId.isValid(id)) {\n            throw new BadRequestException('id is not valid');\n        }\n\n        const resumeUpdate = await this.resumeModel.updateOne(\n            { _id: id },\n            {\n                ...updateResumeDto,\n                email: user.email,\n                userId: user._id,\n                status: 'PENDING',\n                history: [\n                    {\n                        status: 'PENDING',\n                        updatedAt: new Date(),\n                        updatedBy: {\n                            _id: user._id,\n                            email: user.email,\n                        },\n                    },\n                ],\n                updatedBy: {\n                    _id: user._id,\n                    email: user.email,\n                },\n            },\n        );\n\n        return resumeUpdate;\n    }\n\n    async updateStatus(id: string, status: string, user: IUser) {\n        if (!mongoose.Types.ObjectId.isValid(id)) {\n            throw new BadRequestException('id is not valid');\n        }\n\n        const resumeUpdateStatus = await this.resumeModel.updateOne(\n            { _id: id },\n            {\n                status,\n                $push: {\n                    history: {\n                        status,\n                        updatedAt: new Date(),\n                        updatedBy: {\n                            _id: user._id,\n                            email: user.email,\n                        },\n                    },\n                },\n                updatedBy: {\n                    _id: user._id,\n                    email: user.email,\n                },\n            },\n        );\n\n        return resumeUpdateStatus;\n    }\n\n    async remove(id: string, user: IUser) {\n        if (!mongoose.Types.ObjectId.isValid(id)) {\n            throw new BadRequestException('id is not valid');\n        }\n\n        await this.resumeModel.updateOne(\n            { _id: id },\n            {\n                deletedBy: {\n                    _id: user._id,\n                    email: user.email,\n                },\n            },\n        );\n\n        return await this.resumeModel.softDelete({ _id: id });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/schemas/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Permission } from 'src/permissions/schemas/permission.schema';\n\nexport type RoleDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Role {\n    @Prop()\n    name: string;\n\n    @Prop()\n    description: string;\n\n    @Prop()\n    isActive: boolean;\n\n    @Prop({ type: [mongoose.Schema.Types.ObjectId], ref: Permission.name })\n    permissions: Permission[];\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: Boolean;\n\n    @Prop()\n    deletedAt: Date;\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch list role successfully')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch role by id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\n\n@Controller('roles')\nexport class RolesController {\n    constructor(private readonly rolesService: RolesService) {}\n\n    @Post()\n    @ResponseMessage('Create a new role')\n    create(@Body() createRoleDto: CreateRoleDto, @User() user: IUser) {\n        return this.rolesService.create(createRoleDto, user);\n    }\n\n    @Get()\n    @ResponseMessage('Fetch list role successfully')\n    findAll(@Query('page') currentPage: string, @Query('limit') limit: string, @Query() qs: string) {\n        return this.rolesService.findAll(+currentPage, +limit, qs);\n    }\n\n    @Get(':id')\n    @ResponseMessage('Fetch role by id')\n    findOne(@Param('id') id: string) {\n        return this.rolesService.findOne(id);\n    }\n\n    @Patch(':id')\n    @ResponseMessage('Update a role')\n    update(@Param('id') id: string, @Body() updateRoleDto: UpdateRoleDto, @User() user: IUser) {\n        return this.rolesService.update(id, updateRoleDto, user);\n    }\n\n    @Delete(':id')\n    @ResponseMessage('Delete a role')\n    remove(@Param('id') id: string, @User() user: IUser) {\n        return this.rolesService.remove(id, user);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Role, RoleSchema } from './schemas/role.schema';\n\n@Module({\n    imports: [MongooseModule.forFeature([{ name: Role.name, schema: RoleSchema }])],\n    exports: [RolesService],\n    controllers: [RolesController],\n    providers: [RolesService],\n})\nexport class RolesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: SoftDeleteModel, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Role, RoleDocument } from './schemas/role.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class RolesService {\n    constructor(\n        @InjectModel(Role.name) private roleModel: SoftDeleteModel,\n        private configService: ConfigService,\n    ) {}\n\n    async create(createRoleDto: CreateRoleDto, user: IUser) {\n        const isExistName = await this.roleModel.findOne({ name: createRoleDto.name });\n\n        if (isExistName) {\n            throw new BadRequestException('name already exists');\n        }\n\n        const permission = await this.roleModel.create({\n            ...createRoleDto,\n            createdBy: {\n                _id: user._id,\n                email: user.email,\n            },\n        });\n\n        return {\n            _id: permission._id,\n            createdAt: permission.createdAt,\n        };\n    }\n\n    async findAll(currentPage: number, limit: number, qs: string) {\n        const { filter, sort, population, projection } = aqp(qs);\n\n        delete filter.page;\n        delete filter.limit;\n\n        let offset = (+currentPage - 1) * +limit;\n        let defaultLimit = +limit ? +limit : 10;\n\n        const totalItems = (await this.roleModel.find(filter)).length;\n        const totalPages = Math.ceil(totalItems / defaultLimit);\n\n        const result = await this.roleModel\n            .find(filter)\n            .skip(offset)\n            .limit(defaultLimit)\n            .sort(sort as any)\n            .select(projection)\n            .populate(population)\n            .exec();\n\n        return {\n            result,\n            meta: {\n                current: currentPage,\n                pageSize: limit,\n                pages: totalPages,\n                total: totalItems,\n            },\n        };\n    }\n\n    async findOne(id: string) {\n        if (!mongoose.Types.ObjectId.isValid(id)) {\n            throw new BadRequestException('id is not valid');\n        }\n\n        return (await this.roleModel.findOne({ _id: id })).populate({\n            path: 'permissions',\n            select: { _id: 1, apiPath: 1, name: 1, method: 1, module: 1 },\n        });\n    }\n\n    async update(id: string, updatePermissionDto: UpdateRoleDto, user: IUser) {\n        if (!mongoose.Types.ObjectId.isValid(id)) {\n            throw new BadRequestException('id is not valid');\n        }\n\n        const permissionUpdate = await this.roleModel.updateOne(\n            { _id: id },\n            {\n                ...updatePermissionDto,\n                updatedBy: {\n                    _id: user._id,\n                    email: user.email,\n                },\n            },\n        );\n\n        return {\n            result: permissionUpdate,\n        };\n    }\n\n    async remove(id: string, user: IUser) {\n        if (!mongoose.Types.ObjectId.isValid(id)) {\n            throw new BadRequestException('id is not valid');\n        }\n\n        const foundRole = await this.roleModel.findById(id);\n\n        if (foundRole.name === this.configService.get('ROLE_ADMIN')) {\n            throw new BadRequestException('Not remove role admin');\n        }\n\n        await this.roleModel.updateOne(\n            { _id: id },\n            {\n                deletedBy: {\n                    _id: user._id,\n                    email: user.email,\n                },\n            },\n        );\n\n        return await this.roleModel.softDelete({ _id: id });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subscriber.html":{"url":"classes/Subscriber.html","title":"class - Subscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/schemas/subscriber.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type SubscriberDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Subscriber {\n    @Prop()\n    name: string;\n\n    @Prop()\n    email: string;\n\n    @Prop()\n    skills: string[];\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: Boolean;\n\n    @Prop()\n    deletedAt: Date;\n}\n\nexport const SubscriberSchema = SchemaFactory.createForClass(Subscriber);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubscribersController.html":{"url":"controllers/SubscribersController.html","title":"controller - SubscribersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubscribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscribers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                getUserSkills\n                            \n                            \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@SkipCheckPermission()@ResponseMessage('Create a new subscriber')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@SkipCheckPermission()@ResponseMessage('Fetch subscriber with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@SkipCheckPermission()@ResponseMessage('Fetch subscriber by id')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getUserSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserSkills(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('skills')@SkipCheckPermission()@ResponseMessage('Get subscriber skills')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@SkipCheckPermission()@ResponseMessage('Delete a subscriber')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@SkipCheckPermission()@ResponseMessage('Update a subscriber')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { ResponseMessage, SkipCheckPermission, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\n\n@Controller('subscribers')\nexport class SubscribersController {\n    constructor(private readonly subscribersService: SubscribersService) {}\n\n    @Post()\n    @SkipCheckPermission()\n    @ResponseMessage('Create a new subscriber')\n    create(@Body() createSubscriberDto: CreateSubscriberDto, @User() user: IUser) {\n        return this.subscribersService.create(createSubscriberDto, user);\n    }\n\n    @Post('skills')\n    @SkipCheckPermission()\n    @ResponseMessage('Get subscriber skills')\n    getUserSkills(@User() user: IUser) {\n        return this.subscribersService.getSkills(user);\n    }\n\n    @Get()\n    // @UseGuards(TestGuard)\n    @SkipCheckPermission()\n    @ResponseMessage('Fetch subscriber with paginate')\n    findAll(@Query('page') currentPage: string, @Query('limit') limit: string, @Query() qs: string) {\n        return this.subscribersService.findAll(+currentPage, +limit, qs);\n    }\n\n    @Get(':id')\n    @SkipCheckPermission()\n    @ResponseMessage('Fetch subscriber by id')\n    findOne(@Param('id') id: string) {\n        return this.subscribersService.findOne(id);\n    }\n\n    @Patch()\n    @SkipCheckPermission()\n    @ResponseMessage('Update a subscriber')\n    update(@Body() updateSubscriberDto: UpdateSubscriberDto, @User() user: IUser) {\n        return this.subscribersService.update(updateSubscriberDto, user);\n    }\n\n    @Delete(':id')\n    @SkipCheckPermission()\n    @ResponseMessage('Delete a subscriber')\n    remove(@Param('id') id: string, @User() user: IUser) {\n        return this.subscribersService.remove(id, user);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubscribersModule.html":{"url":"modules/SubscribersModule.html","title":"module - SubscribersModule","body":"\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\n\nSubscribersService\n\nSubscribersService\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscribersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { SubscribersController } from './subscribers.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber, SubscriberSchema } from './schemas/subscriber.schema';\n\n@Module({\n    imports: [MongooseModule.forFeature([{ name: Subscriber.name, schema: SubscriberSchema }])],\n    controllers: [SubscribersController],\n    providers: [SubscribersService],\n})\nexport class SubscribersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscribersService.html":{"url":"injectables/SubscribersService.html","title":"injectable - SubscribersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getSkills\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subscriberModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/subscribers.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscriberModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSkills(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Subscriber, SubscriberDocument } from './schemas/subscriber.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class SubscribersService {\n    constructor(@InjectModel(Subscriber.name) private subscriberModel: SoftDeleteModel) {}\n\n    async create(createSubscriberDto: CreateSubscriberDto, user: IUser) {\n        const isExist = await this.subscriberModel.findOne({ email: createSubscriberDto.email });\n        if (isExist) {\n            throw new BadRequestException('Email already exists');\n        }\n\n        const subscriber = await this.subscriberModel.create({\n            ...createSubscriberDto,\n            createdBy: {\n                _id: user._id,\n                email: user.email,\n            },\n        });\n\n        return {\n            result: {\n                _id: subscriber._id,\n                createdAt: subscriber.createdAt,\n            },\n        };\n    }\n\n    async findAll(currentPage: number, limit: number, qs: string) {\n        const { filter, sort, population } = aqp(qs);\n\n        delete filter.page;\n        delete filter.limit;\n\n        let offset = (+currentPage - 1) * +limit;\n        let defaultLimit = +limit ? +limit : 10;\n\n        const totalItems = (await this.subscriberModel.find(filter)).length;\n        const totalPages = Math.ceil(totalItems / defaultLimit);\n\n        const result = await this.subscriberModel\n            .find(filter)\n            .skip(offset)\n            .limit(defaultLimit)\n            .sort(sort as any)\n            .populate(population)\n            .exec();\n\n        return {\n            result,\n            meta: {\n                current: currentPage,\n                pageSize: limit,\n                pages: totalPages,\n                total: totalItems,\n            },\n        };\n    }\n\n    async findOne(id: string) {\n        if (!mongoose.Types.ObjectId.isValid(id)) {\n            throw new BadRequestException('id not valid');\n        }\n\n        const subscriber = await this.subscriberModel.findOne({ _id: id });\n        return subscriber;\n    }\n\n    async update(updateSubscriberDto: UpdateSubscriberDto, user: IUser) {\n        const subscriberUpdate = await this.subscriberModel.updateOne(\n            { email: user.email },\n            {\n                ...updateSubscriberDto,\n                updatedBy: {\n                    _id: user._id,\n                    email: user.email,\n                },\n            },\n            { upsert: true },\n        );\n\n        return {\n            result: subscriberUpdate,\n        };\n    }\n\n    async remove(id: string, user: IUser) {\n        if (!mongoose.Types.ObjectId.isValid(id)) {\n            throw new BadRequestException('id not valid');\n        }\n\n        await this.subscriberModel.updateOne(\n            { _id: id },\n            {\n                deletedBy: {\n                    _id: user._id,\n                    email: user.email,\n                },\n            },\n        );\n\n        return await this.subscriberModel.softDelete({ _id: id });\n    }\n\n    async getSkills(user: IUser) {\n        const { email } = user;\n        return await this.subscriberModel.findOne({ email }, { skills: 1 });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/TestGuard.html":{"url":"guards/TestGuard.html","title":"guard - TestGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    TestGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/users/test.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/test.guard.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class TestGuard implements CanActivate {\n    canActivate(context: ExecutionContext): boolean | Promise | Observable {\n        // Check logic\n        return false;\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/transform.interceptor.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/transform.interceptor.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestInterceptor, ExecutionContext, CallHandler } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\n\nexport interface Response {\n    statusCode: number;\n    message: string;\n    data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor implements NestInterceptor> {\n    constructor(private reflector: Reflector) {}\n\n    intercept(context: ExecutionContext, next: CallHandler): Observable> {\n        return next.handle().pipe(\n            map((data) => ({\n                statusCode: context.switchToHttp().getResponse().statusCode,\n                message: this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) || '',\n                data: {\n                    result: data?.result ?? data,\n                    meta: data?.meta, // if this is supposed to be the actual return then replace {} with data.result\n                },\n            })),\n        );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompanyDto.html":{"url":"classes/UpdateCompanyDto.html","title":"class - UpdateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/update-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Address không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/update-company.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Description không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/update-company.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Name không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/update-company.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCompanyDto } from './create-company.dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateCompanyDto {\n    @IsNotEmpty({ message: 'Name không được bỏ trống' })\n    name: string;\n\n    @IsNotEmpty({ message: 'Address không được bỏ trống' })\n    address: string;\n\n    @IsNotEmpty({ message: 'Description không được bỏ trống' })\n    description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFileDto.html":{"url":"classes/UpdateFileDto.html","title":"class - UpdateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/update-file.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateFileDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateFileDto } from './create-file.dto';\n\nexport class UpdateFileDto extends PartialType(CreateFileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobDto.html":{"url":"classes/UpdateJobDto.html","title":"class - UpdateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/update-job.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateJobDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateJobDto } from './create-job.dto';\n\nexport class UpdateJobDto extends PartialType(CreateJobDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/update-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePermissionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePermissionDto } from './create-permission.dto';\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResumeDto.html":{"url":"classes/UpdateResumeDto.html","title":"class - UpdateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateResumeDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                history\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :         History[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsArray()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\nimport { IsArray, IsDate, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { Transform, Type } from 'class-transformer';\n\nclass UpdatedBy {\n    @IsNotEmpty()\n    _id: Types.ObjectId;\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n}\n\nclass History {\n    @IsNotEmpty()\n    status: string;\n\n    @IsNotEmpty()\n    @Transform(({ value }) => new Date(value))\n    @IsDate()\n    updatedAt: Date;\n\n    @ValidateNested()\n    @IsNotEmpty()\n    @Type(() => UpdatedBy)\n    updatedBy: UpdatedBy;\n}\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {\n    @IsNotEmpty()\n    @IsArray()\n    @ValidateNested()\n    @Type(() => History)\n    history: History[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/update-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateRoleDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRoleDto } from './create-role.dto';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSubscriberDto.html":{"url":"classes/UpdateSubscriberDto.html","title":"class - UpdateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/update-subscriber.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSubscriberDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSubscriberDto } from './create-subscriber.dto';\n\nexport class UpdateSubscriberDto extends PartialType(CreateSubscriberDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(CreateUserDto, ['password'] as const)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: '_id không được bỏ trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateUserDto extends OmitType(CreateUserDto, ['password'] as const) {\n    @IsNotEmpty({ message: '_id không được bỏ trống' })\n    _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatedBy.html":{"url":"classes/UpdatedBy.html","title":"class - UpdatedBy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatedBy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\nimport { IsArray, IsDate, IsEmail, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { Types } from 'mongoose';\nimport { Transform, Type } from 'class-transformer';\n\nclass UpdatedBy {\n    @IsNotEmpty()\n    _id: Types.ObjectId;\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n}\n\nclass History {\n    @IsNotEmpty()\n    status: string;\n\n    @IsNotEmpty()\n    @Transform(({ value }) => new Date(value))\n    @IsDate()\n    updatedAt: Date;\n\n    @ValidateNested()\n    @IsNotEmpty()\n    @Type(() => UpdatedBy)\n    updatedBy: UpdatedBy;\n}\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {\n    @IsNotEmpty()\n    @IsArray()\n    @ValidateNested()\n    @Type(() => History)\n    history: History[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schemas/company.schema';\nimport { Role } from 'src/roles/schemas/role.schema';\n\nexport type UserDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class User {\n    @Prop()\n    name: string;\n\n    @Prop({ required: true })\n    email: string;\n\n    @Prop({ required: true })\n    password: string;\n\n    @Prop()\n    age: number;\n\n    @Prop()\n    gender: string;\n\n    @Prop()\n    address: string;\n\n    @Prop({ type: Object, ref: Company.name })\n    company: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Role.name })\n    role: mongoose.Schema.Types.ObjectId;\n\n    @Prop()\n    refreshToken: string;\n\n    @Prop({ type: Object })\n    createdBy: {\n        _id: mongoose.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop({ type: Object })\n    updatedBy: {\n        _id: mongoose.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop({ type: Object })\n    deletedBy: {\n        _id: mongoose.Types.ObjectId;\n        email: string;\n    };\n\n    @Prop()\n    createdAt: Date;\n\n    @Prop()\n    updatedAt: Date;\n\n    @Prop()\n    isDeleted: Boolean;\n\n    @Prop()\n    deletedAt: Date;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: '999999', description: 'password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: 'admin@gmail.com', description: 'username'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:51\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsEmail, IsMongoId, IsNotEmpty, IsNotEmptyObject, IsObject, IsString, ValidateNested } from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n    @IsNotEmpty()\n    _id: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmpty()\n    name: string;\n}\n\nexport class CreateUserDto {\n    @IsNotEmpty({ message: 'Name không được bỏ trống' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng' })\n    @IsNotEmpty({ message: 'Email không được bỏ trống' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Mật khẩu không được bỏ trống' })\n    password: string;\n\n    @IsNotEmpty({ message: 'Address không được bỏ trống' })\n    address: string;\n\n    @IsNotEmpty({ message: 'Age không được bỏ trống' })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender không được bỏ trống' })\n    gender: number;\n\n    @IsNotEmpty({ message: 'Role không được bỏ trống' })\n    @IsMongoId()\n    role: mongoose.Schema.Types.ObjectId;\n\n    @IsNotEmptyObject()\n    @IsObject()\n    @ValidateNested()\n    @Type(() => Company)\n    company: Company;\n}\n\nexport class UserLoginDto {\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({ example: 'admin@gmail.com', description: 'username' })\n    readonly username: string;\n\n    @IsString()\n    @IsNotEmpty()\n    @ApiProperty({\n        example: '999999',\n        description: 'password',\n    })\n    readonly password: string;\n}\n\nexport class RegisterUserDto {\n    @IsNotEmpty({ message: 'Name không được bỏ trống' })\n    name: string;\n\n    @IsEmail({}, { message: 'Email không đúng định dạng' })\n    @IsNotEmpty({ message: 'Email không được bỏ trống' })\n    email: string;\n\n    @IsNotEmpty({ message: 'Mật khẩu không được bỏ trống' })\n    password: string;\n\n    @IsNotEmpty({ message: 'Address không được bỏ trống' })\n    address: string;\n\n    @IsNotEmpty({ message: 'Age không được bỏ trống' })\n    age: number;\n\n    @IsNotEmpty({ message: 'Gender không được bỏ trống' })\n    gender: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new user')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(ThrottlerGuard)@Throttle({default: undefined})@ResponseMessage('Fetch user with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch user by id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a user')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@ResponseMessage('Update a user')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, Query, Res, UseGuards } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from './users.interface';\nimport { Throttle, ThrottlerGuard } from '@nestjs/throttler';\nimport { ApiBearerAuth } from '@nestjs/swagger';\n\n@Controller('users')\nexport class UsersController {\n    constructor(private readonly usersService: UsersService) {}\n\n    // @Post()\n    // create(@Body('email') email: string, @Body('password') password: string, @Body('name') name: string) {\n    //     return this.usersService.create(email, password, name);\n    // }\n    @Post()\n    @ResponseMessage('Create a new user')\n    create(@Body() createUserDto: CreateUserDto, @User() user: IUser) {\n        return this.usersService.create(createUserDto, user);\n    }\n\n    @Get()\n    // @UseGuards(TestGuard)\n    @UseGuards(ThrottlerGuard)\n    @Throttle({ default: { limit: 4, ttl: 60000 } })\n    @ResponseMessage('Fetch user with paginate')\n    findAll(@Query('page') currentPage: string, @Query('limit') limit: string, @Query() qs: string) {\n        return this.usersService.findAll(+currentPage, +limit, qs);\n    }\n\n    @Get(':id')\n    @ResponseMessage('Fetch user by id')\n    findOne(@Param('id') id: string) {\n        return this.usersService.findOne(id);\n    }\n\n    @Patch()\n    @ResponseMessage('Update a user')\n    update(@Body() updateUserDto: UpdateUserDto, @User() user: IUser) {\n        return this.usersService.update(updateUserDto, user);\n    }\n\n    @Delete(':id')\n    @ResponseMessage('Delete a user')\n    remove(@Param('id') id: string, @User() user: IUser) {\n        return this.usersService.remove(id, user);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            { name: User.name, schema: UserSchema },\n            { name: Role.name, schema: RoleSchema },\n        ]),\n    ],\n    controllers: [UsersController],\n    providers: [UsersService],\n    exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findUserByToken\n                            \n                            \n                                getHashPassword\n                            \n                            \n                                isValidPassword\n                            \n                            \n                                updateRefreshToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneUsername\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userModel: SoftDeleteModel, roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(info: CreateUserDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(info: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:170\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:166\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateUserDto, RegisterUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User, UserDocument } from './schemas/user.schema';\nimport mongoose from 'mongoose';\nimport { compareSync, genSaltSync, hashSync } from 'bcryptjs';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from './users.interface';\nimport aqp from 'api-query-params';\nimport { ConfigService } from '@nestjs/config';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport { USER_ROLE } from 'src/databases/sample';\n\n@Injectable()\nexport class UsersService {\n    constructor(\n        private configService: ConfigService,\n        @InjectModel(User.name) private userModel: SoftDeleteModel,\n\n        @InjectModel(Role.name) private roleModel: SoftDeleteModel,\n    ) {}\n\n    getHashPassword = (password: string) => {\n        const salt = genSaltSync(10);\n        return hashSync(password, salt);\n    };\n\n    isValidPassword = (password: string, hash: string) => {\n        return compareSync(password, hash);\n    };\n\n    async create(info: CreateUserDto, user: IUser) {\n        const isExist = await this.userModel.findOne({ email: info.email });\n        if (isExist) {\n            throw new BadRequestException('Email already exists');\n        }\n\n        const hashPass = this.getHashPassword(info.password);\n        const newUser = await this.userModel.create({\n            ...info,\n            password: hashPass,\n            createdBy: {\n                _id: user._id,\n                email: user.email,\n            },\n        });\n\n        return {\n            result: {\n                _id: newUser._id,\n                createdAt: newUser.createdAt,\n            },\n        };\n    }\n\n    async register(info: RegisterUserDto) {\n        const isExist = await this.userModel.findOne({ email: info.email });\n        if (isExist) {\n            throw new BadRequestException('Email already exists');\n        }\n\n        const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n        const hashPass = this.getHashPassword(info.password);\n\n        const user = await this.userModel.create({\n            ...info,\n            role: userRole,\n            password: hashPass,\n        });\n\n        return user;\n    }\n\n    async findAll(currentPage: number, limit: number, qs: string) {\n        const { filter, sort, population, projection } = aqp(qs);\n\n        delete filter.page;\n        delete filter.limit;\n\n        let offset = (+currentPage - 1) * +limit;\n        let defaultLimit = +limit ? +limit : 10;\n\n        const totalItems = (await this.userModel.find(filter)).length;\n        const totalPages = Math.ceil(totalItems / defaultLimit);\n\n        const result = await this.userModel\n            .find(filter)\n            .skip(offset)\n            .limit(defaultLimit)\n            .sort(sort as any)\n            .select({ ...projection, password: 0 })\n            .populate(population)\n            .exec();\n\n        return {\n            result,\n            meta: {\n                current: currentPage,\n                pageSize: limit,\n                pages: totalPages,\n                total: totalItems,\n            },\n        };\n    }\n\n    async findOne(id: string) {\n        // Cách 1\n        // const user = await this.userModel.findOne({ _id: id }).exec();\n        // const { password, ...result } = user.toObject();\n        // return result;\n\n        // Cách 2\n        const user = await this.userModel\n            .findOne({ _id: id })\n            .select('-password')\n            .populate({ path: 'role', select: { name: 1 } });\n        return user;\n    }\n\n    async findOneUsername(username: string) {\n        return this.userModel\n            .findOne({\n                email: username,\n            })\n            .populate({ path: 'role', select: { name: 1 } });\n    }\n\n    async update(updateUserDto: UpdateUserDto, user: IUser) {\n        const userUpdate = await this.userModel.updateOne(\n            { _id: updateUserDto._id },\n            {\n                ...updateUserDto,\n                updatedBy: {\n                    _id: user._id,\n                    email: user.email,\n                },\n            },\n        );\n\n        return {\n            result: userUpdate,\n        };\n    }\n\n    async remove(id: string, user: IUser) {\n        const foundUser: IUser = await this.userModel.findById(id);\n\n        if (foundUser && foundUser.email === this.configService.get('EMAIL_ADMIN')) {\n            throw new BadRequestException('Not remove account admin');\n        }\n\n        await this.userModel.updateOne(\n            { _id: id },\n            {\n                deletedBy: {\n                    _id: user._id,\n                    email: user.email,\n                },\n            },\n        );\n\n        return await this.userModel.softDelete({ _id: id });\n    }\n\n    updateRefreshToken = async (_id: string, refreshToken: string) => {\n        return await this.userModel.updateOne({ _id }, { refreshToken });\n    };\n\n    findUserByToken = async (refreshToken: string) => {\n        return await this.userModel.findOne({ refreshToken }).populate({ path: 'role', select: { name: 1 } });\n    };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/companies/companies.controller.ts\n            \n            controller\n            CompaniesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/companies/companies.service.ts\n            \n            injectable\n            CompaniesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/companies/dto/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/companies/dto/update-company.dto.ts\n            \n            class\n            UpdateCompanyDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/companies/schemas/company.schema.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/companies/schemas/company.schema.ts\n            \n            variable\n            CompanySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/companies/schemas/company.schema.ts\n            \n            type alias\n            CompanyDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/databases.controller.ts\n            \n            controller\n            DatabasesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/databases.service.ts\n            \n            injectable\n            DatabasesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            ADMIN_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            INIT_PERMISSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/databases/sample.ts\n            \n            variable\n            USER_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            RESPONSE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            SkipCheckPermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/decorator/customize.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/create-file.dto.ts\n            \n            class\n            CreateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/entities/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/multer.config.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            CreateJobDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/jobs/dto/update-job.dto.ts\n            \n            class\n            UpdateJobDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jobs/jobs.controller.ts\n            \n            controller\n            JobsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            class\n            Job\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                        src/jobs/schemas/job.schema.ts\n            \n            variable\n            JobSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/jobs/schemas/job.schema.ts\n            \n            type alias\n            JobDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/mail.controller.ts\n            \n            controller\n            MailController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/permissions/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/permissions.controller.ts\n            \n            controller\n            PermissionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/permissions/permissions.service.ts\n            \n            injectable\n            PermissionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/permissions/schemas/permission.schema.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/permissions/schemas/permission.schema.ts\n            \n            variable\n            PermissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/permissions/schemas/permission.schema.ts\n            \n            type alias\n            PermissionDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateResumeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateUserCvDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            History\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdatedBy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdateResumeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/resumes/resumes.controller.ts\n            \n            controller\n            ResumesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/resumes.service.ts\n            \n            injectable\n            ResumesService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            class\n            Resume\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                        src/resumes/schemas/resume.schema.ts\n            \n            variable\n            ResumeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/resumes/schemas/resume.schema.ts\n            \n            type alias\n            ResumeDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/roles/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schema.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                        src/roles/schemas/role.schema.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/roles/schemas/role.schema.ts\n            \n            type alias\n            RoleDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/dto/create-subscriber.dto.ts\n            \n            class\n            CreateSubscriberDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/subscribers/dto/update-subscriber.dto.ts\n            \n            class\n            UpdateSubscriberDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/schemas/subscriber.schema.ts\n            \n            class\n            Subscriber\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/subscribers/schemas/subscriber.schema.ts\n            \n            variable\n            SubscriberSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/subscribers/schemas/subscriber.schema.ts\n            \n            type alias\n            SubscriberDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.controller.ts\n            \n            controller\n            SubscribersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.service.ts\n            \n            injectable\n            SubscribersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                        src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/users/schemas/user.schema.ts\n            \n            type alias\n            UserDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/test.guard.ts\n            \n            guard\n            TestGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^1.6.1\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.3.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/mongoose : ^10.1.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/schedule : ^5.0.1\n        \n            @nestjs/swagger : ^11.0.3\n        \n            @nestjs/terminus : ^11.0.0\n        \n            @nestjs/throttler : ^6.4.0\n        \n            api-query-params : ^5.4.0\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            cookie-parser : ^1.4.7\n        \n            cron : 2.4.3\n        \n            ejs : ^3.1.10\n        \n            handlebars : ^4.7.8\n        \n            helmet : ^8.0.0\n        \n            mongoose : ^7.6.1\n        \n            ms : ^2.1.3\n        \n            nodemailer : ^6.10.0\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            soft-delete-plugin-mongoose : ^1.0.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompaniesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResumesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\nDatabasesService\n\nDatabasesService\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    31 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompanyDocument   (src/.../company.schema.ts)\n                        \n                        \n                            JobDocument   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionDocument   (src/.../permission.schema.ts)\n                        \n                        \n                            ResumeDocument   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            SubscriberDocument   (src/.../subscriber.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/companies/schemas/company.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CompanyDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/jobs/schemas/job.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/permissions/schemas/permission.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PermissionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/resumes/schemas/resume.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ResumeDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/roles/schemas/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/subscribers/schemas/subscriber.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SubscriberDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN_ROLE   (src/.../sample.ts)\n                        \n                        \n                            CompanySchema   (src/.../company.schema.ts)\n                        \n                        \n                            INIT_PERMISSIONS   (src/.../sample.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../customize.ts)\n                        \n                        \n                            IS_PUBLIC_PERMISSION   (src/.../customize.ts)\n                        \n                        \n                            JobSchema   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionSchema   (src/.../permission.schema.ts)\n                        \n                        \n                            Public   (src/.../customize.ts)\n                        \n                        \n                            RESPONSE_MESSAGE   (src/.../customize.ts)\n                        \n                        \n                            ResponseMessage   (src/.../customize.ts)\n                        \n                        \n                            ResumeSchema   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schema.ts)\n                        \n                        \n                            SkipCheckPermission   (src/.../customize.ts)\n                        \n                        \n                            SubscriberSchema   (src/.../subscriber.schema.ts)\n                        \n                        \n                            User   (src/.../customize.ts)\n                        \n                        \n                            USER_ROLE   (src/.../sample.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/databases/sample.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SUPER_ADMIN'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INIT_PERMISSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n        _id: '648ab415f4328bd3153ee211',\n        name: 'Get Company with paginate',\n        apiPath: '/api/v1/companies',\n        method: 'GET',\n        module: 'COMPANIES',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T06:47:49.369Z',\n        updatedAt: '2023-06-15T06:54:05.131Z',\n        __v: 0,\n        updatedBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n    },\n    {\n        _id: '648ab436f4328bd3153ee216',\n        name: 'Create Company',\n        apiPath: '/api/v1/companies',\n        method: 'POST',\n        module: 'COMPANIES',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T06:48:22.224Z',\n        updatedAt: '2023-06-15T06:48:22.224Z',\n        __v: 0,\n    },\n    {\n        _id: '648ab4d5f4328bd3153ee21b',\n        name: 'Update Company',\n        apiPath: '/api/v1/companies/:id',\n        method: 'PATCH',\n        module: 'COMPANIES',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T06:51:01.241Z',\n        updatedAt: '2023-06-15T06:51:01.241Z',\n        __v: 0,\n    },\n    {\n        _id: '648ab4ebf4328bd3153ee220',\n        name: 'Delete Company',\n        apiPath: '/api/v1/companies/:id',\n        method: 'DELETE',\n        module: 'COMPANIES',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T06:51:23.973Z',\n        updatedAt: '2023-06-15T06:51:23.973Z',\n        __v: 0,\n    },\n    {\n        _id: '648ab5a8072f2a2ef910638d',\n        name: 'Get Company by id',\n        apiPath: '/api/v1/companies/:id',\n        method: 'GET',\n        module: 'COMPANIES',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T06:54:32.799Z',\n        updatedAt: '2023-06-15T06:54:32.799Z',\n        __v: 0,\n    },\n    {\n        _id: '648ab6d3fa16b294212e4033',\n        name: 'Create User',\n        apiPath: '/api/v1/users',\n        method: 'POST',\n        module: 'USERS',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T06:59:31.898Z',\n        updatedAt: '2023-06-15T06:59:31.898Z',\n        __v: 0,\n    },\n    {\n        _id: '648ab6e7fa16b294212e4038',\n        name: 'Get User by Id',\n        apiPath: '/api/v1/users/:id',\n        method: 'GET',\n        module: 'USERS',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T06:59:51.041Z',\n        updatedAt: '2023-06-15T06:59:51.041Z',\n        __v: 0,\n    },\n    {\n        _id: '648ab6fdfa16b294212e403d',\n        name: 'Get User with paginate',\n        apiPath: '/api/v1/users',\n        method: 'GET',\n        module: 'USERS',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T07:00:13.364Z',\n        updatedAt: '2023-06-15T07:00:13.364Z',\n        __v: 0,\n    },\n    {\n        _id: '648ab719fa16b294212e4042',\n        name: 'Update User',\n        apiPath: '/api/v1/users/',\n        method: 'PATCH',\n        module: 'USERS',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T07:00:41.934Z',\n        updatedAt: '2023-06-15T07:00:41.934Z',\n        __v: 0,\n    },\n    {\n        _id: '648ab728fa16b294212e4047',\n        name: 'Delete User',\n        apiPath: '/api/v1/users/:id',\n        method: 'DELETE',\n        module: 'USERS',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T07:00:56.274Z',\n        updatedAt: '2023-06-15T07:00:56.274Z',\n        __v: 0,\n    },\n    {\n        _id: '648ab750fa16b294212e404c',\n        name: 'Upload Single File',\n        apiPath: '/api/v1/files/upload',\n        method: 'POST',\n        module: 'FILES',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T07:01:36.923Z',\n        updatedAt: '2023-06-15T07:01:36.923Z',\n        __v: 0,\n    },\n    {\n        _id: '648ad488dafdb9754f40b846',\n        name: 'Create a Job',\n        apiPath: '/api/v1/jobs',\n        method: 'POST',\n        module: 'JOBS',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T09:06:16.508Z',\n        updatedAt: '2023-06-15T09:06:16.508Z',\n        __v: 0,\n    },\n    {\n        _id: '648ad499dafdb9754f40b84b',\n        name: 'Get a job by id',\n        apiPath: '/api/v1/jobs/:id',\n        method: 'GET',\n        module: 'JOBS',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T09:06:33.697Z',\n        updatedAt: '2023-06-15T09:06:33.697Z',\n        __v: 0,\n    },\n    {\n        _id: '648ad4a6dafdb9754f40b850',\n        name: 'Update a Job',\n        apiPath: '/api/v1/jobs/:id',\n        method: 'PATCH',\n        module: 'JOBS',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T09:06:46.085Z',\n        updatedAt: '2023-06-15T09:06:46.085Z',\n        __v: 0,\n    },\n    {\n        _id: '648ad4ccdafdb9754f40b859',\n        name: 'Get Job with paginate',\n        apiPath: '/api/v1/jobs',\n        method: 'GET',\n        module: 'JOBS',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T09:07:24.175Z',\n        updatedAt: '2023-06-15T09:07:24.175Z',\n        __v: 0,\n    },\n    {\n        _id: '648ad4d9dafdb9754f40b85e',\n        name: 'Delete a Job',\n        apiPath: '/api/v1/jobs/:id',\n        method: 'DELETE',\n        module: 'JOBS',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T09:07:37.896Z',\n        updatedAt: '2023-06-15T09:07:37.896Z',\n        __v: 0,\n    },\n    {\n        _id: '648ad4fedafdb9754f40b863',\n        name: 'Create a Resume',\n        apiPath: '/api/v1/resumes',\n        method: 'POST',\n        module: 'RESUMES',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T09:08:14.659Z',\n        updatedAt: '2023-06-15T09:08:14.659Z',\n        __v: 0,\n    },\n    {\n        _id: '648ad511dafdb9754f40b868',\n        name: 'Fetch resume with paginate',\n        apiPath: '/api/v1/resumes',\n        method: 'GET',\n        module: 'RESUMES',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T09:08:33.395Z',\n        updatedAt: '2023-06-15T09:08:33.395Z',\n        __v: 0,\n    },\n    {\n        _id: '648ad522dafdb9754f40b86d',\n        name: 'Get resume by id',\n        apiPath: '/api/v1/resumes/:id',\n        method: 'GET',\n        module: 'RESUMES',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T09:08:50.801Z',\n        updatedAt: '2023-06-15T09:08:50.801Z',\n        __v: 0,\n    },\n    {\n        _id: '648ad53bdafdb9754f40b872',\n        name: 'Delete a resume',\n        apiPath: '/api/v1/resumes/:id',\n        method: 'DELETE',\n        module: 'RESUMES',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T09:09:15.785Z',\n        updatedAt: '2023-06-15T09:09:15.785Z',\n        __v: 0,\n    },\n    {\n        _id: '648ad555dafdb9754f40b877',\n        name: 'Update resume status',\n        apiPath: '/api/v1/resumes/status/:id',\n        method: 'PATCH',\n        module: 'RESUMES',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T09:09:41.694Z',\n        updatedAt: '2023-06-15T09:09:41.694Z',\n        __v: 0,\n    },\n    {\n        _id: '648ad56ddafdb9754f40b87c',\n        name: 'Fetch resumes by user',\n        apiPath: '/api/v1/resumes/by-user',\n        method: 'GET',\n        module: 'RESUMES',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T09:10:05.961Z',\n        updatedAt: '2023-06-15T09:10:05.961Z',\n        __v: 0,\n    },\n    {\n        _id: '648ad59adafdb9754f40b881',\n        name: 'Create a permission',\n        apiPath: '/api/v1/permissions',\n        method: 'POST',\n        module: 'PERMISSIONS',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T09:10:50.946Z',\n        updatedAt: '2023-06-15T09:10:50.946Z',\n        __v: 0,\n    },\n    {\n        _id: '648ad5aedafdb9754f40b886',\n        name: 'Fetch Permission with paginate',\n        apiPath: '/api/v1/permissions',\n        method: 'GET',\n        module: 'PERMISSIONS',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T09:11:10.914Z',\n        updatedAt: '2023-06-15T09:11:10.914Z',\n        __v: 0,\n    },\n    {\n        _id: '648ad5c5dafdb9754f40b88b',\n        name: 'Fetch permission by id',\n        apiPath: '/api/v1/permissions/:id',\n        method: 'GET',\n        module: 'PERMISSIONS',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T09:11:33.234Z',\n        updatedAt: '2023-06-15T09:11:33.234Z',\n        __v: 0,\n    },\n    {\n        _id: '648ad5d4dafdb9754f40b890',\n        name: 'Update a permission',\n        apiPath: '/api/v1/permissions/:id',\n        method: 'PATCH',\n        module: 'PERMISSIONS',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T09:11:48.081Z',\n        updatedAt: '2023-06-15T09:11:48.081Z',\n        __v: 0,\n    },\n    {\n        _id: '648ad5ebdafdb9754f40b895',\n        name: 'Delete a permission',\n        apiPath: '/api/v1/permissions/:id',\n        method: 'DELETE',\n        module: 'PERMISSIONS',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T09:12:11.323Z',\n        updatedAt: '2023-06-15T09:12:11.323Z',\n        __v: 0,\n    },\n    {\n        _id: '648ad613dafdb9754f40b89a',\n        name: 'Create Role',\n        apiPath: '/api/v1/roles',\n        method: 'POST',\n        module: 'ROLES',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T09:12:51.974Z',\n        updatedAt: '2023-06-15T09:12:51.974Z',\n        __v: 0,\n    },\n    {\n        _id: '648ad622dafdb9754f40b89f',\n        name: 'Fetch roles with paginate',\n        apiPath: '/api/v1/roles',\n        method: 'GET',\n        module: 'ROLES',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T09:13:06.618Z',\n        updatedAt: '2023-06-15T09:13:06.618Z',\n        __v: 0,\n    },\n    {\n        _id: '648ad630dafdb9754f40b8a6',\n        name: 'Fetch role by id',\n        apiPath: '/api/v1/roles/:id',\n        method: 'GET',\n        module: 'ROLES',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T09:13:20.853Z',\n        updatedAt: '2023-06-15T09:13:20.853Z',\n        __v: 0,\n    },\n    {\n        _id: '648ad640dafdb9754f40b8ab',\n        name: 'Update Role',\n        apiPath: '/api/v1/roles/:id',\n        method: 'PATCH',\n        module: 'ROLES',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T09:13:36.836Z',\n        updatedAt: '2023-06-15T09:13:36.836Z',\n        __v: 0,\n    },\n    {\n        _id: '648ad650dafdb9754f40b8b0',\n        name: 'Delete a Role',\n        apiPath: '/api/v1/roles/:id',\n        method: 'DELETE',\n        module: 'ROLES',\n        createdBy: {\n            _id: '647b5108a8a243e8191855b5',\n            email: 'trungem@gmail.com',\n        },\n        isDeleted: false,\n        deletedAt: null,\n        createdAt: '2023-06-15T09:13:52.798Z',\n        updatedAt: '2023-06-15T09:13:52.798Z',\n        __v: 0,\n    },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'NORMAL_USER'\n                    \n                \n\n\n        \n    \n\n    src/companies/schemas/company.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CompanySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Company)\n                    \n                \n\n\n        \n    \n\n    src/decorator/customize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublicPermission'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'message'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) => SetMetadata(RESPONSE_MESSAGE, message)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SkipCheckPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_PERMISSION, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n})\n                    \n                \n\n\n        \n    \n\n    src/jobs/schemas/job.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Job)\n                    \n                \n\n\n        \n    \n\n    src/permissions/schemas/permission.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PermissionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Permission)\n                    \n                \n\n\n        \n    \n\n    src/resumes/schemas/resume.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResumeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Resume)\n                    \n                \n\n\n        \n    \n\n    src/roles/schemas/role.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/subscribers/schemas/subscriber.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SubscriberSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Subscriber)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
